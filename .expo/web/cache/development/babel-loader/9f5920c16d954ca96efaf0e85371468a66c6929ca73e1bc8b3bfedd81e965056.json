{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector } from 'react-redux';\nimport Map, { MapMarker } from \"../../components/maps\";\nimport * as Location from 'expo-location';\nimport { useNavigation } from '@react-navigation/native';\nimport generateMission from \"../../services/missionGenerator\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar MapScreen = function MapScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      latitude: 40.416775,\n      longitude: -3.703790,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    region = _useState2[0],\n    setRegion = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchCity = _useState4[0],\n    setSearchCity = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    duration = _useState6[0],\n    setDuration = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    missionCount = _useState8[0],\n    setMissionCount = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorMsg = _useState10[0],\n    setErrorMsg = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    missions = _useState12[0],\n    setMissions = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    cityMarker = _useState14[0],\n    setCityMarker = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    suggestions = _useState16[0],\n    setSuggestions = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showSuggestions = _useState18[0],\n    setShowSuggestions = _useState18[1];\n  var missionsFromRedux = useSelector(function (state) {\n    return state.missions.missions;\n  });\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        setErrorMsg('Se requiere permiso para acceder a la ubicación');\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setRegion({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      });\n    })();\n  }, []);\n  var getCityNameFromCoordinates = function () {\n    var _ref2 = _asyncToGenerator(function* (latitude, longitude) {\n      try {\n        console.log('Obteniendo nombre de ciudad para coordenadas:', latitude, longitude);\n        setCityMarker({\n          coordinate: {\n            latitude: latitude,\n            longitude: longitude\n          },\n          title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\n          description: 'Obteniendo nombre de la ciudad...'\n        });\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        var response = yield fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1&accept-language=es`, {\n          headers: {\n            'User-Agent': 'TravelQuest/1.0'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error de la API: ${response.status}`);\n        }\n        var data = yield response.json();\n        console.log('Respuesta de la API:', data);\n        if (data.address) {\n          var cityName = data.address.city || data.address.town || data.address.village || data.address.suburb || 'Ubicación desconocida';\n          console.log('Nombre de ciudad encontrado:', cityName);\n          setCityMarker({\n            coordinate: {\n              latitude: latitude,\n              longitude: longitude\n            },\n            title: cityName,\n            description: 'Ciudad seleccionada'\n          });\n          setSearchCity(cityName);\n        } else {\n          console.log('No se encontraron resultados para las coordenadas');\n          setCityMarker({\n            coordinate: {\n              latitude: latitude,\n              longitude: longitude\n            },\n            title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\n            description: 'Ubicación seleccionada'\n          });\n          setSearchCity(`Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`);\n        }\n      } catch (error) {\n        console.error('Error al obtener nombre de la ciudad:', error);\n        setErrorMsg('Error al obtener el nombre de la ciudad. Por favor, inténtalo de nuevo.');\n        setCityMarker({\n          coordinate: {\n            latitude: latitude,\n            longitude: longitude\n          },\n          title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\n          description: 'Ubicación seleccionada'\n        });\n        setSearchCity(`Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`);\n      }\n    });\n    return function getCityNameFromCoordinates(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getCityCoordinates = function () {\n    var _ref3 = _asyncToGenerator(function* (cityName) {\n      try {\n        var response = yield fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(cityName)}&key=AIzaSyBIcgxbRUUIOuQ01SdaiBh-vZh4b2pDHGI`);\n        var data = yield response.json();\n        if (data.results && data.results[0]) {\n          var _data$results$0$geome = data.results[0].geometry.location,\n            lat = _data$results$0$geome.lat,\n            lng = _data$results$0$geome.lng;\n          setCityMarker({\n            coordinate: {\n              latitude: lat,\n              longitude: lng\n            },\n            title: cityName,\n            description: 'Ciudad seleccionada'\n          });\n          setRegion({\n            latitude: lat,\n            longitude: lng,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          });\n        }\n      } catch (error) {\n        console.error('Error al obtener coordenadas:', error);\n        setErrorMsg('Error al obtener las coordenadas de la ciudad');\n      }\n    });\n    return function getCityCoordinates(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleMapPress = function handleMapPress(event) {\n    console.log('Map pressed:', event.nativeEvent);\n    var coordinate = event.nativeEvent.coordinate;\n    if (coordinate) {\n      var latitude = coordinate.latitude,\n        longitude = coordinate.longitude;\n      setCityMarker(null);\n      setTimeout(function () {\n        getCityNameFromCoordinates(latitude, longitude);\n      }, 300);\n    }\n  };\n  var handleSearch = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var durationNum = parseInt(duration);\n      var missionCountNum = parseInt(missionCount);\n      if (searchCity && durationNum && missionCountNum) {\n        try {\n          yield getCityCoordinates(searchCity);\n          yield generateMission(searchCity, durationNum, missionCountNum);\n          navigation.navigate('Missions');\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      } else {\n        console.log('Por favor, ingresa una ciudad, duración y número de misiones válidos.');\n      }\n    });\n    return function handleSearch() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getCitySuggestions = function () {\n    var _ref5 = _asyncToGenerator(function* (query) {\n      if (query.length < 3) {\n        setSuggestions([]);\n        setShowSuggestions(false);\n        return;\n      }\n      try {\n        var response = yield fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=20&addressdetails=1&accept-language=es&featuretype=city&countrycodes=es,fr,it,de,pt,uk,us,ca,au,nz,ar,br,cl,co,mx,pe,ve,ec,bo,py,uy,cr,pa,do,pr,gt,hn,sv,ni,cu,ht,jm,tr,gr,ru,cn,jp,kr,in,th,vn,my,sg,id,ae,sa,qa,bh,kw,om,ye,eg,ma,dz,tn,ly,dz,ma,ke,za,ng,gh,ci,cm,sen`, {\n          headers: {\n            'User-Agent': 'TravelQuest/1.0'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error de la API: ${response.status}`);\n        }\n        var data = yield response.json();\n        var cities = data.filter(function (item) {\n          var _item$address, _item$address2, _item$address3;\n          var isCity = item.type === 'city' || item.class === 'place' || item.address && (item.address.city || item.address.town || item.address.village);\n          var searchTerm = query.toLowerCase();\n          var displayName = item.display_name.toLowerCase();\n          var addressName = (((_item$address = item.address) == null ? void 0 : _item$address.city) || ((_item$address2 = item.address) == null ? void 0 : _item$address2.town) || ((_item$address3 = item.address) == null ? void 0 : _item$address3.village) || '').toLowerCase();\n          var exactMatch = addressName === searchTerm || displayName === searchTerm;\n          var partialMatch = displayName.includes(searchTerm) || addressName.includes(searchTerm);\n          return isCity && (exactMatch || partialMatch);\n        }).map(function (item) {\n          var _item$address4, _item$address5, _item$address6, _item$address7, _item$address8, _item$address9;\n          return _objectSpread(_objectSpread({}, item), {}, {\n            display_name: ((_item$address4 = item.address) == null ? void 0 : _item$address4.city) || ((_item$address5 = item.address) == null ? void 0 : _item$address5.town) || ((_item$address6 = item.address) == null ? void 0 : _item$address6.village) || item.display_name.split(',')[0],\n            relevance: ((_item$address7 = item.address) == null ? void 0 : _item$address7.city) === query || ((_item$address8 = item.address) == null ? void 0 : _item$address8.town) === query || ((_item$address9 = item.address) == null ? void 0 : _item$address9.village) === query ? 0 : 1\n          });\n        }).sort(function (a, b) {\n          return a.relevance - b.relevance;\n        }).slice(0, 5);\n        setSuggestions(cities);\n        setShowSuggestions(true);\n      } catch (error) {\n        console.error('Error al obtener sugerencias:', error);\n      }\n    });\n    return function getCitySuggestions(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleCitySelect = function handleCitySelect(suggestion) {\n    var _suggestion$address, _suggestion$address2, _suggestion$address3;\n    var cityName = ((_suggestion$address = suggestion.address) == null ? void 0 : _suggestion$address.city) || ((_suggestion$address2 = suggestion.address) == null ? void 0 : _suggestion$address2.town) || ((_suggestion$address3 = suggestion.address) == null ? void 0 : _suggestion$address3.village) || suggestion.display_name.split(',')[0];\n    setSearchCity(cityName);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setCityMarker({\n      coordinate: {\n        latitude: parseFloat(suggestion.lat),\n        longitude: parseFloat(suggestion.lon)\n      },\n      title: cityName,\n      description: 'Ciudad seleccionada'\n    });\n    setRegion({\n      latitude: parseFloat(suggestion.lat),\n      longitude: parseFloat(suggestion.lon),\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsxs(View, {\n        style: styles.searchInputContainer,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Buscar ciudad\",\n          value: searchCity,\n          onChangeText: function onChangeText(text) {\n            setSearchCity(text);\n            getCitySuggestions(text);\n          },\n          onFocus: function onFocus() {\n            return setShowSuggestions(true);\n          }\n        }), showSuggestions && suggestions.length > 0 && _jsx(FlatList, {\n          data: suggestions,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref6) {\n            var item = _ref6.item;\n            return _jsx(TouchableOpacity, {\n              style: styles.suggestionItem,\n              onPress: function onPress() {\n                return handleCitySelect(item);\n              },\n              children: _jsx(Text, {\n                children: item.display_name\n              })\n            });\n          },\n          style: styles.suggestionsList\n        })]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Duraci\\xF3n (d\\xEDas)\",\n        value: duration,\n        onChangeText: setDuration,\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"N\\xFAmero de misiones\",\n        value: missionCount,\n        onChangeText: setMissionCount,\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSearch,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Buscar Aventuras\"\n        })\n      }), errorMsg ? _jsx(Text, {\n        style: styles.errorText,\n        children: errorMsg\n      }) : null]\n    }), _jsx(View, {\n      style: styles.mapContainer,\n      children: _jsxs(Map, {\n        style: styles.map,\n        region: region,\n        onRegionChangeComplete: setRegion,\n        initialRegion: region,\n        showsUserLocation: true,\n        showsMyLocationButton: true,\n        onPress: handleMapPress,\n        children: [cityMarker && _jsx(MapMarker, {\n          coordinate: cityMarker.coordinate,\n          title: cityMarker.title,\n          description: cityMarker.description\n        }, \"city-marker\"), missions.map(function (mission) {\n          return _jsx(MapMarker, {\n            coordinate: mission.location,\n            title: mission.title,\n            description: mission.description\n          }, mission.id);\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  searchContainer: {\n    backgroundColor: 'white',\n    padding: 15,\n    margin: 10,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    zIndex: 1\n  },\n  mapContainer: {\n    flex: 1,\n    margin: 10,\n    height: Platform.OS === 'web' ? height * 0.6 : height * 0.5,\n    borderRadius: 10,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  searchInputContainer: {\n    position: 'relative',\n    zIndex: 2\n  },\n  suggestionsList: {\n    position: 'absolute',\n    top: 45,\n    left: 0,\n    right: 0,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    maxHeight: 200,\n    zIndex: 1000\n  },\n  suggestionItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  }\n});\nexport default MapScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \":is(.absolute)\": {\n      \"position\": \"absolute\"\n    },\n    \":is(.relative)\": {\n      \"position\": \"relative\"\n    },\n    \":is(.flex)\": {\n      \"display\": \"flex\"\n    },\n    \":is(.hidden)\": {\n      \"display\": \"none\"\n    },\n    \":is(.elevation)\": {\n      \"elevation\": 3\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","TextInput","TouchableOpacity","Text","Dimensions","Platform","FlatList","useSelector","Map","MapMarker","Location","useNavigation","generateMission","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","MapScreen","navigation","_useState","latitude","longitude","latitudeDelta","longitudeDelta","_useState2","_slicedToArray","region","setRegion","_useState3","_useState4","searchCity","setSearchCity","_useState5","_useState6","duration","setDuration","_useState7","_useState8","missionCount","setMissionCount","_useState9","_useState10","errorMsg","setErrorMsg","_useState11","_useState12","missions","setMissions","_useState13","_useState14","cityMarker","setCityMarker","_useState15","_useState16","suggestions","setSuggestions","_useState17","_useState18","showSuggestions","setShowSuggestions","missionsFromRedux","state","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","location","getCurrentPositionAsync","coords","getCityNameFromCoordinates","_ref2","console","log","coordinate","title","toFixed","description","Promise","resolve","setTimeout","response","fetch","headers","ok","Error","data","json","address","cityName","city","town","village","suburb","error","_x","_x2","apply","arguments","getCityCoordinates","_ref3","encodeURIComponent","results","_data$results$0$geome","geometry","lat","lng","_x3","handleMapPress","event","nativeEvent","handleSearch","_ref4","durationNum","parseInt","missionCountNum","navigate","getCitySuggestions","_ref5","query","length","cities","filter","item","_item$address","_item$address2","_item$address3","isCity","type","class","searchTerm","toLowerCase","displayName","display_name","addressName","exactMatch","partialMatch","includes","map","_item$address4","_item$address5","_item$address6","_item$address7","_item$address8","_item$address9","_objectSpread","split","relevance","sort","a","b","slice","_x4","handleCitySelect","suggestion","_suggestion$address","_suggestion$address2","_suggestion$address3","parseFloat","lon","style","styles","container","children","searchContainer","searchInputContainer","input","placeholder","value","onChangeText","text","onFocus","keyExtractor","index","toString","renderItem","_ref6","suggestionItem","onPress","suggestionsList","keyboardType","button","buttonText","errorText","mapContainer","onRegionChangeComplete","initialRegion","showsUserLocation","showsMyLocationButton","mission","id","create","flex","backgroundColor","padding","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","zIndex","OS","overflow","borderColor","borderWidth","marginBottom","paddingHorizontal","alignItems","color","fontWeight","marginTop","textAlign","position","top","left","right","maxHeight","borderBottomWidth","borderBottomColor","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/Guacter/TravelQuest/src/screens/main/MapScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, TextInput, TouchableOpacity, Text, Dimensions, Platform, FlatList } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { Mission } from '../../features/missionSlice';\r\nimport Map, { MapMarker } from '../../components/maps';\r\nimport * as Location from 'expo-location';\r\nimport { getMissionsByCityAndDuration } from '../../services/missionService';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { MainTabNavigationProp } from '../../types/navigation';\r\nimport generateMission from '../../services/missionGenerator';\r\n\r\ninterface CityMarker {\r\n  coordinate: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\ninterface CitySuggestion {\r\n  display_name: string;\r\n  lat: string;\r\n  lon: string;\r\n  address?: {\r\n    city?: string;\r\n    town?: string;\r\n    village?: string;\r\n  };\r\n}\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst MapScreen = () => {\r\n  const navigation = useNavigation<MainTabNavigationProp>();\r\n  const [region, setRegion] = useState({\r\n    latitude: 40.416775,\r\n    longitude: -3.703790,\r\n    latitudeDelta: 0.0922,\r\n    longitudeDelta: 0.0421,\r\n  });\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [missionCount, setMissionCount] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\r\n  const [missions, setMissions] = useState<Mission[]>([]);\r\n  const [cityMarker, setCityMarker] = useState<CityMarker | null>(null);\r\n  const [suggestions, setSuggestions] = useState<CitySuggestion[]>([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  const missionsFromRedux = useSelector((state: RootState) => state.missions.missions);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Se requiere permiso para acceder a la ubicación');\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setRegion({\r\n        latitude: location.coords.latitude,\r\n        longitude: location.coords.longitude,\r\n        latitudeDelta: 0.0922,\r\n        longitudeDelta: 0.0421,\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  const getCityNameFromCoordinates = async (latitude: number, longitude: number) => {\r\n    try {\r\n      console.log('Obteniendo nombre de ciudad para coordenadas:', latitude, longitude);\r\n      \r\n      // Primero mostrar las coordenadas mientras se obtiene el nombre\r\n      setCityMarker({\r\n        coordinate: { latitude, longitude },\r\n        title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\r\n        description: 'Obteniendo nombre de la ciudad...'\r\n      });\r\n\r\n      // Agregar un delay para respetar los límites de la API\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1&accept-language=es`,\r\n        {\r\n          headers: {\r\n            'User-Agent': 'TravelQuest/1.0' // Identificador para la API\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error de la API: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Respuesta de la API:', data);\r\n      \r\n      if (data.address) {\r\n        const cityName = data.address.city || data.address.town || data.address.village || data.address.suburb || 'Ubicación desconocida';\r\n        console.log('Nombre de ciudad encontrado:', cityName);\r\n\r\n        setCityMarker({\r\n          coordinate: { latitude, longitude },\r\n          title: cityName,\r\n          description: 'Ciudad seleccionada'\r\n        });\r\n        setSearchCity(cityName);\r\n      } else {\r\n        console.log('No se encontraron resultados para las coordenadas');\r\n        setCityMarker({\r\n          coordinate: { latitude, longitude },\r\n          title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\r\n          description: 'Ubicación seleccionada'\r\n        });\r\n        setSearchCity(`Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener nombre de la ciudad:', error);\r\n      setErrorMsg('Error al obtener el nombre de la ciudad. Por favor, inténtalo de nuevo.');\r\n      setCityMarker({\r\n        coordinate: { latitude, longitude },\r\n        title: `Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`,\r\n        description: 'Ubicación seleccionada'\r\n      });\r\n      setSearchCity(`Lat: ${latitude.toFixed(4)}, Lng: ${longitude.toFixed(4)}`);\r\n    }\r\n  };\r\n\r\n  const getCityCoordinates = async (cityName: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(cityName)}&key=AIzaSyBIcgxbRUUIOuQ01SdaiBh-vZh4b2pDHGI`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      if (data.results && data.results[0]) {\r\n        const { lat, lng } = data.results[0].geometry.location;\r\n        setCityMarker({\r\n          coordinate: { latitude: lat, longitude: lng },\r\n          title: cityName,\r\n          description: 'Ciudad seleccionada'\r\n        });\r\n        setRegion({\r\n          latitude: lat,\r\n          longitude: lng,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener coordenadas:', error);\r\n      setErrorMsg('Error al obtener las coordenadas de la ciudad');\r\n    }\r\n  };\r\n\r\n  const handleMapPress = (event: any) => {\r\n    console.log('Map pressed:', event.nativeEvent);\r\n    const { coordinate } = event.nativeEvent;\r\n    if (coordinate) {\r\n      const { latitude, longitude } = coordinate;\r\n      // Limpiar el marcador anterior\r\n      setCityMarker(null);\r\n      // Aumentar el delay para asegurar que el marcador anterior se limpie\r\n      setTimeout(() => {\r\n        getCityNameFromCoordinates(latitude, longitude);\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    const durationNum = parseInt(duration);\r\n    const missionCountNum = parseInt(missionCount);\r\n    \r\n    if (searchCity && durationNum && missionCountNum) {\r\n      try {\r\n        await getCityCoordinates(searchCity);\r\n        await generateMission(searchCity, durationNum, missionCountNum);\r\n        navigation.navigate('Missions');\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    } else {\r\n      console.log('Por favor, ingresa una ciudad, duración y número de misiones válidos.');\r\n    }\r\n  };\r\n\r\n  const getCitySuggestions = async (query: string) => {\r\n    if (query.length < 3) {\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=20&addressdetails=1&accept-language=es&featuretype=city&countrycodes=es,fr,it,de,pt,uk,us,ca,au,nz,ar,br,cl,co,mx,pe,ve,ec,bo,py,uy,cr,pa,do,pr,gt,hn,sv,ni,cu,ht,jm,tr,gr,ru,cn,jp,kr,in,th,vn,my,sg,id,ae,sa,qa,bh,kw,om,ye,eg,ma,dz,tn,ly,dz,ma,ke,za,ng,gh,ci,cm,sen`,\r\n        {\r\n          headers: {\r\n            'User-Agent': 'TravelQuest/1.0'\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error de la API: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Filtrar y ordenar resultados por relevancia\r\n      const cities = data\r\n        .filter((item: any) => {\r\n          // Verificar que sea una ciudad\r\n          const isCity = item.type === 'city' || \r\n                        item.class === 'place' || \r\n                        (item.address && (item.address.city || item.address.town || item.address.village));\r\n          \r\n          // Verificar que el nombre coincida con la búsqueda\r\n          const searchTerm = query.toLowerCase();\r\n          const displayName = item.display_name.toLowerCase();\r\n          const addressName = (item.address?.city || item.address?.town || item.address?.village || '').toLowerCase();\r\n          \r\n          // Priorizar coincidencias exactas\r\n          const exactMatch = addressName === searchTerm || displayName === searchTerm;\r\n          const partialMatch = displayName.includes(searchTerm) || addressName.includes(searchTerm);\r\n          \r\n          return isCity && (exactMatch || partialMatch);\r\n        })\r\n        .map((item: any) => ({\r\n          ...item,\r\n          display_name: item.address?.city || item.address?.town || item.address?.village || item.display_name.split(',')[0],\r\n          relevance: item.address?.city === query || item.address?.town === query || item.address?.village === query ? 0 : 1\r\n        }))\r\n        .sort((a: any, b: any) => a.relevance - b.relevance)\r\n        .slice(0, 5);\r\n\r\n      setSuggestions(cities);\r\n      setShowSuggestions(true);\r\n    } catch (error) {\r\n      console.error('Error al obtener sugerencias:', error);\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (suggestion: CitySuggestion) => {\r\n    const cityName = suggestion.address?.city || suggestion.address?.town || suggestion.address?.village || suggestion.display_name.split(',')[0];\r\n    setSearchCity(cityName);\r\n    setSuggestions([]);\r\n    setShowSuggestions(false);\r\n    setCityMarker({\r\n      coordinate: { \r\n        latitude: parseFloat(suggestion.lat), \r\n        longitude: parseFloat(suggestion.lon) \r\n      },\r\n      title: cityName,\r\n      description: 'Ciudad seleccionada'\r\n    });\r\n    setRegion({\r\n      latitude: parseFloat(suggestion.lat),\r\n      longitude: parseFloat(suggestion.lon),\r\n      latitudeDelta: 0.0922,\r\n      longitudeDelta: 0.0421,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <View style={styles.searchInputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Buscar ciudad\"\r\n            value={searchCity}\r\n            onChangeText={(text) => {\r\n              setSearchCity(text);\r\n              getCitySuggestions(text);\r\n            }}\r\n            onFocus={() => setShowSuggestions(true)}\r\n          />\r\n          {showSuggestions && suggestions.length > 0 && (\r\n            <FlatList\r\n              data={suggestions}\r\n              keyExtractor={(item, index) => index.toString()}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={styles.suggestionItem}\r\n                  onPress={() => handleCitySelect(item)}\r\n                >\r\n                  <Text>{item.display_name}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              style={styles.suggestionsList}\r\n            />\r\n          )}\r\n        </View>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Duración (días)\"\r\n          value={duration}\r\n          onChangeText={setDuration}\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Número de misiones\"\r\n          value={missionCount}\r\n          onChangeText={setMissionCount}\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={handleSearch}>\r\n          <Text style={styles.buttonText}>Buscar Aventuras</Text>\r\n        </TouchableOpacity>\r\n        {errorMsg ? <Text style={styles.errorText}>{errorMsg}</Text> : null}\r\n      </View>\r\n      \r\n      <View style={styles.mapContainer}>\r\n        <Map\r\n          style={styles.map}\r\n          region={region}\r\n          onRegionChangeComplete={setRegion}\r\n          initialRegion={region}\r\n          showsUserLocation={true}\r\n          showsMyLocationButton={true}\r\n          onPress={handleMapPress}\r\n        >\r\n          {cityMarker && (\r\n            <MapMarker\r\n              key=\"city-marker\"\r\n              coordinate={cityMarker.coordinate}\r\n              title={cityMarker.title}\r\n              description={cityMarker.description}\r\n            />\r\n          )}\r\n          {missions.map((mission) => (\r\n            <MapMarker\r\n              key={mission.id}\r\n              coordinate={mission.location}\r\n              title={mission.title}\r\n              description={mission.description}\r\n            />\r\n          ))}\r\n        </Map>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  searchContainer: {\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n    zIndex: 1,\r\n  },\r\n  mapContainer: {\r\n    flex: 1,\r\n    margin: 10,\r\n    height: Platform.OS === 'web' ? height * 0.6 : height * 0.5,\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n    backgroundColor: 'white',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 10,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: '#ddd',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  button: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  searchInputContainer: {\r\n    position: 'relative',\r\n    zIndex: 2,\r\n  },\r\n  suggestionsList: {\r\n    position: 'absolute',\r\n    top: 45,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    maxHeight: 200,\r\n    zIndex: 1000,\r\n  },\r\n  suggestionItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n});\r\n\r\nexport default MapScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}