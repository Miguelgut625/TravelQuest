{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport ResetPasswordScreen from \"../screens/auth/ResetPasswordScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport EmailSentScreen from \"../screens/auth/EmailSentScreen\";\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  var theme = useTheme();\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName = 'help-outline';\n          switch (route.name) {\n            case 'Map':\n              iconName = focused ? 'map' : 'map-outline';\n              break;\n            case 'Missions':\n              iconName = focused ? 'list' : 'list-outline';\n              break;\n            case 'Journal':\n              iconName = focused ? 'journal' : 'journal-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        tabBarStyle: {\n          backgroundColor: 'white',\n          borderTopWidth: 1,\n          borderTopColor: '#e0e0e0',\n          height: 60,\n          paddingBottom: 8,\n          paddingTop: 8\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.primary\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        title: 'Mapa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen,\n      options: {\n        title: 'Misiones'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        title: 'Diario'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil'\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user,\n    authState = _useSelector.authState;\n  var theme = useTheme();\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: theme.colors.primary\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: authState === 'password_recovery' ? _jsx(Stack.Screen, {\n        name: \"ResetPassword\",\n        component: ResetPasswordScreen,\n        options: {\n          title: 'Recuperar Contraseña',\n          headerBackTitle: 'Volver',\n          gestureEnabled: false\n        }\n      }) : !user ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            title: 'Registro',\n            headerBackTitle: 'Volver'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EmailSent\",\n          component: EmailSentScreen,\n          options: {\n            title: 'Correo Enviado',\n            headerBackTitle: 'Volver'\n          }\n        })]\n      }) : _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","useSelector","LoginScreen","RegisterScreen","ResetPasswordScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","createBottomTabNavigator","Ionicons","EmailSentScreen","useTheme","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","theme","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","height","paddingBottom","paddingTop","headerStyle","headerTintColor","headerTitleStyle","fontWeight","children","Screen","component","options","title","AppNavigator","_useSelector","state","auth","user","authState","headerBackTitle","gestureEnabled","headerShown"],"sources":["C:/Users/PC/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport ResetPasswordScreen from '../screens/auth/ResetPasswordScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport EmailSentScreen from '../screens/auth/EmailSentScreen';\r\nimport { useTheme } from 'react-native-paper';\r\n\r\n// Definir los tipos para la navegación\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  Register: undefined;\r\n  ResetPassword: undefined;\r\n  Main: undefined;\r\n  EmailSent: undefined;\r\n};\r\n\r\ntype TabParamList = {\r\n  Map: undefined;\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: any[];\r\n  };\r\n  Journal: undefined;\r\n  Profile: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\nconst Tab = createBottomTabNavigator<TabParamList>();\r\n\r\nconst MainTabs = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName: keyof typeof Ionicons.glyphMap = 'help-outline';\r\n\r\n          switch (route.name) {\r\n            case 'Map':\r\n              iconName = focused ? 'map' : 'map-outline';\r\n              break;\r\n            case 'Missions':\r\n              iconName = focused ? 'list' : 'list-outline';\r\n              break;\r\n            case 'Journal':\r\n              iconName = focused ? 'journal' : 'journal-outline';\r\n              break;\r\n            case 'Profile':\r\n              iconName = focused ? 'person' : 'person-outline';\r\n              break;\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: 'gray',\r\n        tabBarStyle: {\r\n          backgroundColor: 'white',\r\n          borderTopWidth: 1,\r\n          borderTopColor: '#e0e0e0',\r\n          height: 60,\r\n          paddingBottom: 8,\r\n          paddingTop: 8,\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: theme.colors.primary,\r\n        },\r\n        headerTintColor: 'white',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Map\"\r\n        component={MapScreen}\r\n        options={{\r\n          title: 'Mapa',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Missions\"\r\n        component={MissionsScreen}\r\n        options={{\r\n          title: 'Misiones',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Journal\"\r\n        component={JournalScreen}\r\n        options={{\r\n          title: 'Diario',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Perfil',\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { user, authState } = useSelector((state: RootState) => state.auth);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: theme.colors.primary,\r\n          },\r\n          headerTintColor: 'white',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      >\r\n        {authState === 'password_recovery' ? (\r\n          <Stack.Screen\r\n            name=\"ResetPassword\"\r\n            component={ResetPasswordScreen}\r\n            options={{\r\n              title: 'Recuperar Contraseña',\r\n              headerBackTitle: 'Volver',\r\n              gestureEnabled: false\r\n            }}\r\n          />\r\n        ) : !user ? (\r\n          <>\r\n            <Stack.Screen\r\n              name=\"Login\"\r\n              component={LoginScreen}\r\n              options={{\r\n                headerShown: false\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Register\"\r\n              component={RegisterScreen}\r\n              options={{\r\n                title: 'Registro',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"EmailSent\"\r\n              component={EmailSentScreen}\r\n              options={{\r\n                title: 'Correo Enviado',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={MainTabs}\r\n            options={{\r\n              headerShown: false\r\n            }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}