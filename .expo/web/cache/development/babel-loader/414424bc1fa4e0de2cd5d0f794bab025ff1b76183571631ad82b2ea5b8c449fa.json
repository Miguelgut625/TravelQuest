{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\FriendsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsScreen = () => {\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const {\n          data: friendData,\n          error: friendError\n        } = await supabase.from('friends').select('user2Id').eq('user1Id', user.id);\n        if (friendError) throw friendError;\n        const friendsDetails = await Promise.all(friendData.map(async friend => {\n          const {\n            data: userData,\n            error: userError\n          } = await supabase.from('users').select('username, points').eq('id', friend.user2Id).single();\n          if (userError) {\n            console.error('Error fetching user data:', userError);\n            return null;\n          }\n          return {\n            user2Id: friend.user2Id,\n            username: userData.username,\n            points: userData.points\n          };\n        }));\n        setFriends(friendsDetails.filter(friend => friend !== null));\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFriends();\n  }, [user]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      children: \"Lista de Amigos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: friends,\n      keyExtractor: item => item.user2Id.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.friendItem,\n        children: [_jsxDEV(Text, {\n          children: item.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          children: [\"Puntos: \", item.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  friendItem: {\n    padding: 10,\n    fontSize: 18\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","ActivityIndicator","supabase","useSelector","jsxDEV","_jsxDEV","FriendsScreen","friends","setFriends","loading","setLoading","user","state","auth","fetchFriends","data","friendData","error","friendError","from","select","eq","id","friendsDetails","Promise","all","map","friend","userData","userError","user2Id","single","console","username","points","filter","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","toString","renderItem","friendItem","create","flex","justifyContent","alignItems","padding","fontSize"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/FriendsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator } from 'react-native';\r\nimport { supabase } from '../../services/supabase'; // Asegúrate de que la ruta sea correcta\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\n\r\ninterface Friend {\r\n  user2Id: string; // ID del amigo\r\n  username: string; // Nombre del amigo\r\n  points: number; // Puntos del amigo\r\n}\r\n\r\nconst FriendsScreen = () => {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state: RootState) => state.auth.user); // Obtener el usuario completo\r\n\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      if (!user) {\r\n        setLoading(false);\r\n        return; // Si no hay usuario, no hacemos nada\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const { data: friendData, error: friendError } = await supabase\r\n          .from('friends')\r\n          .select('user2Id')\r\n          .eq('user1Id', user.id); // Usar el ID del usuario\r\n\r\n        if (friendError) throw friendError;\r\n\r\n        // Obtener detalles de cada amigo\r\n        const friendsDetails = await Promise.all(\r\n          friendData.map(async (friend) => {\r\n            const { data: userData, error: userError } = await supabase\r\n              .from('users')\r\n              .select('username, points')\r\n              .eq('id', friend.user2Id) // Asegúrate de que el ID sea correcto\r\n              .single();\r\n\r\n            if (userError) {\r\n              console.error('Error fetching user data:', userError);\r\n              return null; // Manejar el error\r\n            }\r\n\r\n            return {\r\n              user2Id: friend.user2Id,\r\n              username: userData.username,\r\n              points: userData.points,\r\n            };\r\n          })\r\n        );\r\n\r\n        // Filtrar los amigos que no se pudieron obtener\r\n        setFriends(friendsDetails.filter((friend) => friend !== null));\r\n      } catch (error) {\r\n        console.error('Error fetching friends:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFriends();\r\n  }, [user]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Lista de Amigos</Text>\r\n      <FlatList\r\n        data={friends}\r\n        keyExtractor={(item) => item.user2Id.toString()} // Asegúrate de que user2Id sea único\r\n        renderItem={({ item }) => (\r\n          <View style={styles.friendItem}>\r\n            <Text>{item.username}</Text>\r\n            <Text>Puntos: {item.points}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  friendItem: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default FriendsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAEnD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMe,IAAI,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAE/DhB,SAAS,CAAC,MAAM;IACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACH,IAAI,EAAE;QACTD,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACFA,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM;UAAEK,IAAI,EAAEC,UAAU;UAAEC,KAAK,EAAEC;QAAY,CAAC,GAAG,MAAMhB,QAAQ,CAC5DiB,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,SAAS,CAAC,CACjBC,EAAE,CAAC,SAAS,EAAEV,IAAI,CAACW,EAAE,CAAC;QAEzB,IAAIJ,WAAW,EAAE,MAAMA,WAAW;QAGlC,MAAMK,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCT,UAAU,CAACU,GAAG,CAAC,MAAOC,MAAM,IAAK;UAC/B,MAAM;YAAEZ,IAAI,EAAEa,QAAQ;YAAEX,KAAK,EAAEY;UAAU,CAAC,GAAG,MAAM3B,QAAQ,CACxDiB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,kBAAkB,CAAC,CAC1BC,EAAE,CAAC,IAAI,EAAEM,MAAM,CAACG,OAAO,CAAC,CACxBC,MAAM,CAAC,CAAC;UAEX,IAAIF,SAAS,EAAE;YACbG,OAAO,CAACf,KAAK,CAAC,2BAA2B,EAAEY,SAAS,CAAC;YACrD,OAAO,IAAI;UACb;UAEA,OAAO;YACLC,OAAO,EAAEH,MAAM,CAACG,OAAO;YACvBG,QAAQ,EAAEL,QAAQ,CAACK,QAAQ;YAC3BC,MAAM,EAAEN,QAAQ,CAACM;UACnB,CAAC;QACH,CAAC,CACH,CAAC;QAGD1B,UAAU,CAACe,cAAc,CAACY,MAAM,CAAER,MAAM,IAAKA,MAAM,KAAK,IAAI,CAAC,CAAC;MAChE,CAAC,CAAC,OAAOV,KAAK,EAAE;QACde,OAAO,CAACf,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,IAAIF,OAAO,EAAE;IACX,OACEJ,OAAA,CAACR,IAAI;MAACuC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAC5BlC,OAAA,CAACJ,iBAAiB;QAACuC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEX;EAEA,OACExC,OAAA,CAACR,IAAI;IAACuC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BlC,OAAA,CAACP,IAAI;MAAAyC,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC5BxC,OAAA,CAACL,QAAQ;MACPe,IAAI,EAAER,OAAQ;MACduC,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACjB,OAAO,CAACkB,QAAQ,CAAC,CAAE;MAChDC,UAAU,EAAEA,CAAC;QAAEF;MAAK,CAAC,KACnB1C,OAAA,CAACR,IAAI;QAACuC,KAAK,EAAEC,MAAM,CAACa,UAAW;QAAAX,QAAA,GAC7BlC,OAAA,CAACP,IAAI;UAAAyC,QAAA,EAAEQ,IAAI,CAACd;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC5BxC,OAAA,CAACP,IAAI;UAAAyC,QAAA,GAAC,UAAQ,EAACQ,IAAI,CAACb,MAAM;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAED,MAAMR,MAAM,GAAGtC,UAAU,CAACoD,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDJ,UAAU,EAAE;IACVK,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAelD,aAAa","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}