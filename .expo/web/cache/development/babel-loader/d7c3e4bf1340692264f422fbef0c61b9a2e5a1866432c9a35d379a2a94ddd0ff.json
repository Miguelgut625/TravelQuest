{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\LoginScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, setAuthState, setError } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const error = useSelector(state => state.auth.error);\n  const handleLogin = async () => {\n    if (!email || !password) {\n      dispatch(setError('Por favor ingresa email y contraseña'));\n      return;\n    }\n    try {\n      setLoading(true);\n      dispatch(setAuthState('loading'));\n      dispatch(setError(null));\n      console.log('Iniciando sesión para:', email);\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: email.trim(),\n        password: password.trim()\n      });\n      if (error) {\n        console.error('Error de autenticación:', error);\n        if (error.message.includes('Invalid login credentials')) {\n          dispatch(setError('Email o contraseña incorrectos.'));\n        } else if (error.message.includes('User not allowed') || error.message.includes('Email not confirmed')) {\n          dispatch(setError('Necesitas verificar tu correo electrónico antes de iniciar sesión'));\n          navigation.navigate('VerifyEmail', {\n            email: email.trim()\n          });\n          return;\n        } else {\n          dispatch(setError('Error al iniciar sesión: ' + error.message));\n        }\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n      if (!data.user) {\n        dispatch(setError('No se encontró el usuario'));\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n      console.log('Login exitoso:', data.user.email);\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.from('users').select('username').eq('id', data.user.id).single();\n      if (userError) {\n        console.error('Error obteniendo datos del usuario:', userError);\n      }\n      dispatch(setUser({\n        email: data.user.email || '',\n        id: data.user.id,\n        username: userData?.username\n      }));\n      dispatch(setAuthState('authenticated'));\n      navigation.navigate('Main');\n    } catch (error) {\n      console.error('Error inesperado durante el login:', error);\n      dispatch(setError('Ocurrió un error inesperado'));\n      dispatch(setAuthState('unauthenticated'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleForgotPassword = () => {\n    navigation.navigate('ForgotPassword');\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Text, {\n        style: styles.title,\n        children: \"TravelQuest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.formContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChangeText: setEmail,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), error && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.forgotPasswordButton,\n        onPress: handleForgotPassword,\n        disabled: loading,\n        children: _jsxDEV(Text, {\n          style: styles.forgotPasswordText,\n          children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Register'),\n        children: _jsxDEV(Text, {\n          style: styles.link,\n          children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ActivityIndicator","useDispatch","useSelector","setUser","setAuthState","setError","supabase","useNavigation","styles","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","loading","setLoading","dispatch","navigation","error","state","auth","handleLogin","console","log","data","signInWithPassword","trim","message","includes","navigate","user","userData","userError","from","select","eq","id","single","username","handleForgotPassword","style","container","children","logoContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","forgotPasswordButton","forgotPasswordText","link"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, Alert } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, setAuthState, setError } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../navigation/types';\nimport styles from './style';\n\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigation = useNavigation<NavigationProp>();\n  const error = useSelector((state: any) => state.auth.error);\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      dispatch(setError('Por favor ingresa email y contraseña'));\n      return;\n    }\n\n    try {\n      setLoading(true);\n      dispatch(setAuthState('loading'));\n      dispatch(setError(null));\n\n      console.log('Iniciando sesión para:', email);\n\n      // Intentar iniciar sesión directamente\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: email.trim(),\n        password: password.trim()\n      });\n\n      if (error) {\n        console.error('Error de autenticación:', error);\n        if (error.message.includes('Invalid login credentials')) {\n          dispatch(setError('Email o contraseña incorrectos.'));\n        } else if (error.message.includes('User not allowed') || error.message.includes('Email not confirmed')) {\n          dispatch(setError('Necesitas verificar tu correo electrónico antes de iniciar sesión'));\n          // Redirigir a la pantalla de verificación\n          navigation.navigate('VerifyEmail', { email: email.trim() });\n          return;\n        } else {\n          dispatch(setError('Error al iniciar sesión: ' + error.message));\n        }\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n\n      if (!data.user) {\n        dispatch(setError('No se encontró el usuario'));\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n\n      console.log('Login exitoso:', data.user.email);\n\n      // Obtener datos adicionales del usuario\n      const { data: userData, error: userError } = await supabase\n        .from('users')\n        .select('username')\n        .eq('id', data.user.id)\n        .single();\n\n      if (userError) {\n        console.error('Error obteniendo datos del usuario:', userError);\n      }\n\n      // Actualizar el estado con los datos del usuario\n      dispatch(setUser({\n        email: data.user.email || '',\n        id: data.user.id,\n        username: userData?.username\n      }));\n      dispatch(setAuthState('authenticated'));\n      navigation.navigate('Main');\n\n    } catch (error) {\n      console.error('Error inesperado durante el login:', error);\n      dispatch(setError('Ocurrió un error inesperado'));\n      dispatch(setAuthState('unauthenticated'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleForgotPassword = () => {\n    navigation.navigate('ForgotPassword');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.logoContainer}>\n        <Text style={styles.title}>TravelQuest</Text>\n      </View>\n\n      <View style={styles.formContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Correo electrónico\"\n          value={email}\n          onChangeText={setEmail}\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Contraseña\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n        />\n\n        {error && (\n          <Text style={styles.errorText}>{error}</Text>\n        )}\n\n        <TouchableOpacity\n          style={styles.button}\n          onPress={handleLogin}\n          disabled={loading}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"white\" />\n          ) : (\n            <Text style={styles.buttonText}>Iniciar Sesión</Text>\n          )}\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.forgotPasswordButton}\n          onPress={handleForgotPassword}\n          disabled={loading}\n        >\n          <Text style={styles.forgotPasswordText}>¿Olvidaste tu contraseña?</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n          <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}