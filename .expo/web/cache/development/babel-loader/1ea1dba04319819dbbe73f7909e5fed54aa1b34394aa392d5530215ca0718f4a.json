{"ast":null,"code":"import { supabase } from './supabase';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NotificationService from './NotificationService';\nexport const removeFriend = async (userId, friendId) => {\n  try {\n    const {\n      data: friendData,\n      error: friendError\n    } = await supabase.from('users').select('username').eq('id', friendId).single();\n    if (friendError) throw friendError;\n    const {\n      error\n    } = await supabase.from('friends').delete().or(`user1Id.eq.${userId},user2Id.eq.${userId}`).or(`user1Id.eq.${friendId},user2Id.eq.${friendId}`);\n    if (error) throw error;\n    const notificationService = NotificationService.getInstance();\n    await notificationService.createNotification(friendId, 'Amistad eliminada', `Has sido eliminado/a de la lista de amigos`, 'friend_removed');\n    Alert.alert('Éxito', `Amigo eliminado correctamente`);\n    return true;\n  } catch (err) {\n    console.error(err);\n    Alert.alert('Error', 'No se pudo eliminar el amigo');\n    return false;\n  }\n};","map":{"version":3,"names":["supabase","Alert","NotificationService","removeFriend","userId","friendId","data","friendData","error","friendError","from","select","eq","single","delete","or","notificationService","getInstance","createNotification","alert","err","console"],"sources":["C:/Users/PC/TravelQuest/src/services/friendService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport { Alert } from 'react-native';\r\nimport NotificationService from './NotificationService';\r\n\r\ninterface Friend {\r\n    user2Id: string;\r\n    username: string;\r\n    points: number;\r\n}\r\n\r\nexport const removeFriend = async (\r\n    userId: string,\r\n    friendId: string\r\n): Promise<boolean> => {\r\n    try {\r\n        // Obtener el nombre del amigo que se va a eliminar\r\n        const { data: friendData, error: friendError } = await supabase\r\n            .from('users')\r\n            .select('username')\r\n            .eq('id', friendId)\r\n            .single();\r\n\r\n        if (friendError) throw friendError;\r\n\r\n        // Eliminar la relación de amistad\r\n        const { error } = await supabase\r\n            .from('friends')\r\n            .delete()\r\n            .or(`user1Id.eq.${userId},user2Id.eq.${userId}`)\r\n            .or(`user1Id.eq.${friendId},user2Id.eq.${friendId}`);\r\n\r\n        if (error) throw error;\r\n\r\n        // Enviar notificación al amigo eliminado\r\n        const notificationService = NotificationService.getInstance();\r\n        await notificationService.createNotification(\r\n            friendId,\r\n            'Amistad eliminada',\r\n            `Has sido eliminado/a de la lista de amigos`,\r\n            'friend_removed'\r\n        );\r\n\r\n        Alert.alert('Éxito', `Amigo eliminado correctamente`);\r\n        return true;\r\n    } catch (err) {\r\n        console.error(err);\r\n        Alert.alert('Error', 'No se pudo eliminar el amigo');\r\n        return false;\r\n    }\r\n}; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAAC,OAAAC,KAAA;AAEtC,OAAOC,mBAAmB,MAAM,uBAAuB;AAQvD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CACxBC,MAAc,EACdC,QAAgB,KACG;EACnB,IAAI;IAEA,MAAM;MAAEC,IAAI,EAAEC,UAAU;MAAEC,KAAK,EAAEC;IAAY,CAAC,GAAG,MAAMT,QAAQ,CAC1DU,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,UAAU,CAAC,CAClBC,EAAE,CAAC,IAAI,EAAEP,QAAQ,CAAC,CAClBQ,MAAM,CAAC,CAAC;IAEb,IAAIJ,WAAW,EAAE,MAAMA,WAAW;IAGlC,MAAM;MAAED;IAAM,CAAC,GAAG,MAAMR,QAAQ,CAC3BU,IAAI,CAAC,SAAS,CAAC,CACfI,MAAM,CAAC,CAAC,CACRC,EAAE,CAAC,cAAcX,MAAM,eAAeA,MAAM,EAAE,CAAC,CAC/CW,EAAE,CAAC,cAAcV,QAAQ,eAAeA,QAAQ,EAAE,CAAC;IAExD,IAAIG,KAAK,EAAE,MAAMA,KAAK;IAGtB,MAAMQ,mBAAmB,GAAGd,mBAAmB,CAACe,WAAW,CAAC,CAAC;IAC7D,MAAMD,mBAAmB,CAACE,kBAAkB,CACxCb,QAAQ,EACR,mBAAmB,EACnB,4CAA4C,EAC5C,gBACJ,CAAC;IAEDJ,KAAK,CAACkB,KAAK,CAAC,OAAO,EAAE,+BAA+B,CAAC;IACrD,OAAO,IAAI;EACf,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACb,KAAK,CAACY,GAAG,CAAC;IAClBnB,KAAK,CAACkB,KAAK,CAAC,OAAO,EAAE,8BAA8B,CAAC;IACpD,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}