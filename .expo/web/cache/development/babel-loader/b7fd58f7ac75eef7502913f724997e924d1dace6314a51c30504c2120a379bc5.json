{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./src/features/store\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { testSupabaseConnection } from \"./src/services/testConnection\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { linking } from \"./src/navigation/linking\";\nimport { supabase } from \"./src/services/supabase\";\nimport { setUser, setToken, logout, setAuthState } from \"./src/features/authSlice\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    retryCount = _useState4[0],\n    setRetryCount = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isInitializing = _useState6[0],\n    setIsInitializing = _useState6[1];\n  useEffect(function () {\n    var initializeApp = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          console.log('Iniciando la aplicación...');\n          var isConnected = yield testSupabaseConnection();\n          console.log('Estado de conexión Supabase:', isConnected ? 'Exitosa' : 'Fallida');\n          var initialUrl = yield Linking.getInitialURL();\n          console.log('URL inicial:', initialUrl);\n          if (initialUrl != null && initialUrl.includes('type=recovery')) {\n            console.log('Detectado enlace de recuperación de contraseña');\n            store.dispatch(setAuthState('password_recovery'));\n            setIsInitializing(false);\n            return;\n          }\n          var _yield$supabase$auth$ = yield supabase.auth.getSession(),\n            session = _yield$supabase$auth$.data.session,\n            sessionError = _yield$supabase$auth$.error;\n          if (sessionError) {\n            console.error('Error al verificar sesión:', sessionError);\n            store.dispatch(logout());\n          } else if (session) {\n            var currentTime = Math.floor(Date.now() / 1000);\n            if (session.expires_at && session.expires_at < currentTime) {\n              console.log('La sesión ha expirado, cerrando sesión...');\n              store.dispatch(logout());\n            } else {\n              console.log('Sesión activa encontrada, configurando usuario...');\n              store.dispatch(setUser({\n                id: session.user.id,\n                email: session.user.email,\n                username: session.user.user_metadata.username || session.user.email.split('@')[0]\n              }));\n              store.dispatch(setToken(session.access_token));\n              store.dispatch(setAuthState('authenticated'));\n            }\n          } else {\n            console.log('No hay sesión activa, mostrando pantalla de login');\n            store.dispatch(setAuthState('unauthenticated'));\n          }\n          console.log('Inicialización completada');\n        } catch (error) {\n          console.error('Error inicializando la app:', error);\n          setError('Error al inicializar la aplicación');\n          store.dispatch(logout());\n        } finally {\n          setIsInitializing(false);\n        }\n      });\n      return function initializeApp() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initializeApp();\n  }, [retryCount]);\n  if (isInitializing) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#f5f5f5'\n      },\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20,\n          color: '#666'\n        },\n        children: \"Inicializando...\"\n      }), error && _jsx(Text, {\n        style: {\n          marginTop: 10,\n          color: 'red',\n          textAlign: 'center',\n          padding: 20\n        },\n        children: error\n      })]\n    });\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsx(AppNavigator, {\n        linking: linking\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Provider","PersistGate","store","persistor","AppNavigator","testSupabaseConnection","ActivityIndicator","View","Text","linking","supabase","setUser","setToken","logout","setAuthState","Linking","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","retryCount","setRetryCount","_useState5","_useState6","isInitializing","setIsInitializing","initializeApp","_ref","_asyncToGenerator","console","log","isConnected","initialUrl","getInitialURL","includes","dispatch","_yield$supabase$auth$","auth","getSession","session","data","sessionError","currentTime","Math","floor","Date","now","expires_at","id","user","email","username","user_metadata","split","access_token","apply","arguments","style","flex","justifyContent","alignItems","backgroundColor","children","size","color","marginTop","textAlign","padding","loading"],"sources":["C:/Users/PC/TravelQuest/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './src/features/store';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { testSupabaseConnection } from './src/services/testConnection';\r\nimport { ActivityIndicator, View, Text } from 'react-native';\r\nimport { linking } from './src/navigation/linking';\r\nimport { supabase } from './src/services/supabase';\r\nimport { setUser, setToken, logout, setAuthState } from './src/features/authSlice';\r\nimport { Linking } from 'react-native';\r\n\r\nconst App = () => {\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [isInitializing, setIsInitializing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      try {\r\n        console.log('Iniciando la aplicación...');\r\n\r\n        // Verificar conexión con Supabase\r\n        const isConnected = await testSupabaseConnection();\r\n        console.log('Estado de conexión Supabase:', isConnected ? 'Exitosa' : 'Fallida');\r\n\r\n        // Verificar si la app se abrió desde un enlace de recuperación de contraseña\r\n        const initialUrl = await Linking.getInitialURL();\r\n        console.log('URL inicial:', initialUrl);\r\n\r\n        if (initialUrl?.includes('type=recovery')) {\r\n          console.log('Detectado enlace de recuperación de contraseña');\r\n          store.dispatch(setAuthState('password_recovery'));\r\n          setIsInitializing(false);\r\n          return;\r\n        }\r\n\r\n        // Verificar sesión actual\r\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n\r\n        if (sessionError) {\r\n          console.error('Error al verificar sesión:', sessionError);\r\n          store.dispatch(logout());\r\n        } else if (session) {\r\n          // Aquí puedes agregar lógica para verificar si la sesión ha expirado\r\n          const currentTime = Math.floor(Date.now() / 1000);\r\n          if (session.expires_at && session.expires_at < currentTime) {\r\n            console.log('La sesión ha expirado, cerrando sesión...');\r\n            store.dispatch(logout());\r\n          } else {\r\n            console.log('Sesión activa encontrada, configurando usuario...');\r\n            store.dispatch(setUser({\r\n              id: session.user.id,\r\n              email: session.user.email!,\r\n              username: session.user.user_metadata.username || session.user.email!.split('@')[0],\r\n            }));\r\n            store.dispatch(setToken(session.access_token));\r\n            store.dispatch(setAuthState('authenticated'));\r\n          }\r\n        } else {\r\n          console.log('No hay sesión activa, mostrando pantalla de login');\r\n          store.dispatch(setAuthState('unauthenticated'));\r\n        }\r\n\r\n        console.log('Inicialización completada');\r\n      } catch (error) {\r\n        console.error('Error inicializando la app:', error);\r\n        setError('Error al inicializar la aplicación');\r\n        store.dispatch(logout());\r\n      } finally {\r\n        setIsInitializing(false);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n  }, [retryCount]);\r\n\r\n  if (isInitializing) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={{ marginTop: 20, color: '#666' }}>\r\n          Inicializando...\r\n        </Text>\r\n        {error && (\r\n          <Text style={{ marginTop: 10, color: 'red', textAlign: 'center', padding: 20 }}>\r\n            {error}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <AppNavigator linking={linking} />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}