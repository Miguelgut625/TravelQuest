{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MissionCard = function MissionCard(_ref) {\n  var mission = _ref.mission;\n  return _jsxs(TouchableOpacity, {\n    style: styles.card,\n    children: [_jsxs(View, {\n      style: styles.cardHeader,\n      children: [_jsx(Text, {\n        style: styles.cardTitle,\n        children: mission.title\n      }), _jsx(Text, {\n        style: [styles.badge, {\n          backgroundColor: mission.completed ? '#4CAF50' : '#FFA000'\n        }],\n        children: mission.completed ? 'Completada' : 'Pendiente'\n      })]\n    }), _jsx(Text, {\n      style: styles.cardDescription,\n      children: mission.description\n    }), _jsxs(View, {\n      style: styles.cardFooter,\n      children: [_jsxs(Text, {\n        style: styles.difficulty,\n        children: [\"Dificultad: \", mission.difficulty]\n      }), _jsxs(Text, {\n        style: styles.points,\n        children: [mission.points, \" puntos\"]\n      })]\n    })]\n  });\n};\nvar MissionsScreen = function MissionsScreen() {\n  var _useSelector = useSelector(function (state) {\n      return state.missions;\n    }),\n    activeMissions = _useSelector.activeMissions,\n    completedMissions = _useSelector.completedMissions;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Tus Misiones\"\n    }), _jsxs(View, {\n      style: styles.tabs,\n      children: [_jsxs(Text, {\n        style: styles.tabTitle,\n        children: [\"Misiones Activas (\", activeMissions.length, \")\"]\n      }), _jsx(FlatList, {\n        data: activeMissions,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(MissionCard, {\n            mission: item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        style: styles.list\n      }), _jsxs(Text, {\n        style: styles.tabTitle,\n        children: [\"Misiones Completadas (\", completedMissions.length, \")\"]\n      }), _jsx(FlatList, {\n        data: completedMissions,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(MissionCard, {\n            mission: item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        style: styles.list\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#333'\n  },\n  tabs: {\n    flex: 1\n  },\n  tabTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 10,\n    color: '#666'\n  },\n  list: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  }\n});\nexport default MissionsScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \":is(.flex)\": {\n      \"display\": \"flex\"\n    },\n    \":is(.elevation)\": {\n      \"elevation\": 3\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","View","Text","FlatList","StyleSheet","TouchableOpacity","useSelector","jsx","_jsx","jsxs","_jsxs","MissionCard","_ref","mission","style","styles","card","children","cardHeader","cardTitle","title","badge","backgroundColor","completed","cardDescription","description","cardFooter","difficulty","points","MissionsScreen","_useSelector","state","missions","activeMissions","completedMissions","container","tabs","tabTitle","length","data","renderItem","_ref2","item","keyExtractor","id","list","_ref3","create","flex","padding","fontSize","fontWeight","marginBottom","color","marginVertical","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/migue/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { Mission } from '../../features/missionSlice';\r\n\r\nconst MissionCard = ({ mission }: { mission: Mission }) => (\r\n  <TouchableOpacity style={styles.card}>\r\n    <View style={styles.cardHeader}>\r\n      <Text style={styles.cardTitle}>{mission.title}</Text>\r\n      <Text style={[styles.badge, { backgroundColor: mission.completed ? '#4CAF50' : '#FFA000' }]}>\r\n        {mission.completed ? 'Completada' : 'Pendiente'}\r\n      </Text>\r\n    </View>\r\n    <Text style={styles.cardDescription}>{mission.description}</Text>\r\n    <View style={styles.cardFooter}>\r\n      <Text style={styles.difficulty}>Dificultad: {mission.difficulty}</Text>\r\n      <Text style={styles.points}>{mission.points} puntos</Text>\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MissionsScreen = () => {\r\n  const { activeMissions, completedMissions } = useSelector((state: RootState) => state.missions);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Tus Misiones</Text>\r\n      <View style={styles.tabs}>\r\n        <Text style={styles.tabTitle}>Misiones Activas ({activeMissions.length})</Text>\r\n        <FlatList\r\n          data={activeMissions}\r\n          renderItem={({ item }) => <MissionCard mission={item} />}\r\n          keyExtractor={(item) => item.id}\r\n          style={styles.list}\r\n        />\r\n        <Text style={styles.tabTitle}>Misiones Completadas ({completedMissions.length})</Text>\r\n        <FlatList\r\n          data={completedMissions}\r\n          renderItem={({ item }) => <MissionCard mission={item} />}\r\n          keyExtractor={(item) => item.id}\r\n          style={styles.list}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: '#333',\r\n  },\r\n  tabs: {\r\n    flex: 1,\r\n  },\r\n  tabTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginVertical: 10,\r\n    color: '#666',\r\n  },\r\n  list: {\r\n    flex: 1,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}