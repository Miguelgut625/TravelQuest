{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\NotificationTestScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NotificationService from '../services/NotificationService';\nimport * as Notifications from 'expo-notifications';\nimport * as Device from 'expo-device';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationTestScreen = () => {\n  const [expoPushToken, setExpoPushToken] = useState(null);\n  const notificationService = NotificationService.getInstance();\n  useEffect(() => {\n    const notificationListener = Notifications.addNotificationReceivedListener(notification => {\n      console.log('Notificación recibida:', notification);\n    });\n    const responseListener = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log('Usuario interactuó con la notificación:', response);\n    });\n    return () => {\n      notificationListener.remove();\n      responseListener.remove();\n    };\n  }, []);\n  const registerForPushNotifications = async () => {\n    try {\n      if (!Device.isDevice) {\n        Alert.alert('Error', 'Debes usar un dispositivo físico para las notificaciones push');\n        return;\n      }\n      const {\n        status: existingStatus\n      } = await Notifications.getPermissionsAsync();\n      let finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        const {\n          status\n        } = await Notifications.requestPermissionsAsync();\n        finalStatus = status;\n      }\n      if (finalStatus !== 'granted') {\n        Alert.alert('Error', 'Permiso para notificaciones denegado');\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      setExpoPushToken(token);\n      console.log('Token de notificación push:', token);\n      Alert.alert('Éxito', 'Registrado para notificaciones push');\n    } catch (error) {\n      console.error('Error al registrar notificaciones push:', error);\n      Alert.alert('Error', 'No se pudo registrar para notificaciones push');\n    }\n  };\n  const testLocalNotification = async () => {\n    try {\n      await notificationService.scheduleLocalNotification('¡Notificación Local!', 'Esta es una notificación local de prueba', {\n        seconds: 5\n      });\n      Alert.alert('Éxito', 'Notificación local programada');\n    } catch (error) {\n      console.error('Error al programar notificación local:', error);\n      Alert.alert('Error', 'No se pudo programar la notificación local');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Prueba de Notificaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Notificaciones Locales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), _jsxDEV(Button, {\n        title: \"Enviar Notificaci\\xF3n Local\",\n        onPress: testLocalNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Notificaciones Push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), _jsxDEV(Button, {\n        title: \"Registrar para Push\",\n        onPress: registerForPushNotifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), expoPushToken && _jsxDEV(Text, {\n        style: styles.tokenText,\n        children: [\"Token: \", expoPushToken.substring(0, 20), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  section: {\n    marginBottom: 30,\n    padding: 15,\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  tokenText: {\n    marginTop: 10,\n    fontSize: 12,\n    color: '#666'\n  }\n});\nexport default NotificationTestScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","StyleSheet","Alert","NotificationService","Notifications","Device","jsxDEV","_jsxDEV","NotificationTestScreen","expoPushToken","setExpoPushToken","notificationService","getInstance","notificationListener","addNotificationReceivedListener","notification","console","log","responseListener","addNotificationResponseReceivedListener","response","remove","registerForPushNotifications","isDevice","alert","status","existingStatus","getPermissionsAsync","finalStatus","requestPermissionsAsync","token","getExpoPushTokenAsync","data","error","testLocalNotification","scheduleLocalNotification","seconds","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","section","sectionTitle","onPress","tokenText","substring","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","marginTop","color"],"sources":["C:/Users/PC/TravelQuest/src/screens/NotificationTestScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, StyleSheet, Alert } from 'react-native';\r\nimport NotificationService from '../services/NotificationService';\r\nimport * as Notifications from 'expo-notifications';\r\nimport * as Device from 'expo-device';\r\n\r\nconst NotificationTestScreen = () => {\r\n    const [expoPushToken, setExpoPushToken] = useState<string | null>(null);\r\n    const notificationService = NotificationService.getInstance();\r\n\r\n    useEffect(() => {\r\n        // Configurar el manejador de notificaciones\r\n        const notificationListener = Notifications.addNotificationReceivedListener(notification => {\r\n            console.log('Notificación recibida:', notification);\r\n        });\r\n\r\n        const responseListener = Notifications.addNotificationResponseReceivedListener(response => {\r\n            console.log('Usuario interactuó con la notificación:', response);\r\n        });\r\n\r\n        return () => {\r\n            notificationListener.remove();\r\n            responseListener.remove();\r\n        };\r\n    }, []);\r\n\r\n    const registerForPushNotifications = async () => {\r\n        try {\r\n            if (!Device.isDevice) {\r\n                Alert.alert('Error', 'Debes usar un dispositivo físico para las notificaciones push');\r\n                return;\r\n            }\r\n\r\n            const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n            let finalStatus = existingStatus;\r\n\r\n            if (existingStatus !== 'granted') {\r\n                const { status } = await Notifications.requestPermissionsAsync();\r\n                finalStatus = status;\r\n            }\r\n\r\n            if (finalStatus !== 'granted') {\r\n                Alert.alert('Error', 'Permiso para notificaciones denegado');\r\n                return;\r\n            }\r\n\r\n            const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n            setExpoPushToken(token);\r\n            console.log('Token de notificación push:', token);\r\n            Alert.alert('Éxito', 'Registrado para notificaciones push');\r\n        } catch (error) {\r\n            console.error('Error al registrar notificaciones push:', error);\r\n            Alert.alert('Error', 'No se pudo registrar para notificaciones push');\r\n        }\r\n    };\r\n\r\n    const testLocalNotification = async () => {\r\n        try {\r\n            await notificationService.scheduleLocalNotification(\r\n                '¡Notificación Local!',\r\n                'Esta es una notificación local de prueba',\r\n                { seconds: 5 }\r\n            );\r\n            Alert.alert('Éxito', 'Notificación local programada');\r\n        } catch (error) {\r\n            console.error('Error al programar notificación local:', error);\r\n            Alert.alert('Error', 'No se pudo programar la notificación local');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Prueba de Notificaciones</Text>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionTitle}>Notificaciones Locales</Text>\r\n                <Button\r\n                    title=\"Enviar Notificación Local\"\r\n                    onPress={testLocalNotification}\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionTitle}>Notificaciones Push</Text>\r\n                <Button\r\n                    title=\"Registrar para Push\"\r\n                    onPress={registerForPushNotifications}\r\n                />\r\n                {expoPushToken && (\r\n                    <Text style={styles.tokenText}>\r\n                        Token: {expoPushToken.substring(0, 20)}...\r\n                    </Text>\r\n                )}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    section: {\r\n        marginBottom: 30,\r\n        padding: 15,\r\n        backgroundColor: '#f5f5f5',\r\n        borderRadius: 10,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    tokenText: {\r\n        marginTop: 10,\r\n        fontSize: 12,\r\n        color: '#666',\r\n    },\r\n});\r\n\r\nexport default NotificationTestScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}