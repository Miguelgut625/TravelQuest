{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\LeaderboardScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderboardScreen = () => {\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      if (!user) {\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const {\n          data,\n          error\n        } = await supabase.from('users').select('username, points, completedCities').order('points', {\n          ascending: false\n        });\n        if (error) throw error;\n        setLeaderboardData(data);\n      } catch (error) {\n        console.error('Error fetching leaderboard data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLeaderboardData();\n  }, [user]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: leaderboardData,\n      keyExtractor: item => item.username,\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.leaderboardItem,\n        children: [_jsxDEV(Text, {\n          style: styles.leaderboardName,\n          children: item.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.leaderboardPoints,\n          children: [\"Puntos: \", item.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.leaderboardCities,\n          children: [\"Ciudades Completadas: \", item.completedCities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  leaderboardItem: {\n    padding: 15,\n    marginVertical: 8,\n    borderRadius: 8,\n    backgroundColor: '#ffffff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  leaderboardName: {\n    fontSize: 18,\n    fontWeight: '600'\n  },\n  leaderboardPoints: {\n    fontSize: 16,\n    color: '#666'\n  },\n  leaderboardCities: {\n    fontSize: 16,\n    color: '#666'\n  }\n});\nexport default LeaderboardScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","ActivityIndicator","supabase","useSelector","jsxDEV","_jsxDEV","LeaderboardScreen","leaderboardData","setLeaderboardData","loading","setLoading","user","state","auth","fetchLeaderboardData","data","error","from","select","order","ascending","console","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","title","keyExtractor","item","username","renderItem","leaderboardItem","leaderboardName","leaderboardPoints","points","leaderboardCities","completedCities","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","marginVertical","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/LeaderboardScreen.tsx"],"sourcesContent":["// src/screens/main/LeaderboardScreen.tsx\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator } from 'react-native';\nimport { supabase } from '../../services/supabase'; // Asegúrate de que la ruta sea correcta\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../features/store';\n\nconst LeaderboardScreen = () => {\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = useSelector((state: RootState) => state.auth.user); // Obtener el usuario completo\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      if (!user) {\n        setLoading(false);\n        return; // Si no hay usuario, no hacemos nada\n      }\n\n      try {\n        setLoading(true);\n        // Obtener datos de la tabla users para el leaderboard\n        const { data, error } = await supabase\n          .from('users')\n          .select('username, points, completedCities') // Asegúrate de que 'completedCities' sea el campo correcto\n          .order('points', { ascending: false }); // Ordenar por puntos\n\n        if (error) throw error;\n\n        setLeaderboardData(data);\n      } catch (error) {\n        console.error('Error fetching leaderboard data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchLeaderboardData();\n  }, [user]);\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Leaderboard</Text>\n      <FlatList\n        data={leaderboardData}\n        keyExtractor={(item) => item.username} // Asegúrate de que el username sea único\n        renderItem={({ item }) => (\n          <View style={styles.leaderboardItem}>\n            <Text style={styles.leaderboardName}>{item.username}</Text>\n            <Text style={styles.leaderboardPoints}>Puntos: {item.points}</Text>\n            <Text style={styles.leaderboardCities}>Ciudades Completadas: {item.completedCities}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9', // Color de fondo\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  leaderboardItem: {\n    padding: 15,\n    marginVertical: 8,\n    borderRadius: 8,\n    backgroundColor: '#ffffff', // Color de fondo de cada amigo\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2, // Sombra para Android\n  },\n  leaderboardName: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  leaderboardPoints: {\n    fontSize: 16,\n    color: '#666', // Color gris para los puntos\n  },\n  leaderboardCities: {\n    fontSize: 16,\n    color: '#666', // Color gris para las ciudades\n  },\n});\n\nexport default LeaderboardScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}