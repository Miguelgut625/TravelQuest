{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\ResetPasswordScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPasswordScreen = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const handleResetPassword = async () => {\n    if (!newPassword || !confirmPassword) {\n      Alert.alert('Error', 'Por favor, completa todos los campos');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      Alert.alert('Error', 'Las contraseñas no coinciden');\n      return;\n    }\n    if (newPassword.length < 6) {\n      Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) {\n        Alert.alert('Error', 'Error al verificar la sesión');\n        return;\n      }\n      if (!session) {\n        Alert.alert('Error', 'Tu sesión ha expirado. Por favor, vuelve a iniciar sesión');\n        navigation.navigate('Login');\n        return;\n      }\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      Alert.alert('Éxito', 'Tu contraseña ha sido actualizada correctamente');\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error al cambiar contraseña:', error);\n      Alert.alert('Error', 'Ocurrió un error al cambiar la contraseña');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Cambiar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa tu nueva contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nueva contrase\\xF1a\",\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleResetPassword,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Cambiar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useNavigation","jsxDEV","_jsxDEV","ResetPasswordScreen","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigation","handleResetPassword","alert","length","data","session","error","sessionError","auth","getSession","navigate","updateUser","password","message","console","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","secureTextEntry","button","buttonDisabled","onPress","disabled","color","buttonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","alignItems","marginTop"],"sources":["C:/Users/Admin/TravelQuest/src/screens/auth/ResetPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../../navigation/types';\r\n\r\ntype ResetPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nexport const ResetPasswordScreen = () => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigation = useNavigation<ResetPasswordScreenNavigationProp>();\r\n\r\n    const handleResetPassword = async () => {\r\n        if (!newPassword || !confirmPassword) {\r\n            Alert.alert('Error', 'Por favor, completa todos los campos');\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            Alert.alert('Error', 'Las contraseñas no coinciden');\r\n            return;\r\n        }\r\n\r\n        if (newPassword.length < 6) {\r\n            Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            // Verificar la sesión actual\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n\r\n            if (sessionError) {\r\n                Alert.alert('Error', 'Error al verificar la sesión');\r\n                return;\r\n            }\r\n\r\n            if (!session) {\r\n                Alert.alert('Error', 'Tu sesión ha expirado. Por favor, vuelve a iniciar sesión');\r\n                navigation.navigate('Login');\r\n                return;\r\n            }\r\n\r\n            // Actualizar la contraseña\r\n            const { error } = await supabase.auth.updateUser({\r\n                password: newPassword\r\n            });\r\n\r\n            if (error) {\r\n                Alert.alert('Error', error.message);\r\n                return;\r\n            }\r\n\r\n            Alert.alert('Éxito', 'Tu contraseña ha sido actualizada correctamente');\r\n            navigation.navigate('Login');\r\n        } catch (error) {\r\n            console.error('Error al cambiar contraseña:', error);\r\n            Alert.alert('Error', 'Ocurrió un error al cambiar la contraseña');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Cambiar Contraseña</Text>\r\n            <Text style={styles.subtitle}>\r\n                Por favor, ingresa tu nueva contraseña\r\n            </Text>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Nueva contraseña\"\r\n                value={newPassword}\r\n                onChangeText={setNewPassword}\r\n                secureTextEntry\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Confirmar contraseña\"\r\n                value={confirmPassword}\r\n                onChangeText={setConfirmPassword}\r\n                secureTextEntry\r\n            />\r\n\r\n            <TouchableOpacity\r\n                style={[styles.button, loading && styles.buttonDisabled]}\r\n                onPress={handleResetPassword}\r\n                disabled={loading}\r\n            >\r\n                {loading ? (\r\n                    <ActivityIndicator color=\"white\" />\r\n                ) : (\r\n                    <Text style={styles.buttonText}>Cambiar Contraseña</Text>\r\n                )}\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                style={styles.cancelButton}\r\n                onPress={() => navigation.navigate('Login')}\r\n            >\r\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n    },\r\n    button: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#cccccc',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    cancelButton: {\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    cancelButtonText: {\r\n        color: '#666',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default ResetPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}