{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from \"../../services/supabase\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var VerifyCodeScreen = function VerifyCodeScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    code = _useState2[0],\n    setCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _ref = route.params,\n    email = _ref.email;\n  var handleVerifyCode = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!code) {\n        Alert.alert('Error', 'Por favor, ingresa el código de verificación');\n        return;\n      }\n      setLoading(true);\n      try {\n        var _yield$supabase$auth$ = yield supabase.auth.verifyOtp({\n            email: email,\n            token: code,\n            type: 'email'\n          }),\n          error = _yield$supabase$auth$.error;\n        if (error) {\n          Alert.alert('Error', error.message);\n          return;\n        }\n        navigation.navigate('ResetPassword');\n      } catch (error) {\n        console.error('Error al verificar código:', error);\n        Alert.alert('Error', 'Ocurrió un error al verificar el código');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleVerifyCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleResendCode = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var _yield$supabase$auth$2 = yield supabase.auth.signInWithOtp({\n            email: email,\n            options: {\n              shouldCreateUser: false\n            }\n          }),\n          error = _yield$supabase$auth$2.error;\n        if (error) {\n          Alert.alert('Error', error.message);\n          return;\n        }\n        Alert.alert('Éxito', 'Se ha enviado un nuevo código a tu correo electrónico');\n      } catch (error) {\n        console.error('Error al reenviar código:', error);\n        Alert.alert('Error', 'Ocurrió un error al reenviar el código');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleResendCode() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Verificar C\\xF3digo\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa el c\\xF3digo que hemos enviado a tu correo electr\\xF3nico\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"C\\xF3digo de verificaci\\xF3n\",\n      value: code,\n      onChangeText: setCode,\n      keyboardType: \"number-pad\",\n      maxLength: 6\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleVerifyCode,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Verificar C\\xF3digo\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.resendButton,\n      onPress: handleResendCode,\n      disabled: loading,\n      children: _jsx(Text, {\n        style: styles.resendButtonText,\n        children: \"Reenviar C\\xF3digo\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    textAlign: 'center',\n    fontSize: 20,\n    letterSpacing: 5\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  resendButton: {\n    marginTop: 15,\n    padding: 10,\n    alignItems: 'center'\n  },\n  resendButtonText: {\n    color: '#4CAF50',\n    fontSize: 16\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default VerifyCodeScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useNavigation","useRoute","jsx","_jsx","jsxs","_jsxs","VerifyCodeScreen","_useState","_useState2","_slicedToArray","code","setCode","_useState3","_useState4","loading","setLoading","navigation","route","_ref","params","email","handleVerifyCode","_ref2","_asyncToGenerator","alert","_yield$supabase$auth$","auth","verifyOtp","token","type","error","message","navigate","console","apply","arguments","handleResendCode","_ref3","_yield$supabase$auth$2","signInWithOtp","options","shouldCreateUser","style","styles","container","children","title","subtitle","input","placeholder","value","onChangeText","keyboardType","maxLength","button","buttonDisabled","onPress","disabled","color","buttonText","resendButton","resendButtonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","letterSpacing","alignItems","marginTop"],"sources":["C:/Users/migue/TravelQuest/src/screens/auth/VerifyCodeScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../../navigation/types';\r\n\r\ntype VerifyCodeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\ntype RouteParams = {\r\n    email: string;\r\n};\r\n\r\nexport const VerifyCodeScreen = () => {\r\n    const [code, setCode] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigation = useNavigation<VerifyCodeScreenNavigationProp>();\r\n    const route = useRoute();\r\n    const { email } = route.params as RouteParams;\r\n\r\n    const handleVerifyCode = async () => {\r\n        if (!code) {\r\n            Alert.alert('Error', 'Por favor, ingresa el código de verificación');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const { error } = await supabase.auth.verifyOtp({\r\n                email,\r\n                token: code,\r\n                type: 'email'\r\n            });\r\n\r\n            if (error) {\r\n                Alert.alert('Error', error.message);\r\n                return;\r\n            }\r\n\r\n            // Si el código es correcto, navegamos a la pantalla de cambio de contraseña\r\n            navigation.navigate('ResetPassword');\r\n        } catch (error) {\r\n            console.error('Error al verificar código:', error);\r\n            Alert.alert('Error', 'Ocurrió un error al verificar el código');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleResendCode = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const { error } = await supabase.auth.signInWithOtp({\r\n                email,\r\n                options: {\r\n                    shouldCreateUser: false\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                Alert.alert('Error', error.message);\r\n                return;\r\n            }\r\n\r\n            Alert.alert('Éxito', 'Se ha enviado un nuevo código a tu correo electrónico');\r\n        } catch (error) {\r\n            console.error('Error al reenviar código:', error);\r\n            Alert.alert('Error', 'Ocurrió un error al reenviar el código');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Verificar Código</Text>\r\n            <Text style={styles.subtitle}>\r\n                Por favor, ingresa el código que hemos enviado a tu correo electrónico\r\n            </Text>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Código de verificación\"\r\n                value={code}\r\n                onChangeText={setCode}\r\n                keyboardType=\"number-pad\"\r\n                maxLength={6}\r\n            />\r\n\r\n            <TouchableOpacity\r\n                style={[styles.button, loading && styles.buttonDisabled]}\r\n                onPress={handleVerifyCode}\r\n                disabled={loading}\r\n            >\r\n                {loading ? (\r\n                    <ActivityIndicator color=\"white\" />\r\n                ) : (\r\n                    <Text style={styles.buttonText}>Verificar Código</Text>\r\n                )}\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                style={styles.resendButton}\r\n                onPress={handleResendCode}\r\n                disabled={loading}\r\n            >\r\n                <Text style={styles.resendButtonText}>Reenviar Código</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                style={styles.cancelButton}\r\n                onPress={() => navigation.navigate('Login')}\r\n            >\r\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        letterSpacing: 5,\r\n    },\r\n    button: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#cccccc',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    resendButton: {\r\n        marginTop: 15,\r\n        padding: 10,\r\n        alignItems: 'center',\r\n    },\r\n    resendButtonText: {\r\n        color: '#4CAF50',\r\n        fontSize: 16,\r\n    },\r\n    cancelButton: {\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    cancelButtonText: {\r\n        color: '#666',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default VerifyCodeScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}