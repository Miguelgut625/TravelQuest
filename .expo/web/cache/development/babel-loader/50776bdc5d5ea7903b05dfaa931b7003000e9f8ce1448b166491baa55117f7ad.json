{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from \"../../features/authSlice\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var dispatch = useDispatch();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setTimeout(function () {\n        var fakeUser = {\n          id: '123',\n          email: 'test@example.com',\n          username: 'TestUser',\n          access_token: 'fake_access_token'\n        };\n        dispatch(setUser({\n          id: fakeUser.id,\n          email: fakeUser.email,\n          username: fakeUser.username\n        }));\n        dispatch(setToken(fakeUser.access_token));\n        navigation.replace('Main');\n        setLoading(false);\n      }, 1000);\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Iniciar Sesi\\xF3n\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText() {},\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText() {}\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Iniciar Sesi\\xF3n\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.link,\n        children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default LoginScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \":is(.flex)\": {\n      \"display\": \"flex\"\n    },\n    \":is(.underline)\": {\n      \"textDecorationLine\": \"underline\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","useDispatch","setUser","setToken","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","dispatch","handleLogin","_ref2","_asyncToGenerator","setTimeout","fakeUser","id","email","username","access_token","replace","apply","arguments","style","styles","container","children","title","input","placeholder","onChangeText","autoCapitalize","secureTextEntry","button","onPress","disabled","color","buttonText","navigate","link","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","marginTop","textDecorationLine","errorText","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/migue/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from '../../features/authSlice';\n\nconst LoginScreen = ({ navigation }: any) => {\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogin = async () => {\n    setLoading(true);\n\n    // Simular inicio de sesión sin verificar usuario y contraseña\n    setTimeout(() => {\n      // Aquí puedes establecer un usuario ficticio si lo deseas\n      const fakeUser = {\n        id: '123',\n        email: 'test@example.com',\n        username: 'TestUser',\n        access_token: 'fake_access_token',\n      };\n\n      dispatch(setUser({\n        id: fakeUser.id,\n        email: fakeUser.email,\n        username: fakeUser.username,\n      }));\n      dispatch(setToken(fakeUser.access_token));\n\n      // Redirigir a la pantalla principal\n      navigation.replace('Main');\n      setLoading(false);\n    }, 1000); // Simular un retraso de 1 segundo\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Iniciar Sesión</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        // Puedes dejar el valor vacío ya que no se usará\n        onChangeText={() => {}}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Contraseña\"\n        secureTextEntry\n        // Puedes dejar el valor vacío ya que no se usará\n        onChangeText={() => {}}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={loading}>\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.buttonText}>Iniciar Sesión</Text>\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n        <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333',\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline',\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}