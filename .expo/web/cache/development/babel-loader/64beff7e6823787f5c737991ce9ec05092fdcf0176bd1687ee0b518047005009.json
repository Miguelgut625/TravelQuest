{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\context\\\\NotificationsContext.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { registerForPushNotificationsAsync, savePushToken } from '../services/notificationsService';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationsContext = createContext({\n  expoPushToken: null,\n  notification: null\n});\nexport const useNotifications = () => useContext(NotificationsContext);\nexport const NotificationsProvider = ({\n  children\n}) => {\n  const [expoPushToken, setExpoPushToken] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    const notificationListener = Notifications.addNotificationReceivedListener(notification => {\n      setNotification(notification);\n    });\n    const responseListener = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log('Usuario interactu贸 con la notificaci贸n:', response);\n    });\n    const registerForPushNotifications = async () => {\n      try {\n        const token = await registerForPushNotificationsAsync();\n        if (token && user?.id) {\n          setExpoPushToken(token);\n          await savePushToken(user.id, token);\n        }\n      } catch (error) {\n        console.error('Error registrando para notificaciones push:', error);\n      }\n    };\n    registerForPushNotifications();\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, [user?.id]);\n  return _jsxDEV(NotificationsContext.Provider, {\n    value: {\n      expoPushToken,\n      notification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Notifications","registerForPushNotificationsAsync","savePushToken","useSelector","jsxDEV","_jsxDEV","NotificationsContext","expoPushToken","notification","useNotifications","NotificationsProvider","children","setExpoPushToken","setNotification","user","state","auth","notificationListener","addNotificationReceivedListener","responseListener","addNotificationResponseReceivedListener","response","console","log","registerForPushNotifications","token","id","error","removeNotificationSubscription","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/PC/TravelQuest/src/context/NotificationsContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport * as Notifications from 'expo-notifications';\r\nimport { registerForPushNotificationsAsync, savePushToken } from '../services/notificationsService';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\n\r\ninterface NotificationsContextType {\r\n    expoPushToken: string | null;\r\n    notification: Notifications.Notification | null;\r\n}\r\n\r\nconst NotificationsContext = createContext<NotificationsContextType>({\r\n    expoPushToken: null,\r\n    notification: null,\r\n});\r\n\r\nexport const useNotifications = () => useContext(NotificationsContext);\r\n\r\nexport const NotificationsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [expoPushToken, setExpoPushToken] = useState<string | null>(null);\r\n    const [notification, setNotification] = useState<Notifications.Notification | null>(null);\r\n    const { user } = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        // Configurar el listener de notificaciones\r\n        const notificationListener = Notifications.addNotificationReceivedListener(notification => {\r\n            setNotification(notification);\r\n        });\r\n\r\n        const responseListener = Notifications.addNotificationResponseReceivedListener(response => {\r\n            console.log('Usuario interactu贸 con la notificaci贸n:', response);\r\n        });\r\n\r\n        // Registrar el dispositivo para notificaciones push\r\n        const registerForPushNotifications = async () => {\r\n            try {\r\n                const token = await registerForPushNotificationsAsync();\r\n                if (token && user?.id) {\r\n                    setExpoPushToken(token);\r\n                    await savePushToken(user.id, token);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error registrando para notificaciones push:', error);\r\n            }\r\n        };\r\n\r\n        registerForPushNotifications();\r\n\r\n        return () => {\r\n            Notifications.removeNotificationSubscription(notificationListener);\r\n            Notifications.removeNotificationSubscription(responseListener);\r\n        };\r\n    }, [user?.id]);\r\n\r\n    return (\r\n        <NotificationsContext.Provider value={{ expoPushToken, notification }}>\r\n            {children}\r\n        </NotificationsContext.Provider>\r\n    );\r\n}; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,SAASC,iCAAiC,EAAEC,aAAa,QAAQ,kCAAkC;AACnG,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,oBAAoB,GAAGV,aAAa,CAA2B;EACjEW,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAMZ,UAAU,CAACS,oBAAoB,CAAC;AAEtE,OAAO,MAAMI,qBAA8D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5F,MAAM,CAACJ,aAAa,EAAEK,gBAAgB,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAM,CAACS,YAAY,EAAEK,eAAe,CAAC,GAAGd,QAAQ,CAAoC,IAAI,CAAC;EACzF,MAAM;IAAEe;EAAK,CAAC,GAAGX,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAAC;EAE9DlB,SAAS,CAAC,MAAM;IAEZ,MAAMmB,oBAAoB,GAAGjB,aAAa,CAACkB,+BAA+B,CAACV,YAAY,IAAI;MACvFK,eAAe,CAACL,YAAY,CAAC;IACjC,CAAC,CAAC;IAEF,MAAMW,gBAAgB,GAAGnB,aAAa,CAACoB,uCAAuC,CAACC,QAAQ,IAAI;MACvFC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;IACpE,CAAC,CAAC;IAGF,MAAMG,4BAA4B,GAAG,MAAAA,CAAA,KAAY;MAC7C,IAAI;QACA,MAAMC,KAAK,GAAG,MAAMxB,iCAAiC,CAAC,CAAC;QACvD,IAAIwB,KAAK,IAAIX,IAAI,EAAEY,EAAE,EAAE;UACnBd,gBAAgB,CAACa,KAAK,CAAC;UACvB,MAAMvB,aAAa,CAACY,IAAI,CAACY,EAAE,EAAED,KAAK,CAAC;QACvC;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IACJ,CAAC;IAEDH,4BAA4B,CAAC,CAAC;IAE9B,OAAO,MAAM;MACTxB,aAAa,CAAC4B,8BAA8B,CAACX,oBAAoB,CAAC;MAClEjB,aAAa,CAAC4B,8BAA8B,CAACT,gBAAgB,CAAC;IAClE,CAAC;EACL,CAAC,EAAE,CAACL,IAAI,EAAEY,EAAE,CAAC,CAAC;EAEd,OACIrB,OAAA,CAACC,oBAAoB,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEvB,aAAa;MAAEC;IAAa,CAAE;IAAAG,QAAA,EACjEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAExC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}