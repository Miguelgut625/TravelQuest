{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\ForgotPasswordScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const handleSendCode = async () => {\n    if (!email) {\n      Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          shouldCreateUser: false\n        }\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      navigation.navigate('VerifyCode', {\n        email\n      });\n    } catch (error) {\n      console.error('Error al enviar código de recuperación:', error);\n      Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Recuperar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Ingresa tu correo electr\\xF3nico para recibir un c\\xF3digo de verificaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Correo electr\\xF3nico\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleSendCode,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Enviar C\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Volver al Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","supabase","useNavigation","styles","jsxDEV","_jsxDEV","ForgotPasswordScreen","email","setEmail","loading","setLoading","navigation","handleSendCode","alert","error","auth","signInWithOtp","options","shouldCreateUser","message","navigate","console","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","button","buttonDisabled","onPress","disabled","color","buttonText","cancelButton","cancelButtonText"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Alert,\n    ActivityIndicator,\n} from 'react-native';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../navigation/types';\nimport styles from './style';\n\ntype ForgotPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nexport const ForgotPasswordScreen = () => {\n    const [email, setEmail] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigation = useNavigation<ForgotPasswordScreenNavigationProp>();\n\n    const handleSendCode = async () => {\n        if (!email) {\n            Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            const { error } = await supabase.auth.signInWithOtp({\n                email,\n                options: {\n                    shouldCreateUser: false\n                }\n            });\n\n            if (error) {\n                Alert.alert('Error', error.message);\n                return;\n            }\n\n            // Si el envío fue exitoso, navegamos a VerifyCode con el email\n            navigation.navigate('VerifyCode', { email });\n        } catch (error) {\n            console.error('Error al enviar código de recuperación:', error);\n            Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Recuperar Contraseña</Text>\n            <Text style={styles.subtitle}>\n                Ingresa tu correo electrónico para recibir un código de verificación\n            </Text>\n\n            <TextInput\n                style={styles.input}\n                placeholder=\"Correo electrónico\"\n                value={email}\n                onChangeText={setEmail}\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n            />\n\n            <TouchableOpacity\n                style={[styles.button, loading && styles.buttonDisabled]}\n                onPress={handleSendCode}\n                disabled={loading}\n            >\n                {loading ? (\n                    <ActivityIndicator color=\"white\" />\n                ) : (\n                    <Text style={styles.buttonText}>Enviar Código</Text>\n                )}\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.cancelButton}\n                onPress={() => navigation.navigate('Login')}\n            >\n                <Text style={styles.cancelButtonText}>Volver al Login</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default ForgotPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}