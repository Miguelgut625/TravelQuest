{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst initialState = {\n  user: null,\n  authState: 'unauthenticated',\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.authState = 'authenticated';\n      state.error = null;\n    },\n    setAuthState: (state, action) => {\n      state.authState = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.authState = 'unauthenticated';\n      state.error = null;\n    }\n  }\n});\nconst persistConfig = {\n  key: 'auth',\n  storage: AsyncStorage,\n  whitelist: ['user', 'authState']\n};\nexport const {\n  setUser,\n  logout,\n  setAuthState,\n  setError\n} = authSlice.actions;\nexport default persistReducer(persistConfig, authSlice.reducer);","map":{"version":3,"names":["createSlice","persistReducer","AsyncStorage","initialState","user","authState","error","authSlice","name","reducers","setUser","state","action","payload","setAuthState","setError","logout","persistConfig","key","storage","whitelist","actions","reducer"],"sources":["C:/Users/migue/TravelQuest/src/features/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface User {\r\n  email: string;\r\n  id: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  authState: 'idle' | 'loading' | 'authenticated' | 'unauthenticated';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  authState: 'unauthenticated',\r\n  error: null\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User>) => {\r\n      state.user = action.payload;\r\n      state.authState = 'authenticated';\r\n      state.error = null;\r\n    },\r\n    setAuthState: (state, action: PayloadAction<AuthState['authState']>) => {\r\n      state.authState = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.authState = 'unauthenticated';\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage: AsyncStorage,\r\n  whitelist: ['user', 'authState'],\r\n};\r\n\r\nexport const { setUser, logout, setAuthState, setError } = authSlice.actions;\r\nexport default persistReducer(persistConfig, authSlice.reducer);"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,YAAY,MAAM,2CAA2C;AAapE,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,iBAAiB;EAC5BC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA2B,KAAK;MAC/CD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,SAAS,GAAG,eAAe;MACjCM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,YAAY,EAAEA,CAACH,KAAK,EAAEC,MAA6C,KAAK;MACtED,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IAClC,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,SAAS,GAAG,iBAAiB;MACnCM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEjB,YAAY;EACrBkB,SAAS,EAAE,CAAC,MAAM,EAAE,WAAW;AACjC,CAAC;AAED,OAAO,MAAM;EAAEV,OAAO;EAAEM,MAAM;EAAEF,YAAY;EAAEC;AAAS,CAAC,GAAGR,SAAS,CAACc,OAAO;AAC5E,eAAepB,cAAc,CAACgB,aAAa,EAAEV,SAAS,CAACe,OAAO,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}