{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\RegisterScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterScreen = ({\n  navigation\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n  const handleRegister = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const {\n        data: authData,\n        error: signupError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            username: username\n          }\n        }\n      });\n      if (signupError) throw signupError;\n      if (!authData.user) {\n        throw new Error('No se pudo crear el usuario');\n      }\n      const {\n        error: insertError\n      } = await supabase.from('users').insert([{\n        id: authData.user.id,\n        email,\n        username,\n        password,\n        created_at: new Date().toISOString()\n      }]);\n      if (insertError) throw insertError;\n      dispatch(setUser({\n        id: authData.user.id,\n        email: authData.user.email,\n        username: username\n      }));\n      navigation.replace('VerifyEmail', {\n        email\n      });\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Crear Cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: setUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error ? _jsxDEV(Text, {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this) : null, _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.link,\n        children: \"\\xBFYa tienes cuenta? Inicia sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ActivityIndicator","useDispatch","setUser","supabase","styles","jsxDEV","_jsxDEV","RegisterScreen","navigation","email","setEmail","password","setPassword","username","setUsername","loading","setLoading","error","setError","dispatch","handleRegister","data","authData","signupError","auth","signUp","options","user","Error","insertError","from","insert","id","created_at","Date","toISOString","replace","message","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport styles from './style'; // Importamos los estilos\n\nconst RegisterScreen = ({ navigation }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n\n  const handleRegister = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      // Crear un nuevo usuario en Supabase\n      const { data: authData, error: signupError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            username: username\n          }\n        }\n      });\n\n      if (signupError) throw signupError;\n\n      if (!authData.user) {\n        throw new Error('No se pudo crear el usuario');\n      }\n\n      // Insertar el usuario en la tabla 'users' con la contraseña\n      const { error: insertError } = await supabase\n        .from('users')\n        .insert([\n          {\n            id: authData.user.id,\n            email,\n            username,\n            password,\n            created_at: new Date().toISOString()\n          }\n        ]);\n\n      if (insertError) throw insertError;\n\n      // Guardar el usuario en Redux\n      dispatch(setUser({\n        id: authData.user.id,\n        email: authData.user.email!,\n        username: username,\n      }));\n\n      // Redirigir a la pantalla de verificación de email\n      navigation.replace('VerifyEmail', { email });\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Crear Cuenta</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nombre de usuario\"\n        value={username}\n        onChangeText={setUsername}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Contraseña\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\n      <TouchableOpacity style={styles.button} onPress={handleRegister} disabled={loading}>\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.buttonText}>Registrarse</Text>\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\n        <Text style={styles.link}>¿Ya tienes cuenta? Inicia sesión</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default RegisterScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}