{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport SecondaryTabsNavigator from \"./SecondaryTabsNavigator\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(Stack.Screen, {\n        name: \"SecondaryTabs\",\n        component: SecondaryTabsNavigator\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","useSelector","LoginScreen","RegisterScreen","SecondaryTabsNavigator","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","AppNavigator","_useSelector","state","auth","token","children","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["C:/Users/migue/miguel/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["// AppNavigator.tsx\r\nimport React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\n\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport SecondaryTabsNavigator, { SecondaryTabsParams } from './SecondaryTabsNavigator';\r\n\r\nexport type RootStackParams = {\r\n  Login: undefined;\r\n  Register: undefined;\r\n  SecondaryTabs: { screen: keyof SecondaryTabsParams } | undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParams>();\r\n\r\nexport default function AppNavigator() {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <Stack.Screen name=\"SecondaryTabs\" component={SecondaryTabsNavigator} />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,WAAW,QAAQ,aAAa;AAGzC,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,sBAAsB;AAA0D,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAQvF,IAAMC,KAAK,GAAGX,0BAA0B,CAAkB,CAAC;AAE3D,eAAe,SAASY,YAAYA,CAAA,EAAG;EACrC,IAAAC,YAAA,GAAkBZ,WAAW,CAAC,UAACa,KAAgB;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAvDC,KAAK,GAAAH,YAAA,CAALG,KAAK;EAEb,OACEV,IAAA,CAACP,mBAAmB;IAAAkB,QAAA,EAClBX,IAAA,CAACK,KAAK,CAACO,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAH,QAAA,EACpD,CAACD,KAAK,GACLN,KAAA,CAAAF,SAAA;QAAAS,QAAA,GACEX,IAAA,CAACK,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAErB;QAAY,CAAE,CAAC,EACrDI,IAAA,CAACK,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAEpB;QAAe,CAAE,CAAC;MAAA,CAC3D,CAAC,GAEHG,IAAA,CAACK,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAEnB;MAAuB,CAAE;IACxE,CACc;EAAC,CACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}