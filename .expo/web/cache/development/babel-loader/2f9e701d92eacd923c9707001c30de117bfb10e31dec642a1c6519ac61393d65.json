{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\navigation\\\\AppNavigator.tsx\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from '../screens/auth/LoginScreen';\nimport RegisterScreen from '../screens/auth/RegisterScreen';\nimport ForgotPasswordScreen from '../screens/auth/ForgotPasswordScreen';\nimport VerifyCodeScreen from '../screens/auth/VerifyCodeScreen';\nimport ResetPasswordScreen from '../screens/auth/ResetPasswordScreen';\nimport VerifyEmailScreen from '../screens/auth/VerifyEmailScreen';\nimport MapScreen from '../screens/main/MapScreen';\nimport MissionsScreen from '../screens/main/MissionsScreen';\nimport JournalScreen from '../screens/main/JournalScreen';\nimport ProfileScreen from '../screens/main/ProfileScreen';\nimport LeaderboardScreen from '../screens/main/LeaderboardScreen';\nimport FriendsScreen from '../screens/main/FriendsScreen';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst AppNavigator = () => {\n  const {\n    authState\n  } = useSelector(state => state.auth);\n  const theme = useTheme();\n  if (authState === 'loading') {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(NavigationContainer, {\n    children: authState === 'authenticated' ? _jsxDEV(Tab.Navigator, {\n      screenOptions: ({\n        route\n      }) => ({\n        tabBarIcon: ({\n          focused,\n          color,\n          size\n        }) => {\n          let iconName;\n          if (route.name === 'Map') {\n            iconName = focused ? 'map' : 'map-outline';\n          } else if (route.name === 'Missions') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Journal') {\n            iconName = focused ? 'book' : 'book-outline';\n          } else if (route.name === 'Friends') {\n            iconName = focused ? 'people' : 'people-outline';\n          } else if (route.name === 'Leaderboard') {\n            iconName = focused ? 'trophy' : 'trophy-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsxDEV(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this);\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray'\n      }),\n      children: [_jsxDEV(Tab.Screen, {\n        name: \"Map\",\n        component: MapScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Missions\",\n        component: MissionsScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Journal\",\n        component: JournalScreen,\n        initialParams: {\n          refresh: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Friends\",\n        component: FriendsScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Leaderboard\",\n        component: LeaderboardScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : _jsxDEV(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"VerifyCode\",\n        component: VerifyCodeScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"VerifyEmail\",\n        component: VerifyEmailScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"ResetPassword\",\n        component: ResetPasswordScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","useSelector","LoginScreen","RegisterScreen","ForgotPasswordScreen","VerifyCodeScreen","ResetPasswordScreen","VerifyEmailScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","LeaderboardScreen","FriendsScreen","createBottomTabNavigator","Ionicons","useTheme","View","ActivityIndicator","jsxDEV","_jsxDEV","Stack","Tab","AppNavigator","authState","state","auth","theme","style","flex","justifyContent","alignItems","children","size","color","colors","primary","fileName","_jsxFileName","lineNumber","columnNumber","Navigator","screenOptions","route","tabBarIcon","focused","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","initialParams","refresh","headerShown"],"sources":["C:/Users/Admin/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport ForgotPasswordScreen from '../screens/auth/ForgotPasswordScreen';\r\nimport VerifyCodeScreen from '../screens/auth/VerifyCodeScreen';\r\nimport ResetPasswordScreen from '../screens/auth/ResetPasswordScreen';\r\nimport VerifyEmailScreen from '../screens/auth/VerifyEmailScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\nimport LeaderboardScreen from '../screens/main/LeaderboardScreen';\r\nimport FriendsScreen from '../screens/main/FriendsScreen';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useTheme } from 'react-native-paper';\r\nimport { View, ActivityIndicator } from 'react-native';\r\n\r\n// Define los parámetros para las pestañas principales\r\nexport type TabParamList = {\r\n  Map: undefined;\r\n  Missions: {\r\n    journeyId?: string;\r\n    challenges?: any[];\r\n  };\r\n  Journal: {\r\n    refresh?: boolean;\r\n  };\r\n  Profile: undefined;\r\n  Leaderboard: undefined;\r\n  Friends: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator<TabParamList>();\r\n\r\nconst AppNavigator = () => {\r\n  const { authState } = useSelector((state: RootState) => state.auth);\r\n  const theme = useTheme();\r\n\r\n  // Si el estado de autenticación es 'loading', mostrar un indicador de carga\r\n  if (authState === 'loading') {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {authState === 'authenticated' ? (\r\n        <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              let iconName;\r\n\r\n              if (route.name === 'Map') {\r\n                iconName = focused ? 'map' : 'map-outline';\r\n              } else if (route.name === 'Missions') {\r\n                iconName = focused ? 'list' : 'list-outline';\r\n              } else if (route.name === 'Journal') {\r\n                iconName = focused ? 'book' : 'book-outline';\r\n              } else if (route.name === 'Friends') {\r\n                iconName = focused ? 'people' : 'people-outline';\r\n              } else if (route.name === 'Leaderboard') {\r\n                iconName = focused ? 'trophy' : 'trophy-outline';\r\n              } else if (route.name === 'Profile') {\r\n                iconName = focused ? 'person' : 'person-outline';\r\n              }\r\n              \r\n\r\n              return <Ionicons name={iconName as any} size={size} color={color} />;\r\n            },\r\n            tabBarActiveTintColor: theme.colors.primary,\r\n            tabBarInactiveTintColor: 'gray',\r\n          })}\r\n        >\r\n          <Tab.Screen name=\"Map\" component={MapScreen} />\r\n          <Tab.Screen name=\"Missions\" component={MissionsScreen} />\r\n          <Tab.Screen name=\"Journal\" component={JournalScreen} initialParams={{ refresh: false }} />\r\n          <Tab.Screen name=\"Friends\" component={FriendsScreen} />\r\n          <Tab.Screen name=\"Leaderboard\" component={LeaderboardScreen} />\r\n          <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          \r\n        </Tab.Navigator>\r\n      ) : (\r\n        <Stack.Navigator\r\n          screenOptions={{\r\n            headerShown: false,\r\n          }}\r\n        >\r\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\r\n          <Stack.Screen name=\"VerifyCode\" component={VerifyCodeScreen} />\r\n          <Stack.Screen name=\"VerifyEmail\" component={VerifyEmailScreen} />\r\n          <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\r\n        </Stack.Navigator>\r\n      )}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}