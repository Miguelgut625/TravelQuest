{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\components\\\\NotificationsList.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NotificationService } from '../services/NotificationService';\nimport { useAppSelector } from '../features/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationsList = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const userId = useAppSelector(state => state.auth.user?.id);\n  const loadNotifications = async () => {\n    if (!userId) {\n      setError('No hay usuario autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const unreadNotifications = await NotificationService.getUnreadNotifications(userId);\n      setNotifications(unreadNotifications);\n    } catch (error) {\n      console.error('Error loading notifications:', error);\n      setError('Error al cargar las notificaciones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadNotifications();\n  }, [userId]);\n  const handleNotificationPress = async notification => {\n    try {\n      await NotificationService.markNotificationAsRead(notification.id);\n      loadNotifications();\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const renderNotification = ({\n    item\n  }) => _jsxDEV(TouchableOpacity, {\n    style: styles.notificationItem,\n    onPress: () => handleNotificationPress(item),\n    children: _jsxDEV(View, {\n      style: styles.notificationContent,\n      children: [_jsxDEV(Text, {\n        style: styles.notificationTitle,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.notificationMessage,\n        children: item.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.notificationDate,\n        children: formatDate(item.created_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando notificaciones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: notifications,\n      renderItem: renderNotification,\n      keyExtractor: item => item.id,\n      ListEmptyComponent: _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No hay notificaciones nuevas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    minHeight: 200\n  },\n  notificationItem: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2\n  },\n  notificationContent: {\n    flex: 1\n  },\n  notificationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  notificationMessage: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8\n  },\n  notificationDate: {\n    fontSize: 12,\n    color: '#999'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666'\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 16,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","StyleSheet","ActivityIndicator","NotificationService","useAppSelector","jsxDEV","_jsxDEV","NotificationsList","notifications","setNotifications","loading","setLoading","error","setError","userId","state","auth","user","id","loadNotifications","unreadNotifications","getUnreadNotifications","console","handleNotificationPress","notification","markNotificationAsRead","formatDate","dateString","date","Date","toLocaleString","day","month","year","hour","minute","renderNotification","item","style","styles","notificationItem","onPress","children","notificationContent","notificationTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","notificationMessage","message","notificationDate","created_at","container","size","color","loadingText","errorText","data","renderItem","keyExtractor","ListEmptyComponent","emptyContainer","emptyText","create","flex","minHeight","backgroundColor","borderRadius","padding","marginBottom","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","justifyContent","alignItems","textAlign","marginTop"],"sources":["C:/Users/PC/TravelQuest/src/components/NotificationsList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport { NotificationService } from '../services/NotificationService';\r\nimport { useAppSelector } from '../features/hooks';\r\nimport { Notification } from '../types/notifications';\r\n\r\nexport const NotificationsList = () => {\r\n    const [notifications, setNotifications] = useState<Notification[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const userId = useAppSelector(state => state.auth.user?.id);\r\n\r\n    const loadNotifications = async () => {\r\n        if (!userId) {\r\n            setError('No hay usuario autenticado');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const unreadNotifications = await NotificationService.getUnreadNotifications(userId);\r\n            setNotifications(unreadNotifications);\r\n        } catch (error) {\r\n            console.error('Error loading notifications:', error);\r\n            setError('Error al cargar las notificaciones');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadNotifications();\r\n    }, [userId]);\r\n\r\n    const handleNotificationPress = async (notification: Notification) => {\r\n        try {\r\n            await NotificationService.markNotificationAsRead(notification.id);\r\n            loadNotifications();\r\n        } catch (error) {\r\n            console.error('Error marking notification as read:', error);\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString: string) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('es-ES', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const renderNotification = ({ item }: { item: Notification }) => (\r\n        <TouchableOpacity\r\n            style={styles.notificationItem}\r\n            onPress={() => handleNotificationPress(item)}\r\n        >\r\n            <View style={styles.notificationContent}>\r\n                <Text style={styles.notificationTitle}>{item.title}</Text>\r\n                <Text style={styles.notificationMessage}>{item.message}</Text>\r\n                <Text style={styles.notificationDate}>\r\n                    {formatDate(item.created_at)}\r\n                </Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    if (loading) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n                <Text style={styles.loadingText}>Cargando notificaciones...</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.errorText}>{error}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                data={notifications}\r\n                renderItem={renderNotification}\r\n                keyExtractor={item => item.id}\r\n                ListEmptyComponent={\r\n                    <View style={styles.emptyContainer}>\r\n                        <Text style={styles.emptyText}>No hay notificaciones nuevas</Text>\r\n                    </View>\r\n                }\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        minHeight: 200,\r\n    },\r\n    notificationItem: {\r\n        backgroundColor: '#fff',\r\n        borderRadius: 8,\r\n        padding: 16,\r\n        marginBottom: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 3,\r\n        elevation: 2,\r\n    },\r\n    notificationContent: {\r\n        flex: 1,\r\n    },\r\n    notificationTitle: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        marginBottom: 4,\r\n    },\r\n    notificationMessage: {\r\n        fontSize: 14,\r\n        color: '#666',\r\n        marginBottom: 8,\r\n    },\r\n    notificationDate: {\r\n        fontSize: 12,\r\n        color: '#999',\r\n    },\r\n    emptyContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 20,\r\n    },\r\n    emptyText: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n        textAlign: 'center',\r\n    },\r\n    loadingText: {\r\n        marginTop: 10,\r\n        fontSize: 16,\r\n        color: '#666',\r\n    },\r\n    errorText: {\r\n        color: 'red',\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}