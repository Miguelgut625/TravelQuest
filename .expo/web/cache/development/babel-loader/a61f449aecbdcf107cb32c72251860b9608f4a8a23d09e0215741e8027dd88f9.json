{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar getFallbackIcon = function getFallbackIcon(routeName) {\n  switch (routeName) {\n    case 'Map':\n      return '🗺️';\n    case 'Missions':\n      return '🏆';\n    case 'Journal':\n      return '📔';\n    case 'Profile':\n      return '👤';\n    default:\n      return '❓';\n  }\n};\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          try {\n            switch (route.name) {\n              case 'Map':\n                iconName = focused ? 'map' : 'map-outline';\n                break;\n              case 'Missions':\n                iconName = focused ? 'trophy' : 'trophy-outline';\n                break;\n              case 'Journal':\n                iconName = focused ? 'book' : 'book-outline';\n                break;\n              case 'Profile':\n                iconName = focused ? 'person' : 'person-outline';\n                break;\n              default:\n                iconName = 'help-outline';\n            }\n            return Ionicons ? _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            }) : _jsx(Text, {\n              style: {\n                fontSize: size,\n                color: color\n              },\n              children: getFallbackIcon(route.name)\n            });\n          } catch (error) {\n            return _jsx(Text, {\n              style: {\n                fontSize: size,\n                color: color\n              },\n              children: getFallbackIcon(route.name)\n            });\n          }\n        },\n        tabBarActiveTintColor: '#4CAF50',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        title: 'Mapa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen,\n      options: {\n        title: 'Misiones'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        title: 'Diario'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil'\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  console.log('Token:', token);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabs\n        })\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","Text","Ionicons","LoginScreen","RegisterScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","getFallbackIcon","routeName","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","style","fontSize","children","error","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","title","AppNavigator","_useSelector","state","auth","token","console","log","headerShown"],"sources":["C:/Users/migue/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport { Text } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Importar pantallas (las crearemos después)\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Función de fallback para iconos\r\nconst getFallbackIcon = (routeName: string) => {\r\n  switch (routeName) {\r\n    case 'Map':\r\n      return '🗺️';\r\n    case 'Missions':\r\n      return '🏆';\r\n    case 'Journal':\r\n      return '📔';\r\n    case 'Profile':\r\n      return '👤';\r\n    default:\r\n      return '❓';\r\n  }\r\n};\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          try {\r\n            switch (route.name) {\r\n              case 'Map':\r\n                iconName = focused ? 'map' : 'map-outline';\r\n                break;\r\n              case 'Missions':\r\n                iconName = focused ? 'trophy' : 'trophy-outline';\r\n                break;\r\n              case 'Journal':\r\n                iconName = focused ? 'book' : 'book-outline';\r\n                break;\r\n              case 'Profile':\r\n                iconName = focused ? 'person' : 'person-outline';\r\n                break;\r\n              default:\r\n                iconName = 'help-outline';\r\n            }\r\n\r\n            return Ionicons ? (\r\n              <Ionicons name={iconName as any} size={size} color={color} />\r\n            ) : (\r\n              <Text style={{ fontSize: size, color }}>{getFallbackIcon(route.name)}</Text>\r\n            );\r\n          } catch (error) {\r\n            return <Text style={{ fontSize: size, color }}>{getFallbackIcon(route.name)}</Text>;\r\n          }\r\n        },\r\n        tabBarActiveTintColor: '#4CAF50',\r\n        tabBarInactiveTintColor: 'gray',\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Map\" \r\n        component={MapScreen} \r\n        options={{\r\n          title: 'Mapa'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Missions\" \r\n        component={MissionsScreen}\r\n        options={{\r\n          title: 'Misiones'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Journal\" \r\n        component={JournalScreen}\r\n        options={{\r\n          title: 'Diario'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Perfil'\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n  console.log('Token:', token);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainTabs} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}