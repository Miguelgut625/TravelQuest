{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\ForgotPasswordScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const handleSendCode = async () => {\n    if (!email) {\n      Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          shouldCreateUser: false\n        }\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      navigation.navigate('VerifyCode', {\n        email\n      });\n    } catch (error) {\n      console.error('Error al enviar código de recuperación:', error);\n      Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Recuperar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Ingresa tu correo electr\\xF3nico para recibir un c\\xF3digo de verificaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Correo electr\\xF3nico\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleSendCode,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Enviar C\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Volver al Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useNavigation","jsxDEV","_jsxDEV","ForgotPasswordScreen","email","setEmail","loading","setLoading","navigation","handleSendCode","alert","error","auth","signInWithOtp","options","shouldCreateUser","message","navigate","console","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","button","buttonDisabled","onPress","disabled","color","buttonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","alignItems","marginTop"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../../navigation/types';\r\n\r\ntype ForgotPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nexport const ForgotPasswordScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigation = useNavigation<ForgotPasswordScreenNavigationProp>();\r\n\r\n    const handleSendCode = async () => {\r\n        if (!email) {\r\n            Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const { error } = await supabase.auth.signInWithOtp({\r\n                email,\r\n                options: {\r\n                    shouldCreateUser: false\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                Alert.alert('Error', error.message);\r\n                return;\r\n            }\r\n\r\n            // Si el envío fue exitoso, navegamos a VerifyCode con el email\r\n            navigation.navigate('VerifyCode', { email });\r\n        } catch (error) {\r\n            console.error('Error al enviar código de recuperación:', error);\r\n            Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Recuperar Contraseña</Text>\r\n            <Text style={styles.subtitle}>\r\n                Ingresa tu correo electrónico para recibir un código de verificación\r\n            </Text>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Correo electrónico\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n            />\r\n\r\n            <TouchableOpacity\r\n                style={[styles.button, loading && styles.buttonDisabled]}\r\n                onPress={handleSendCode}\r\n                disabled={loading}\r\n            >\r\n                {loading ? (\r\n                    <ActivityIndicator color=\"white\" />\r\n                ) : (\r\n                    <Text style={styles.buttonText}>Enviar Código</Text>\r\n                )}\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                style={styles.cancelButton}\r\n                onPress={() => navigation.navigate('Login')}\r\n            >\r\n                <Text style={styles.cancelButtonText}>Volver al Login</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n    },\r\n    button: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#cccccc',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    cancelButton: {\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    cancelButtonText: {\r\n        color: '#666',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default ForgotPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}