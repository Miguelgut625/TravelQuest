{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch } from 'react-redux';\nimport { setUser } from \"../../features/authSlice\";\nimport { supabase } from \"../../services/supabase\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var dispatch = useDispatch();\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setError('');\n      try {\n        var _yield$supabase$auth$ = yield supabase.auth.signUp({\n            email: email,\n            password: password,\n            options: {\n              data: {\n                username: username\n              }\n            }\n          }),\n          authData = _yield$supabase$auth$.data,\n          signupError = _yield$supabase$auth$.error;\n        if (signupError) throw signupError;\n        if (!authData.user) {\n          throw new Error('No se pudo crear el usuario');\n        }\n        var _yield$supabase$from$ = yield supabase.from('users').insert([{\n            id: authData.user.id,\n            email: email,\n            username: username,\n            created_at: new Date().toISOString()\n          }]),\n          insertError = _yield$supabase$from$.error;\n        if (insertError) throw insertError;\n        dispatch(setUser({\n          id: authData.user.id,\n          email: authData.user.email,\n          username: username\n        }));\n        navigation.replace('VerifyEmail', {\n          email: email\n        });\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Crear Cuenta\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: setUsername\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), error ? _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    }) : null, _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Registrarse\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.link,\n        children: \"\\xBFYa tienes cuenta? Inicia sesi\\xF3n\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","useDispatch","setUser","supabase","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","username","setUsername","_useState7","_useState8","loading","setLoading","_useState9","_useState10","error","setError","dispatch","handleRegister","_ref2","_asyncToGenerator","_yield$supabase$auth$","auth","signUp","options","data","authData","signupError","user","Error","_yield$supabase$from$","from","insert","id","created_at","Date","toISOString","insertError","replace","message","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","marginTop","textDecorationLine"],"sources":["C:/Users/migue/TravelQuest/src/screens/auth/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\n\nconst RegisterScreen = ({ navigation }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n\n  const handleRegister = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      // Crear un nuevo usuario en Supabase\n      const { data: authData, error: signupError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            username: username\n          }\n        }\n      });\n\n      if (signupError) throw signupError;\n\n      if (!authData.user) {\n        throw new Error('No se pudo crear el usuario');\n      }\n\n      // Insertar el usuario en la tabla 'users' sin la contraseña\n      const { error: insertError } = await supabase\n        .from('users')\n        .insert([\n          {\n            id: authData.user.id,\n            email,\n            username,\n            created_at: new Date().toISOString()\n          }\n        ]);\n\n      if (insertError) throw insertError;\n\n      // Guardar el usuario en Redux\n      dispatch(setUser({\n        id: authData.user.id,\n        email: authData.user.email!,\n        username: username,\n      }));\n\n      // Redirigir a la pantalla de verificación de email\n      navigation.replace('VerifyEmail', { email });\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Crear Cuenta</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nombre de usuario\"\n        value={username}\n        onChangeText={setUsername}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Contraseña\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\n      <TouchableOpacity style={styles.button} onPress={handleRegister} disabled={loading}>\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.buttonText}>Registrarse</Text>\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\n        <Text style={styles.link}>¿Ya tienes cuenta? Inicia sesión</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333',\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline',\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default RegisterScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}