{"ast":null,"code":"import { supabase } from \"./supabase\";\nexport const testSupabaseConnection = async () => {\n  try {\n    console.log('Probando conexión con Supabase...');\n    const {\n      data,\n      error\n    } = await supabase.from('missions').select('*').limit(1);\n    if (error) {\n      console.error('Error de conexión:', error);\n      return false;\n    }\n    console.log('Conexión exitosa con Supabase');\n    return true;\n  } catch (error) {\n    console.error('Error al conectar con Supabase:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["supabase","testSupabaseConnection","console","log","data","error","from","select","limit"],"sources":["C:/Users/PC/TravelQuest/src/services/testConnection.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\nexport const testSupabaseConnection = async () => {\r\n  try {\r\n    console.log('Probando conexión con Supabase...');\r\n    const { data, error } = await supabase\r\n      .from('missions')\r\n      .select('*')\r\n      .limit(1);\r\n\r\n    if (error) {\r\n      console.error('Error de conexión:', error);\r\n      return false;\r\n    }\r\n\r\n    console.log('Conexión exitosa con Supabase');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al conectar con Supabase:', error);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ;AAEjB,OAAO,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC;IAEX,IAAIH,KAAK,EAAE;MACTH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO,KAAK;IACd;IAEAH,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}