{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from \"../../services/supabase\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken, setAuthState } from \"../../features/authSlice\";\nimport { useNavigation } from '@react-navigation/native';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ResetPasswordScreen = function ResetPasswordScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isSessionValid = _useState8[0],\n    setIsSessionValid = _useState8[1];\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  useEffect(function () {\n    var checkSession = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          console.log('Verificando sesión en ResetPasswordScreen...');\n          var url = yield Linking.getInitialURL();\n          console.log('URL actual:', url);\n          if (url != null && url.includes('type=recovery')) {\n            var _url$split$, _url$split$2;\n            console.log('Enlace de recuperación detectado');\n            var accessToken = (_url$split$ = url.split('access_token=')[1]) == null ? void 0 : _url$split$.split('&')[0];\n            var refreshToken = (_url$split$2 = url.split('refresh_token=')[1]) == null ? void 0 : _url$split$2.split('&')[0];\n            if (!accessToken) {\n              throw new Error('Token de acceso no encontrado en la URL');\n            }\n            var _yield$supabase$auth$ = yield supabase.auth.setSession({\n                access_token: accessToken,\n                refresh_token: refreshToken\n              }),\n              data = _yield$supabase$auth$.data,\n              error = _yield$supabase$auth$.error;\n            if (error) {\n              throw new Error(`Error al establecer la sesión: ${error.message}`);\n            }\n            if (data.session) {\n              console.log('Sesión establecida correctamente');\n              setIsSessionValid(true);\n              dispatch(setAuthState('password_recovery'));\n              dispatch(setToken(data.session.access_token));\n            } else {\n              throw new Error('No se pudo obtener la sesión después de establecerla');\n            }\n          } else {\n            throw new Error('No se encontró un enlace de recuperación válido');\n          }\n        } catch (error) {\n          console.error('Error en checkSession:', error);\n          Alert.alert('Error', error instanceof Error ? error.message : 'Error al verificar la sesión', [{\n            text: 'OK',\n            onPress: function onPress() {\n              return navigation.replace('Login');\n            }\n          }]);\n        }\n      });\n      return function checkSession() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkSession();\n  }, []);\n  var handleResetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!isSessionValid) {\n        Alert.alert('Error', 'No hay una sesión válida para actualizar la contraseña');\n        return;\n      }\n      if (!newPassword || !confirmPassword) {\n        Alert.alert('Error', 'Por favor, completa todos los campos');\n        return;\n      }\n      if (newPassword.length < 6) {\n        Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\n        return;\n      }\n      if (newPassword !== confirmPassword) {\n        Alert.alert('Error', 'Las contraseñas no coinciden');\n        return;\n      }\n      setLoading(true);\n      try {\n        var _yield$supabase$auth$2 = yield supabase.auth.updateUser({\n            password: newPassword\n          }),\n          data = _yield$supabase$auth$2.data,\n          error = _yield$supabase$auth$2.error;\n        if (error) throw error;\n        var _yield$supabase$auth$3 = yield supabase.auth.getSession(),\n          session = _yield$supabase$auth$3.data.session;\n        if (session && data.user) {\n          dispatch(setUser({\n            id: data.user.id,\n            email: data.user.email,\n            username: data.user.user_metadata.username || data.user.email.split('@')[0]\n          }));\n          dispatch(setToken(session.access_token));\n          dispatch(setAuthState('authenticated'));\n          Alert.alert('Éxito', 'Contraseña actualizada correctamente', [{\n            text: 'OK',\n            onPress: function onPress() {\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'Main'\n                }]\n              });\n            }\n          }]);\n        }\n      } catch (error) {\n        console.error('Error al actualizar contraseña:', error);\n        Alert.alert('Error', error instanceof Error ? error.message : 'Error al actualizar la contraseña');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleResetPassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCancel = function handleCancel() {\n    dispatch(setAuthState('unauthenticated'));\n    navigation.replace('Login');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Recuperar Contrase\\xF1a\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa tu nueva contrase\\xF1a\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nueva contrase\\xF1a\",\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleResetPassword,\n      disabled: loading || !isSessionValid,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Actualizar Contrase\\xF1a\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: handleCancel,\n      children: _jsx(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useDispatch","setUser","setToken","setAuthState","useNavigation","Linking","jsx","_jsx","jsxs","_jsxs","ResetPasswordScreen","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","isSessionValid","setIsSessionValid","dispatch","navigation","checkSession","_ref","_asyncToGenerator","console","log","url","getInitialURL","includes","_url$split$","_url$split$2","accessToken","split","refreshToken","Error","_yield$supabase$auth$","auth","setSession","access_token","refresh_token","data","error","message","session","alert","text","onPress","replace","apply","arguments","handleResetPassword","_ref2","length","_yield$supabase$auth$2","updateUser","password","_yield$supabase$auth$3","getSession","user","id","email","username","user_metadata","reset","index","routes","name","handleCancel","style","styles","container","children","title","subtitle","input","placeholder","value","onChangeText","secureTextEntry","autoCapitalize","button","buttonDisabled","disabled","color","buttonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","alignItems","marginTop"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/ResetPasswordScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser, setToken, setAuthState } from '../../features/authSlice';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { Linking } from 'react-native';\r\n\r\n// Definir el tipo para la navegación\r\ntype RootStackParamList = {\r\n  ResetPassword: undefined;\r\n  Login: undefined;\r\n  Main: undefined;\r\n};\r\n\r\ntype ResetPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'ResetPassword'>;\r\n\r\nexport const ResetPasswordScreen = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation<ResetPasswordScreenNavigationProp>();\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      try {\r\n        console.log('Verificando sesión en ResetPasswordScreen...');\r\n\r\n        const url = await Linking.getInitialURL();\r\n        console.log('URL actual:', url);\r\n\r\n        if (url?.includes('type=recovery')) {\r\n          console.log('Enlace de recuperación detectado');\r\n\r\n          // Extraer tokens\r\n          const accessToken = url.split('access_token=')[1]?.split('&')[0];\r\n          const refreshToken = url.split('refresh_token=')[1]?.split('&')[0];\r\n\r\n          if (!accessToken) {\r\n            throw new Error('Token de acceso no encontrado en la URL');\r\n          }\r\n\r\n          // Intentar establecer la sesión directamente\r\n          const { data, error } = await supabase.auth.setSession({\r\n            access_token: accessToken,\r\n            refresh_token: refreshToken\r\n          });\r\n\r\n          if (error) {\r\n            throw new Error(`Error al establecer la sesión: ${error.message}`);\r\n          }\r\n\r\n          if (data.session) {\r\n            console.log('Sesión establecida correctamente');\r\n            setIsSessionValid(true);\r\n\r\n            // Importante: Mantener el estado en password_recovery\r\n            dispatch(setAuthState('password_recovery'));\r\n\r\n            // No establecer el usuario completo aquí, solo lo necesario\r\n            dispatch(setToken(data.session.access_token));\r\n          } else {\r\n            throw new Error('No se pudo obtener la sesión después de establecerla');\r\n          }\r\n        } else {\r\n          throw new Error('No se encontró un enlace de recuperación válido');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error en checkSession:', error);\r\n        Alert.alert(\r\n          'Error',\r\n          error instanceof Error ? error.message : 'Error al verificar la sesión',\r\n          [{ text: 'OK', onPress: () => navigation.replace('Login') }]\r\n        );\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n  }, []);\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!isSessionValid) {\r\n      Alert.alert('Error', 'No hay una sesión válida para actualizar la contraseña');\r\n      return;\r\n    }\r\n\r\n    if (!newPassword || !confirmPassword) {\r\n      Alert.alert('Error', 'Por favor, completa todos los campos');\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      Alert.alert('Error', 'Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      // Obtener la sesión actual\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n\r\n      if (session && data.user) {\r\n        // Establecer el usuario y el token\r\n        dispatch(setUser({\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          username: data.user.user_metadata.username || data.user.email!.split('@')[0],\r\n        }));\r\n        dispatch(setToken(session.access_token));\r\n        dispatch(setAuthState('authenticated'));\r\n\r\n        Alert.alert(\r\n          'Éxito',\r\n          'Contraseña actualizada correctamente',\r\n          [\r\n            {\r\n              text: 'OK',\r\n              onPress: () => {\r\n                navigation.reset({\r\n                  index: 0,\r\n                  routes: [{ name: 'Main' }],\r\n                });\r\n              }\r\n            }\r\n          ]\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar contraseña:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        error instanceof Error ? error.message : 'Error al actualizar la contraseña'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    dispatch(setAuthState('unauthenticated'));\r\n    navigation.replace('Login');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Recuperar Contraseña</Text>\r\n      <Text style={styles.subtitle}>\r\n        Por favor, ingresa tu nueva contraseña\r\n      </Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nueva contraseña\"\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n        secureTextEntry\r\n        autoCapitalize=\"none\"\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirmar contraseña\"\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n        autoCapitalize=\"none\"\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={[styles.button, loading && styles.buttonDisabled]}\r\n        onPress={handleResetPassword}\r\n        disabled={loading || !isSessionValid}\r\n      >\r\n        {loading ? (\r\n          <ActivityIndicator color=\"white\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>Actualizar Contraseña</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.cancelButton}\r\n        onPress={handleCancel}\r\n      >\r\n        <Text style={styles.cancelButtonText}>Cancelar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#cccccc',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  cancelButton: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  cancelButtonText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ResetPasswordScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAUnD,SAASC,QAAQ;AACjB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,EAAEC,QAAQ,EAAEC,YAAY;AACxC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,OAAAC,OAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAczD,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EACvC,IAAAC,SAAA,GAAsCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA8C1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAA8B9B,QAAQ,CAAC,KAAK,CAAC;IAAA+B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA4ClC,QAAQ,CAAC,KAAK,CAAC;IAAAmC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAMG,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,IAAM6B,UAAU,GAAGzB,aAAa,CAAoC,CAAC;EAErEb,SAAS,CAAC,YAAM;IACd,IAAMuC,YAAY;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/B,IAAI;UACFC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;UAE3D,IAAMC,GAAG,SAAS9B,OAAO,CAAC+B,aAAa,CAAC,CAAC;UACzCH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,GAAG,CAAC;UAE/B,IAAIA,GAAG,YAAHA,GAAG,CAAEE,QAAQ,CAAC,eAAe,CAAC,EAAE;YAAA,IAAAC,WAAA,EAAAC,YAAA;YAClCN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;YAG/C,IAAMM,WAAW,IAAAF,WAAA,GAAGH,GAAG,CAACM,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,qBAA7BH,WAAA,CAA+BG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChE,IAAMC,YAAY,IAAAH,YAAA,GAAGJ,GAAG,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,qBAA9BF,YAAA,CAAgCE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAElE,IAAI,CAACD,WAAW,EAAE;cAChB,MAAM,IAAIG,KAAK,CAAC,yCAAyC,CAAC;YAC5D;YAGA,IAAAC,qBAAA,SAA8B7C,QAAQ,CAAC8C,IAAI,CAACC,UAAU,CAAC;gBACrDC,YAAY,EAAEP,WAAW;gBACzBQ,aAAa,EAAEN;cACjB,CAAC,CAAC;cAHMO,IAAI,GAAAL,qBAAA,CAAJK,IAAI;cAAEC,KAAK,GAAAN,qBAAA,CAALM,KAAK;YAKnB,IAAIA,KAAK,EAAE;cACT,MAAM,IAAIP,KAAK,CAAC,kCAAkCO,KAAK,CAACC,OAAO,EAAE,CAAC;YACpE;YAEA,IAAIF,IAAI,CAACG,OAAO,EAAE;cAChBnB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;cAC/CP,iBAAiB,CAAC,IAAI,CAAC;cAGvBC,QAAQ,CAACzB,YAAY,CAAC,mBAAmB,CAAC,CAAC;cAG3CyB,QAAQ,CAAC1B,QAAQ,CAAC+C,IAAI,CAACG,OAAO,CAACL,YAAY,CAAC,CAAC;YAC/C,CAAC,MAAM;cACL,MAAM,IAAIJ,KAAK,CAAC,sDAAsD,CAAC;YACzE;UACF,CAAC,MAAM;YACL,MAAM,IAAIA,KAAK,CAAC,iDAAiD,CAAC;UACpE;QACF,CAAC,CAAC,OAAOO,KAAK,EAAE;UACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9CrD,KAAK,CAACwD,KAAK,CACT,OAAO,EACPH,KAAK,YAAYP,KAAK,GAAGO,KAAK,CAACC,OAAO,GAAG,8BAA8B,EACvE,CAAC;YAAEG,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ1B,UAAU,CAAC2B,OAAO,CAAC,OAAO,CAAC;YAAA;UAAC,CAAC,CAC7D,CAAC;QACH;MACF,CAAC;MAAA,gBAnDK1B,YAAYA,CAAA;QAAA,OAAAC,IAAA,CAAA0B,KAAA,OAAAC,SAAA;MAAA;IAAA,GAmDjB;IAED5B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM6B,mBAAmB;IAAA,IAAAC,KAAA,GAAA5B,iBAAA,CAAG,aAAY;MACtC,IAAI,CAACN,cAAc,EAAE;QACnB7B,KAAK,CAACwD,KAAK,CAAC,OAAO,EAAE,wDAAwD,CAAC;QAC9E;MACF;MAEA,IAAI,CAACvC,WAAW,IAAI,CAACI,eAAe,EAAE;QACpCrB,KAAK,CAACwD,KAAK,CAAC,OAAO,EAAE,sCAAsC,CAAC;QAC5D;MACF;MAEA,IAAIvC,WAAW,CAAC+C,MAAM,GAAG,CAAC,EAAE;QAC1BhE,KAAK,CAACwD,KAAK,CAAC,OAAO,EAAE,gDAAgD,CAAC;QACtE;MACF;MAEA,IAAIvC,WAAW,KAAKI,eAAe,EAAE;QACnCrB,KAAK,CAACwD,KAAK,CAAC,OAAO,EAAE,8BAA8B,CAAC;QACpD;MACF;MAEA9B,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACF,IAAAuC,sBAAA,SAA8B/D,QAAQ,CAAC8C,IAAI,CAACkB,UAAU,CAAC;YACrDC,QAAQ,EAAElD;UACZ,CAAC,CAAC;UAFMmC,IAAI,GAAAa,sBAAA,CAAJb,IAAI;UAAEC,KAAK,GAAAY,sBAAA,CAALZ,KAAK;QAInB,IAAIA,KAAK,EAAE,MAAMA,KAAK;QAGtB,IAAAe,sBAAA,SAAoClE,QAAQ,CAAC8C,IAAI,CAACqB,UAAU,CAAC,CAAC;UAA9Cd,OAAO,GAAAa,sBAAA,CAAfhB,IAAI,CAAIG,OAAO;QAEvB,IAAIA,OAAO,IAAIH,IAAI,CAACkB,IAAI,EAAE;UAExBvC,QAAQ,CAAC3B,OAAO,CAAC;YACfmE,EAAE,EAAEnB,IAAI,CAACkB,IAAI,CAACC,EAAE;YAChBC,KAAK,EAAEpB,IAAI,CAACkB,IAAI,CAACE,KAAM;YACvBC,QAAQ,EAAErB,IAAI,CAACkB,IAAI,CAACI,aAAa,CAACD,QAAQ,IAAIrB,IAAI,CAACkB,IAAI,CAACE,KAAK,CAAE5B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAC7E,CAAC,CAAC,CAAC;UACHb,QAAQ,CAAC1B,QAAQ,CAACkD,OAAO,CAACL,YAAY,CAAC,CAAC;UACxCnB,QAAQ,CAACzB,YAAY,CAAC,eAAe,CAAC,CAAC;UAEvCN,KAAK,CAACwD,KAAK,CACT,OAAO,EACP,sCAAsC,EACtC,CACE;YACEC,IAAI,EAAE,IAAI;YACVC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;cACb1B,UAAU,CAAC2C,KAAK,CAAC;gBACfC,KAAK,EAAE,CAAC;gBACRC,MAAM,EAAE,CAAC;kBAAEC,IAAI,EAAE;gBAAO,CAAC;cAC3B,CAAC,CAAC;YACJ;UACF,CAAC,CAEL,CAAC;QACH;MACF,CAAC,CAAC,OAAOzB,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDrD,KAAK,CAACwD,KAAK,CACT,OAAO,EACPH,KAAK,YAAYP,KAAK,GAAGO,KAAK,CAACC,OAAO,GAAG,mCAC3C,CAAC;MACH,CAAC,SAAS;QACR5B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA,gBApEKoC,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoExB;EAED,IAAMkB,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBhD,QAAQ,CAACzB,YAAY,CAAC,iBAAiB,CAAC,CAAC;IACzC0B,UAAU,CAAC2B,OAAO,CAAC,OAAO,CAAC;EAC7B,CAAC;EAED,OACE/C,KAAA,CAACjB,IAAI;IAACqF,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzE,IAAA,CAACd,IAAI;MAACoF,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAoB,CAAM,CAAC,EACtDzE,IAAA,CAACd,IAAI;MAACoF,KAAK,EAAEC,MAAM,CAACI,QAAS;MAAAF,QAAA,EAAC;IAE9B,CAAM,CAAC,EAEPzE,IAAA,CAACb,SAAS;MACRmF,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,qBAAkB;MAC9BC,KAAK,EAAEvE,WAAY;MACnBwE,YAAY,EAAEvE,cAAe;MAC7BwE,eAAe;MACfC,cAAc,EAAC;IAAM,CACtB,CAAC,EAEFjF,IAAA,CAACb,SAAS;MACRmF,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,yBAAsB;MAClCC,KAAK,EAAEnE,eAAgB;MACvBoE,YAAY,EAAEnE,kBAAmB;MACjCoE,eAAe;MACfC,cAAc,EAAC;IAAM,CACtB,CAAC,EAEFjF,IAAA,CAACZ,gBAAgB;MACfkF,KAAK,EAAE,CAACC,MAAM,CAACW,MAAM,EAAEnE,OAAO,IAAIwD,MAAM,CAACY,cAAc,CAAE;MACzDnC,OAAO,EAAEI,mBAAoB;MAC7BgC,QAAQ,EAAErE,OAAO,IAAI,CAACI,cAAe;MAAAsD,QAAA,EAEpC1D,OAAO,GACNf,IAAA,CAACT,iBAAiB;QAAC8F,KAAK,EAAC;MAAO,CAAE,CAAC,GAEnCrF,IAAA,CAACd,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACe,UAAW;QAAAb,QAAA,EAAC;MAAqB,CAAM;IAC5D,CACe,CAAC,EAEnBzE,IAAA,CAACZ,gBAAgB;MACfkF,KAAK,EAAEC,MAAM,CAACgB,YAAa;MAC3BvC,OAAO,EAAEqB,YAAa;MAAAI,QAAA,EAEtBzE,IAAA,CAACd,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACiB,gBAAiB;QAAAf,QAAA,EAAC;MAAQ,CAAM;IAAC,CACrC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGlF,UAAU,CAACoG,MAAM,CAAC;EAC/BjB,SAAS,EAAE;IACTkB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EACnB,CAAC;EACDnB,KAAK,EAAE;IACLoB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,QAAQ;IACnBZ,KAAK,EAAE;EACT,CAAC;EACDV,QAAQ,EAAE;IACRmB,QAAQ,EAAE,EAAE;IACZT,KAAK,EAAE,MAAM;IACbW,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDrB,KAAK,EAAE;IACLiB,eAAe,EAAE,OAAO;IACxBF,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE,EAAE;IAChBF,YAAY,EAAE,EAAE;IAChBG,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDlB,MAAM,EAAE;IACNW,eAAe,EAAE,SAAS;IAC1BF,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE,EAAE;IAChBG,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb,CAAC;EACDnB,cAAc,EAAE;IACdU,eAAe,EAAE;EACnB,CAAC;EACDP,UAAU,EAAE;IACVD,KAAK,EAAE,OAAO;IACdS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDR,YAAY,EAAE;IACZe,SAAS,EAAE,EAAE;IACbD,UAAU,EAAE;EACd,CAAC;EACDb,gBAAgB,EAAE;IAChBH,KAAK,EAAE,MAAM;IACbS,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe3F,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}