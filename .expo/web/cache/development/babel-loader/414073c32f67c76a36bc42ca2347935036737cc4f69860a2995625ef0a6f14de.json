{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case 'Map':\n              iconName = focused ? 'map' : 'map-outline';\n              break;\n            case 'Missions':\n              iconName = focused ? 'flag' : 'flag-outline';\n              break;\n            case 'Journal':\n              iconName = focused ? 'book' : 'book-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n            default:\n              iconName = 'help-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#4CAF50',\n        tabBarInactiveTintColor: 'gray',\n        tabBarStyle: {\n          paddingBottom: 5,\n          height: 60\n        },\n        headerStyle: {\n          backgroundColor: '#4CAF50'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        title: 'Mapa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen,\n      options: {\n        title: 'Misiones'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        title: 'Diario'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil'\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  console.log('Token:', token);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabs\n        })\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","Ionicons","LoginScreen","RegisterScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","height","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","children","Screen","component","options","title","AppNavigator","_useSelector","state","auth","token","console","log","headerShown"],"sources":["C:/Users/Guacter/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Importar pantallas (las crearemos despuÃ©s)\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          switch (route.name) {\r\n            case 'Map':\r\n              iconName = focused ? 'map' : 'map-outline';\r\n              break;\r\n            case 'Missions':\r\n              iconName = focused ? 'flag' : 'flag-outline';\r\n              break;\r\n            case 'Journal':\r\n              iconName = focused ? 'book' : 'book-outline';\r\n              break;\r\n            case 'Profile':\r\n              iconName = focused ? 'person' : 'person-outline';\r\n              break;\r\n            default:\r\n              iconName = 'help-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#4CAF50',\r\n        tabBarInactiveTintColor: 'gray',\r\n        tabBarStyle: {\r\n          paddingBottom: 5,\r\n          height: 60\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: '#4CAF50',\r\n        },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Map\" \r\n        component={MapScreen}\r\n        options={{\r\n          title: 'Mapa'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Missions\" \r\n        component={MissionsScreen}\r\n        options={{\r\n          title: 'Misiones'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Journal\" \r\n        component={JournalScreen}\r\n        options={{\r\n          title: 'Diario'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Perfil'\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n  console.log('Token:', token);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainTabs} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}