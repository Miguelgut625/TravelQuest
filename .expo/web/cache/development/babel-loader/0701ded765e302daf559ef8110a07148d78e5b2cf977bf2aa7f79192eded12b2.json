{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  missions: [],\n  loading: false,\n  error: null\n};\nvar journeySlice = createSlice({\n  name: 'journey',\n  initialState: initialState,\n  reducers: {\n    setMissions: function setMissions(state, action) {\n      state.missions = action.payload;\n    },\n    completeMission: function completeMission(state, action) {\n      var mission = state.missions.find(function (m) {\n        return m.id === action.payload;\n      });\n      if (mission) {\n        mission.completed = true;\n      }\n    },\n    setLoading: function setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nvar _journeySlice$actions = journeySlice.actions,\n  setMissions = _journeySlice$actions.setMissions,\n  completeMission = _journeySlice$actions.completeMission,\n  setLoading = _journeySlice$actions.setLoading,\n  setError = _journeySlice$actions.setError;\nexport { setMissions, completeMission, setLoading, setError };\nexport default journeySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","missions","loading","error","journeySlice","name","reducers","setMissions","state","action","payload","completeMission","mission","find","m","id","completed","setLoading","setError","_journeySlice$actions","actions","reducer"],"sources":["C:/Users/migue/TravelQuest/src/features/journey/journeySlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { JourneyMission } from '../../types/journey';\r\n\r\ninterface JourneyState {\r\n  missions: JourneyMission[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: JourneyState = {\r\n  missions: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst journeySlice = createSlice({\r\n  name: 'journey',\r\n  initialState,\r\n  reducers: {\r\n    setMissions: (state, action: PayloadAction<JourneyMission[]>) => {\r\n      state.missions = action.payload;\r\n    },\r\n    completeMission: (state, action: PayloadAction<string>) => {\r\n      const mission = state.missions.find(m => m.id === action.payload);\r\n      if (mission) {\r\n        mission.completed = true;\r\n      }\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMissions, completeMission, setLoading, setError } = journeySlice.actions;\r\nexport default journeySlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,IAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfL,YAAY,EAAZA,YAAY;EACZM,QAAQ,EAAE;IACRC,WAAW,EAAE,SAAbA,WAAWA,CAAGC,KAAK,EAAEC,MAAuC,EAAK;MAC/DD,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,eAAe,EAAE,SAAjBA,eAAeA,CAAGH,KAAK,EAAEC,MAA6B,EAAK;MACzD,IAAMG,OAAO,GAAGJ,KAAK,CAACP,QAAQ,CAACY,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO;MAAA,EAAC;MACjE,IAAIE,OAAO,EAAE;QACXA,OAAO,CAACI,SAAS,GAAG,IAAI;MAC1B;IACF,CAAC;IACDC,UAAU,EAAE,SAAZA,UAAUA,CAAGT,KAAK,EAAEC,MAA8B,EAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDQ,QAAQ,EAAE,SAAVA,QAAQA,CAAGV,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEK,IAAAS,qBAAA,GAA+Df,YAAY,CAACgB,OAAO;EAA3Eb,WAAW,GAAAY,qBAAA,CAAXZ,WAAW;EAAEI,eAAe,GAAAQ,qBAAA,CAAfR,eAAe;EAAEM,UAAU,GAAAE,qBAAA,CAAVF,UAAU;EAAEC,QAAQ,GAAAC,qBAAA,CAARD,QAAQ;AAA0B,SAAAX,WAAA,EAAAI,eAAA,EAAAM,UAAA,EAAAC,QAAA;AAC3F,eAAed,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}