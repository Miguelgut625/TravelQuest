{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\ResetPasswordScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from \"../../services/supabase\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken, setAuthState } from \"../../features/authSlice\";\nimport { useNavigation } from '@react-navigation/native';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPasswordScreen = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        console.log('Verificando sesión en ResetPasswordScreen...');\n        const url = await Linking.getInitialURL();\n        console.log('URL actual:', url);\n        if (url?.includes('type=recovery')) {\n          console.log('Enlace de recuperación detectado');\n          const accessToken = url.split('access_token=')[1]?.split('&')[0];\n          const refreshToken = url.split('refresh_token=')[1]?.split('&')[0];\n          if (!accessToken) {\n            throw new Error('Token de acceso no encontrado en la URL');\n          }\n          const {\n            data,\n            error\n          } = await supabase.auth.setSession({\n            access_token: accessToken,\n            refresh_token: refreshToken\n          });\n          if (error) {\n            throw new Error(`Error al establecer la sesión: ${error.message}`);\n          }\n          if (data.session) {\n            console.log('Sesión establecida correctamente');\n            setIsSessionValid(true);\n            dispatch(setAuthState('password_recovery'));\n            dispatch(setToken(data.session.access_token));\n          } else {\n            throw new Error('No se pudo obtener la sesión después de establecerla');\n          }\n        } else {\n          throw new Error('No se encontró un enlace de recuperación válido');\n        }\n      } catch (error) {\n        console.error('Error en checkSession:', error);\n        Alert.alert('Error', error instanceof Error ? error.message : 'Error al verificar la sesión', [{\n          text: 'OK',\n          onPress: () => navigation.replace('Login')\n        }]);\n      }\n    };\n    checkSession();\n  }, []);\n  const handleResetPassword = async () => {\n    if (!isSessionValid) {\n      Alert.alert('Error', 'No hay una sesión válida para actualizar la contraseña');\n      return;\n    }\n    if (!newPassword || !confirmPassword) {\n      Alert.alert('Error', 'Por favor, completa todos los campos');\n      return;\n    }\n    if (newPassword.length < 6) {\n      Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      Alert.alert('Error', 'Las contraseñas no coinciden');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log('Intentando actualizar contraseña...');\n      const {\n        data,\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) {\n        console.error('Error al actualizar contraseña:', error);\n        throw error;\n      }\n      console.log('Contraseña actualizada exitosamente');\n      if (data.user) {\n        dispatch(setUser({\n          id: data.user.id,\n          email: data.user.email,\n          username: data.user.user_metadata.username || data.user.email.split('@')[0]\n        }));\n        dispatch(setAuthState('authenticated'));\n      }\n      Alert.alert('Éxito', 'Contraseña actualizada correctamente', [{\n        text: 'OK',\n        onPress: () => {\n          console.log('Redirigiendo a Main...');\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Main'\n            }]\n          });\n        }\n      }]);\n    } catch (error) {\n      console.error('Error en handleResetPassword:', error);\n      Alert.alert('Error', error instanceof Error ? `Error al actualizar la contraseña: ${error.message}` : 'Error al actualizar la contraseña');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    dispatch(setAuthState('unauthenticated'));\n    navigation.replace('Login');\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Recuperar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa tu nueva contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nueva contrase\\xF1a\",\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, (loading || !isSessionValid) && styles.buttonDisabled],\n      onPress: handleResetPassword,\n      disabled: loading || !isSessionValid,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: isSessionValid ? 'Actualizar Contraseña' : 'Sesión no válida'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: handleCancel,\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useDispatch","setUser","setToken","setAuthState","useNavigation","Linking","jsxDEV","_jsxDEV","ResetPasswordScreen","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","isSessionValid","setIsSessionValid","dispatch","navigation","checkSession","console","log","url","getInitialURL","includes","accessToken","split","refreshToken","Error","data","error","auth","setSession","access_token","refresh_token","message","session","alert","text","onPress","replace","handleResetPassword","length","updateUser","password","user","id","email","username","user_metadata","reset","index","routes","name","handleCancel","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","secureTextEntry","autoCapitalize","button","buttonDisabled","disabled","color","buttonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","alignItems","marginTop"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/ResetPasswordScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser, setToken, setAuthState } from '../../features/authSlice';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { Linking } from 'react-native';\r\n\r\n// Definir el tipo para la navegación\r\ntype RootStackParamList = {\r\n  ResetPassword: undefined;\r\n  Login: undefined;\r\n  Main: undefined;\r\n};\r\n\r\ntype ResetPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'ResetPassword'>;\r\n\r\nexport const ResetPasswordScreen = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation<ResetPasswordScreenNavigationProp>();\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      try {\r\n        console.log('Verificando sesión en ResetPasswordScreen...');\r\n\r\n        const url = await Linking.getInitialURL();\r\n        console.log('URL actual:', url);\r\n\r\n        if (url?.includes('type=recovery')) {\r\n          console.log('Enlace de recuperación detectado');\r\n\r\n          // Extraer tokens\r\n          const accessToken = url.split('access_token=')[1]?.split('&')[0];\r\n          const refreshToken = url.split('refresh_token=')[1]?.split('&')[0];\r\n\r\n          if (!accessToken) {\r\n            throw new Error('Token de acceso no encontrado en la URL');\r\n          }\r\n\r\n          // Intentar establecer la sesión directamente\r\n          const { data, error } = await supabase.auth.setSession({\r\n            access_token: accessToken,\r\n            refresh_token: refreshToken\r\n          });\r\n\r\n          if (error) {\r\n            throw new Error(`Error al establecer la sesión: ${error.message}`);\r\n          }\r\n\r\n          if (data.session) {\r\n            console.log('Sesión establecida correctamente');\r\n            setIsSessionValid(true);\r\n\r\n            // Importante: Mantener el estado en password_recovery\r\n            dispatch(setAuthState('password_recovery'));\r\n\r\n            // No establecer el usuario completo aquí, solo lo necesario\r\n            dispatch(setToken(data.session.access_token));\r\n          } else {\r\n            throw new Error('No se pudo obtener la sesión después de establecerla');\r\n          }\r\n        } else {\r\n          throw new Error('No se encontró un enlace de recuperación válido');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error en checkSession:', error);\r\n        Alert.alert(\r\n          'Error',\r\n          error instanceof Error ? error.message : 'Error al verificar la sesión',\r\n          [{ text: 'OK', onPress: () => navigation.replace('Login') }]\r\n        );\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n  }, []);\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!isSessionValid) {\r\n      Alert.alert('Error', 'No hay una sesión válida para actualizar la contraseña');\r\n      return;\r\n    }\r\n\r\n    if (!newPassword || !confirmPassword) {\r\n      Alert.alert('Error', 'Por favor, completa todos los campos');\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      Alert.alert('Error', 'Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      console.log('Intentando actualizar contraseña...');\r\n\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error al actualizar contraseña:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('Contraseña actualizada exitosamente');\r\n\r\n      // Actualizar el estado global con los datos del usuario\r\n      if (data.user) {\r\n        dispatch(setUser({\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          username: data.user.user_metadata.username || data.user.email!.split('@')[0],\r\n        }));\r\n        dispatch(setAuthState('authenticated'));\r\n      }\r\n\r\n      Alert.alert(\r\n        'Éxito',\r\n        'Contraseña actualizada correctamente',\r\n        [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => {\r\n              console.log('Redirigiendo a Main...');\r\n              navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Main' }],\r\n              });\r\n            }\r\n          }\r\n        ]\r\n      );\r\n    } catch (error) {\r\n      console.error('Error en handleResetPassword:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        error instanceof Error\r\n          ? `Error al actualizar la contraseña: ${error.message}`\r\n          : 'Error al actualizar la contraseña'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    dispatch(setAuthState('unauthenticated'));\r\n    navigation.replace('Login');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Recuperar Contraseña</Text>\r\n      <Text style={styles.subtitle}>\r\n        Por favor, ingresa tu nueva contraseña\r\n      </Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nueva contraseña\"\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n        secureTextEntry\r\n        autoCapitalize=\"none\"\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirmar contraseña\"\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n        autoCapitalize=\"none\"\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.button,\r\n          (loading || !isSessionValid) && styles.buttonDisabled\r\n        ]}\r\n        onPress={handleResetPassword}\r\n        disabled={loading || !isSessionValid}\r\n      >\r\n        {loading ? (\r\n          <ActivityIndicator color=\"white\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>\r\n            {isSessionValid ? 'Actualizar Contraseña' : 'Sesión no válida'}\r\n          </Text>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.cancelButton}\r\n        onPress={handleCancel}\r\n      >\r\n        <Text style={styles.cancelButtonText}>Cancelar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#cccccc',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  cancelButton: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  cancelButtonText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ResetPasswordScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}