{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport ImageUploadModal from '../../components/ImageUploadModal';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { createJournalEntry } from '../../services/journalService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTimeRemaining = endDate => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nconst MissionCard = ({\n  mission,\n  onComplete\n}) => {\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  const [completingMission, setCompletingMission] = useState(false);\n  const handleMissionPress = () => {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n  const handleUploadSuccess = imageUrl => {\n    setShowUploadModal(false);\n    onComplete(imageUrl);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TouchableOpacity, {\n      style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n      onPress: handleMissionPress,\n      disabled: mission.completed || isExpired || completingMission,\n      children: [_jsxDEV(View, {\n        style: styles.cardHeader,\n        children: [_jsxDEV(Text, {\n          style: styles.cardTitle,\n          children: mission.challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.badgeContainer,\n          children: [_jsxDEV(Text, {\n            style: [styles.badge, {\n              backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000'\n            }],\n            children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: [styles.timeRemaining, isExpired && styles.expiredTime],\n            children: timeRemaining.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.cardDescription,\n        children: mission.challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.cardFooter,\n        children: [_jsxDEV(Text, {\n          style: styles.difficulty,\n          children: [\"Dificultad: \", mission.challenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.points,\n          children: [mission.challenge.points, \" puntos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), completingMission && _jsxDEV(View, {\n        style: styles.loadingOverlay,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FFFFFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Completando misi\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), _jsxDEV(ImageUploadModal, {\n      visible: showUploadModal,\n      missionId: mission.id,\n      missionTitle: mission.challenge.title,\n      onClose: () => setShowUploadModal(false),\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nconst CityCard = ({\n  cityName,\n  totalMissions,\n  completedMissions,\n  expiredMissions,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: [_jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(View, {\n      style: styles.cityInfo,\n      children: [_jsxDEV(Text, {\n        style: styles.cityName,\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.missionCount,\n        children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), _jsxDEV(Ionicons, {\n      name: \"chevron-forward\",\n      size: 24,\n      color: \"#666\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this), _jsxDEV(View, {\n    style: styles.progressBar,\n    children: _jsxDEV(View, {\n      style: [styles.progressFill, {\n        width: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 183,\n  columnNumber: 3\n}, this);\nconst MissionsScreen = ({\n  route,\n  navigation\n}) => {\n  const {\n    journeyId\n  } = route.params || {};\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [missions, setMissions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [completingMission, setCompletingMission] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n          id,\n          description,\n          created_at,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `).eq('userId', user.id).order('created_at', {\n        ascending: false\n      });\n      if (journeysError) throw journeysError;\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n      const allMissions = journeys.flatMap(journey => journey.journeys_missions.map(jm => ({\n        id: jm.id,\n        completed: jm.completed,\n        cityName: journey.cities?.name || 'Ciudad Desconocida',\n        end_date: jm.end_date,\n        challenge: {\n          title: jm.challenges.title,\n          description: jm.challenges.description,\n          difficulty: jm.challenges.difficulty,\n          points: jm.challenges.points\n        }\n      })));\n      const missionsByCity = {};\n      allMissions.forEach(mission => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n      setMissions(missionsByCity);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n  const handleCompleteMission = async (missionId, imageUrl) => {\n    try {\n      setCompletingMission(true);\n      console.log('Completando misiÃ³n:', {\n        missionId,\n        imageUrl\n      });\n      if (!user?.id) {\n        throw new Error('Usuario no autenticado');\n      }\n      await createJournalEntry({\n        userId: user.id,\n        missionId: missionId,\n        photos: [imageUrl || ''],\n        title: 'MisiÃ³n completada',\n        content: 'MisiÃ³n completada con Ã©xito',\n        cityId: selectedCity || 'Ciudad Desconocida'\n      });\n      const points = await completeMission(missionId, user.id, imageUrl);\n      console.log('MisiÃ³n completada, puntos:', points);\n      const updatedMissions = Object.assign({}, missions);\n      let missionFound = false;\n      for (const city in updatedMissions) {\n        if (!updatedMissions[city]) {\n          console.warn(`Ciudad ${city} no tiene estructura de misiones`);\n          continue;\n        }\n        if (updatedMissions[city].pending) {\n          const pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\n          if (pendingIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].pending[pendingIndex], {\n              completed: true\n            });\n            updatedMissions[city].pending.splice(pendingIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n        if (!missionFound && updatedMissions[city].expired) {\n          const expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\n          if (expiredIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].expired[expiredIndex], {\n              completed: true\n            });\n            updatedMissions[city].expired.splice(expiredIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n        if (!missionFound && updatedMissions[city].completed) {\n          const completedIndex = updatedMissions[city].completed.findIndex(m => m.id === missionId);\n          if (completedIndex !== -1) {\n            console.log('La misiÃ³n ya estaba completada');\n            missionFound = true;\n            break;\n          }\n        }\n      }\n      if (!missionFound) {\n        console.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\n      }\n      setMissions(updatedMissions);\n      dispatch(dispatchCompleteMission(missionId));\n      Alert.alert('MisiÃ³n Completada', `Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`, [{\n        text: 'Ver Diario',\n        onPress: () => {\n          if (typeof dispatch === 'function') {\n            dispatch(setRefreshJournal(true));\n          }\n          navigation.navigate('Journal', {\n            refresh: true\n          });\n        }\n      }, {\n        text: 'Continuar',\n        style: 'cancel'\n      }]);\n    } catch (error) {\n      console.error('Error completando misiÃ³n:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n');\n    } finally {\n      setCompletingMission(false);\n    }\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this);\n  }\n  if (!selectedCity) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(missions).map(([cityName, missions]) => _jsxDEV(CityCard, {\n          cityName: cityName,\n          totalMissions: missions.completed.length + missions.pending.length,\n          completedMissions: missions.completed.length,\n          expiredMissions: missions.expired.length,\n          onPress: () => setSelectedCity(cityName)\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this);\n  }\n  const cityData = missions[selectedCity];\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => setSelectedCity(null),\n        children: [_jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), cityData.pending.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: imageUrl => handleCompleteMission(mission.id, imageUrl)\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.expired.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), cityData.expired.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.completed.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), cityData.completed.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButtonText: {\n    fontSize: 16,\n    marginLeft: 5,\n    color: '#333'\n  },\n  cityTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  citiesList: {\n    flex: 1\n  },\n  cityCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  cityCardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cityInfo: {\n    flex: 1\n  },\n  cityName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  missionCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 2,\n    overflow: 'hidden'\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50'\n  },\n  missionsList: {\n    flex: 1\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 15\n  },\n  completedDivider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#4CAF50'\n  },\n  completedText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    marginHorizontal: 10,\n    fontSize: 16\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  badgeContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  expiredCard: {\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  timeRemaining: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4\n  },\n  expiredTime: {\n    color: '#f44336'\n  },\n  loadingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8\n  }\n});\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","ScrollView","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","ImageUploadModal","setRefreshJournal","createJournalEntry","jsxDEV","_jsxDEV","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","mission","onComplete","showUploadModal","setShowUploadModal","timeRemaining","end_date","completed","completingMission","setCompletingMission","handleMissionPress","handleUploadSuccess","imageUrl","children","style","styles","card","completedCard","expiredCard","onPress","disabled","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","loadingOverlay","size","color","loadingText","visible","missionId","id","missionTitle","onClose","onSuccess","CityCard","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCount","name","progressBar","progressFill","width","MissionsScreen","route","navigation","journeyId","params","user","state","auth","missions","setMissions","loading","setLoading","error","setError","userPoints","setUserPoints","selectedCity","setSelectedCity","dispatch","theme","fetchMissions","data","journeys","journeysError","from","select","eq","order","ascending","length","allMissions","flatMap","journey","journeys_missions","map","jm","cities","challenges","missionsByCity","forEach","pending","expired","push","console","handleCompleteMission","log","Error","userId","photos","content","cityId","updatedMissions","Object","assign","missionFound","city","warn","pendingIndex","findIndex","m","splice","expiredIndex","completedIndex","alert","navigate","refresh","loadingContainer","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","fontSize","marginLeft","fontWeight","marginTop","textAlign","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","marginVertical","marginHorizontal","opacity","paddingHorizontal","paddingVertical","borderColor","borderWidth","position","top","left","right","bottom"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert, ScrollView } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\r\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\r\nimport ImageUploadModal from '../../components/ImageUploadModal';\r\nimport { setRefreshJournal } from '../../features/journalSlice';\r\nimport { createJournalEntry } from '../../services/journalService';\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: JourneyMission[];\r\n  };\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\n  route: MissionsScreenRouteProp;\r\n  navigation: any;\r\n}\r\n\r\ninterface CityMissions {\r\n  [cityName: string]: {\r\n    completed: JourneyMission[];\r\n    pending: JourneyMission[];\r\n    expired: JourneyMission[];\r\n  };\r\n}\r\n\r\ninterface JourneyMission {\r\n  id: string;\r\n  completed: boolean;\r\n  cityName: string;\r\n  end_date: string;\r\n  challenge: {\r\n    title: string;\r\n    description: string;\r\n    difficulty: string;\r\n    points: number;\r\n  };\r\n}\r\n\r\ninterface Journey {\r\n  id: string;\r\n  description: string;\r\n  created_at: string;\r\n  cities?: {\r\n    name: string;\r\n  };\r\n  journeys_missions: {\r\n    id: string;\r\n    completed: boolean;\r\n    challengeId: string;\r\n    end_date: string;\r\n    challenges: {\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      difficulty: string;\r\n      points: number;\r\n    };\r\n  }[];\r\n}\r\n\r\nconst getTimeRemaining = (endDate: string) => {\r\n  const now = new Date();\r\n  const end = new Date(endDate);\r\n  const diff = end.getTime() - now.getTime();\r\n  \r\n  if (diff <= 0) {\r\n    return {\r\n      isExpired: true,\r\n      text: 'Tiempo expirado'\r\n    };\r\n  }\r\n\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  if (days > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${days} dÃ­as restantes`\r\n    };\r\n  } else if (hours > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${hours} horas restantes`\r\n    };\r\n  } else {\r\n    return {\r\n      isExpired: false,\r\n      text: `${minutes} minutos restantes`\r\n    };\r\n  }\r\n};\r\n\r\nconst MissionCard = ({ mission, onComplete }: { mission: JourneyMission; onComplete: (imageUrl?: string) => void }) => {\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const timeRemaining = getTimeRemaining(mission.end_date);\r\n  const isExpired = timeRemaining.isExpired && !mission.completed;\r\n  const [completingMission, setCompletingMission] = useState(false);\r\n\r\n  const handleMissionPress = () => {\r\n    if (!mission.completed && !isExpired) {\r\n      setShowUploadModal(true);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (imageUrl: string) => {\r\n    // Cerrar el modal\r\n    setShowUploadModal(false);\r\n    // Llamar a la funciÃ³n onComplete que manejarÃ¡ el proceso de completar la misiÃ³n\r\n    onComplete(imageUrl);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.card,\r\n          mission.completed && styles.completedCard,\r\n          isExpired && styles.expiredCard\r\n        ]}\r\n        onPress={handleMissionPress}\r\n        disabled={mission.completed || isExpired || completingMission}\r\n      >\r\n        <View style={styles.cardHeader}>\r\n          <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n          <View style={styles.badgeContainer}>\r\n            <Text style={[\r\n              styles.badge,\r\n              { backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000' }\r\n            ]}>\r\n              {mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\r\n            </Text>\r\n            <Text style={[\r\n              styles.timeRemaining,\r\n              isExpired && styles.expiredTime\r\n            ]}>\r\n              {timeRemaining.text}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n        <View style={styles.cardFooter}>\r\n          <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n          <Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n        </View>\r\n\r\n        {completingMission && (\r\n          <View style={styles.loadingOverlay}>\r\n            <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\r\n            <Text style={styles.loadingText}>Completando misiÃ³n...</Text>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <ImageUploadModal\r\n        visible={showUploadModal}\r\n        missionId={mission.id}\r\n        missionTitle={mission.challenge.title}\r\n        onClose={() => setShowUploadModal(false)}\r\n        onSuccess={handleUploadSuccess}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \r\n  cityName: string; \r\n  totalMissions: number;\r\n  completedMissions: number;\r\n  expiredMissions?: number;\r\n  onPress: () => void;\r\n}) => (\r\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\r\n    <View style={styles.cityCardContent}>\r\n      <View style={styles.cityInfo}>\r\n        <Text style={styles.cityName}>{cityName}</Text>\r\n        <Text style={styles.missionCount}>\r\n          {completedMissions}/{totalMissions} misiones completadas\r\n        </Text>\r\n      </View>\r\n      <Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\r\n    </View>\r\n    <View style={styles.progressBar}>\r\n      <View \r\n        style={[\r\n          styles.progressFill, \r\n          { width: `${(completedMissions / totalMissions) * 100}%` }\r\n        ]} \r\n      />\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MissionsScreen = ({ route, navigation }: MissionsScreenProps) => {\r\n  const { journeyId } = route.params || {};\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [missions, setMissions] = useState<CityMissions>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [completingMission, setCompletingMission] = useState(false);\r\n  const [userPoints, setUserPoints] = useState(0);\r\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const fetchMissions = async () => {\r\n    if (!user?.id) {\r\n      setError('Usuario no autenticado');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: journeys, error: journeysError } = await supabase\r\n        .from('journeys')\r\n        .select(`\r\n          id,\r\n          description,\r\n          created_at,\r\n          cities (\r\n            name\r\n          ),\r\n          journeys_missions!inner (\r\n            id,\r\n            completed,\r\n            challengeId,\r\n            end_date,\r\n            challenges!inner (\r\n              id,\r\n              title,\r\n              description,\r\n              difficulty,\r\n              points\r\n            )\r\n          )\r\n        `)\r\n        .eq('userId', user.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (journeysError) throw journeysError;\r\n\r\n      if (!journeys || journeys.length === 0) {\r\n        setError('No hay viajes disponibles');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allMissions = journeys.flatMap((journey: Journey) => \r\n        journey.journeys_missions.map((jm) => ({\r\n          id: jm.id,\r\n          completed: jm.completed,\r\n          cityName: journey.cities?.name || 'Ciudad Desconocida',\r\n          end_date: jm.end_date,\r\n          challenge: {\r\n            title: jm.challenges.title,\r\n            description: jm.challenges.description,\r\n            difficulty: jm.challenges.difficulty,\r\n            points: jm.challenges.points\r\n          }\r\n        }))\r\n      );\r\n\r\n      // Organizar misiones por ciudad\r\n      const missionsByCity: CityMissions = {};\r\n      allMissions.forEach((mission: JourneyMission) => {\r\n        if (!missionsByCity[mission.cityName]) {\r\n          missionsByCity[mission.cityName] = {\r\n            completed: [],\r\n            pending: [],\r\n            expired: []\r\n          };\r\n        }\r\n        if (mission.completed) {\r\n          missionsByCity[mission.cityName].completed.push(mission);\r\n        } else {\r\n          missionsByCity[mission.cityName].pending.push(mission);\r\n        }\r\n      });\r\n\r\n      setMissions(missionsByCity);\r\n    } catch (error) {\r\n      console.error('Error fetching missions:', error);\r\n      setError('Error al cargar las misiones');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMissions();\r\n  }, [journeyId]);\r\n\r\n  const handleCompleteMission = async (missionId: string, imageUrl?: string) => {\r\n    try {\r\n      setCompletingMission(true);\r\n\r\n      console.log('Completando misiÃ³n:', { missionId, imageUrl });\r\n\r\n      if (!user?.id) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n\r\n      // Crear entrada en el diario\r\n      await createJournalEntry({\r\n        userId: user.id,\r\n        missionId: missionId,\r\n        photos: [imageUrl || ''],\r\n        title: 'MisiÃ³n completada',\r\n        content: 'MisiÃ³n completada con Ã©xito',\r\n        cityId: selectedCity || 'Ciudad Desconocida'\r\n      });\r\n\r\n      // Completar la misiÃ³n\r\n      const points = await completeMission(missionId, user.id, imageUrl);\r\n\r\n      console.log('MisiÃ³n completada, puntos:', points);\r\n\r\n      // Actualizar la lista de misiones localmente\r\n      const updatedMissions = { ...missions };\r\n\r\n      // Buscar la misiÃ³n en todas las ciudades\r\n      let missionFound = false;\r\n\r\n      for (const city in updatedMissions) {\r\n        // Verificar que updatedMissions[city] existe y tiene la estructura esperada\r\n        if (!updatedMissions[city]) {\r\n          console.warn(`Ciudad ${city} no tiene estructura de misiones`);\r\n          continue;\r\n        }\r\n\r\n        // Buscar en misiones pendientes\r\n        if (updatedMissions[city].pending) {\r\n          const pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\r\n          if (pendingIndex !== -1) {\r\n            // Encontramos la misiÃ³n en pendientes, moverla a completadas\r\n            const mission = { ...updatedMissions[city].pending[pendingIndex], completed: true };\r\n            updatedMissions[city].pending.splice(pendingIndex, 1);\r\n            updatedMissions[city].completed.push(mission);\r\n            missionFound = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // Buscar en misiones expiradas (por si acaso)\r\n        if (!missionFound && updatedMissions[city].expired) {\r\n          const expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\r\n          if (expiredIndex !== -1) {\r\n            // Encontramos la misiÃ³n en expiradas, moverla a completadas\r\n            const mission = { ...updatedMissions[city].expired[expiredIndex], completed: true };\r\n            updatedMissions[city].expired.splice(expiredIndex, 1);\r\n            updatedMissions[city].completed.push(mission);\r\n            missionFound = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // No es necesario buscar en completadas, pero por si acaso\r\n        if (!missionFound && updatedMissions[city].completed) {\r\n          const completedIndex = updatedMissions[city].completed.findIndex(m => m.id === missionId);\r\n          if (completedIndex !== -1) {\r\n            console.log('La misiÃ³n ya estaba completada');\r\n            missionFound = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!missionFound) {\r\n        console.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\r\n      }\r\n\r\n      setMissions(updatedMissions);\r\n      dispatch(dispatchCompleteMission(missionId));\r\n\r\n      // Alerta de Ã©xito con puntos\r\n      Alert.alert(\r\n        'MisiÃ³n Completada',\r\n        `Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`,\r\n        [\r\n          {\r\n            text: 'Ver Diario',\r\n            onPress: () => {\r\n              // Para Redux\r\n              if (typeof dispatch === 'function') {\r\n                dispatch(setRefreshJournal(true));\r\n              }\r\n              navigation.navigate('Journal', { refresh: true });\r\n            }\r\n          },\r\n          {\r\n            text: 'Continuar',\r\n            style: 'cancel'\r\n          }\r\n        ]\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Error completando misiÃ³n:', error);\r\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n');\r\n    } finally {\r\n      setCompletingMission(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\r\n          <Text style={styles.retryButtonText}>Reintentar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!selectedCity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Tus Ciudades</Text>\r\n          <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n        </View>\r\n        <ScrollView style={styles.citiesList}>\r\n          {Object.entries(missions).map(([cityName, missions]) => (\r\n            <CityCard\r\n              key={cityName}\r\n              cityName={cityName}\r\n              totalMissions={missions.completed.length + missions.pending.length}\r\n              completedMissions={missions.completed.length}\r\n              expiredMissions={missions.expired.length}\r\n              onPress={() => setSelectedCity(cityName)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const cityData = missions[selectedCity];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => setSelectedCity(null)}\r\n        >\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\r\n          <Text style={styles.backButtonText}>Ciudades</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n      </View>\r\n      \r\n      <Text style={styles.cityTitle}>{selectedCity}</Text>\r\n      \r\n      <ScrollView style={styles.missionsList}>\r\n        {cityData.pending.length > 0 && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Misiones Pendientes</Text>\r\n            {cityData.pending.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={(imageUrl) => handleCompleteMission(mission.id, imageUrl)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.expired.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.expired.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.completed.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={styles.completedText}>Completadas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.completed.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  backButtonText: {\r\n    fontSize: 16,\r\n    marginLeft: 5,\r\n    color: '#333',\r\n  },\r\n  cityTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  pointsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  citiesList: {\r\n    flex: 1,\r\n  },\r\n  cityCard: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  cityCardContent: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cityInfo: {\r\n    flex: 1,\r\n  },\r\n  cityName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  missionCount: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  progressBar: {\r\n    height: 4,\r\n    backgroundColor: '#E0E0E0',\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  missionsList: {\r\n    flex: 1,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 15,\r\n  },\r\n  completedDivider: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  dividerLine: {\r\n    flex: 1,\r\n    height: 1,\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  completedText: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n    marginHorizontal: 10,\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  completedCard: {\r\n    opacity: 0.8,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  badgeContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  retryButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  expiredCard: {\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\n  timeRemaining: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n  },\r\n  expiredTime: {\r\n    color: '#f44336',\r\n  },\r\n  loadingOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}