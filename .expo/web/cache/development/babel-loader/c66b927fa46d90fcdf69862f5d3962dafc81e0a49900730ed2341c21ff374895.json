{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector } from 'react-redux';\nimport { supabase } from \"../../services/supabase\";\nimport { completeMission } from \"../../services/pointsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MissionCard = ({\n  mission,\n  onComplete\n}) => _jsxDEV(TouchableOpacity, {\n  style: [styles.card, mission.completed && styles.completedCard],\n  onPress: () => !mission.completed && onComplete(),\n  disabled: mission.completed,\n  children: [_jsxDEV(View, {\n    style: styles.cardHeader,\n    children: [_jsxDEV(Text, {\n      style: styles.cardTitle,\n      children: mission.challenge.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: [styles.badge, {\n        backgroundColor: mission.completed ? '#4CAF50' : '#FFA000'\n      }],\n      children: mission.completed ? 'Completada' : 'Pendiente'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.cardDescription,\n    children: mission.challenge.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), _jsxDEV(View, {\n    style: styles.cardFooter,\n    children: [_jsxDEV(Text, {\n      style: styles.difficulty,\n      children: [\"Dificultad: \", mission.challenge.difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.points,\n      children: [mission.challenge.points, \" puntos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this);\nconst MissionsScreen = ({\n  route\n}) => {\n  const {\n    journeyId,\n    challenges\n  } = route.params || {};\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [missions, setMissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userPoints, setUserPoints] = useState(0);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const fetchMissions = async () => {\n    console.log('Parámetros recibidos:', {\n      journeyId,\n      challenges\n    });\n    if (!journeyId) {\n      console.log('No se encontró journeyId en los parámetros de ruta');\n      setError('No se encontró el viaje');\n      setLoading(false);\n      return;\n    }\n    try {\n      console.log('Buscando misiones para journeyId:', journeyId);\n      const {\n        data,\n        error\n      } = await supabase.from('journeys_missions').select(`\n          id,\n          challengeId,\n          completed,\n          challenge:challenges (\n            title,\n            description,\n            difficulty,\n            points\n          )\n        `).eq('journeyId', journeyId).order('created_at', {\n        ascending: true\n      });\n      if (error) {\n        console.error('Error en la consulta de misiones:', error);\n        throw error;\n      }\n      console.log('Misiones encontradas:', data);\n      if (!data || data.length === 0) {\n        console.log('No se encontraron misiones para este journey');\n        setError('No se encontraron misiones para este viaje');\n      } else {\n        setMissions(prevMissions => {\n          const newMissions = [...prevMissions];\n          data.forEach(newMission => {\n            const existingIndex = newMissions.findIndex(m => m.id === newMission.id);\n            if (existingIndex === -1) {\n              newMissions.push(newMission);\n            } else {\n              newMissions[existingIndex] = newMission;\n            }\n          });\n          return newMissions;\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n      setIsRefreshing(false);\n    }\n  };\n  useEffect(() => {\n    if (journeyId) {\n      fetchMissions();\n    }\n  }, [journeyId]);\n  const handleRefresh = () => {\n    setIsRefreshing(true);\n    fetchMissions();\n  };\n  const handleCompleteMission = async missionId => {\n    if (!user?.id) return;\n    try {\n      const points = await completeMission(missionId, user.id);\n      setUserPoints(prev => prev + points);\n      setMissions(prevMissions => prevMissions.map(mission => mission.id === missionId ? Object.assign({}, mission, {\n        completed: true\n      }) : mission));\n      Alert.alert('¡Misión Completada!', `Has ganado ${points} puntos por completar esta misión.`);\n    } catch (error) {\n      console.error('Error completing mission:', error);\n      Alert.alert('Error', 'No se pudo completar la misión. Por favor, intenta de nuevo.');\n    }\n  };\n  if (loading && !isRefreshing) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: handleRefresh,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Tus Misiones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), missions.length === 0 ? _jsxDEV(Text, {\n      style: styles.emptyText,\n      children: \"No hay misiones disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : _jsxDEV(FlatList, {\n      data: missions,\n      renderItem: ({\n        item\n      }) => _jsxDEV(MissionCard, {\n        mission: item,\n        onComplete: () => handleCompleteMission(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this),\n      keyExtractor: item => item.id,\n      style: styles.list,\n      refreshing: isRefreshing,\n      onRefresh: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: '#666',\n    fontSize: 16,\n    marginTop: 20\n  },\n  list: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","useSelector","supabase","completeMission","jsxDEV","_jsxDEV","MissionCard","mission","onComplete","style","styles","card","completed","completedCard","onPress","disabled","children","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badge","backgroundColor","cardDescription","description","cardFooter","difficulty","points","MissionsScreen","route","journeyId","challenges","params","user","state","auth","missions","setMissions","loading","setLoading","error","setError","userPoints","setUserPoints","isRefreshing","setIsRefreshing","fetchMissions","console","log","data","from","select","eq","order","ascending","length","prevMissions","newMissions","forEach","newMission","existingIndex","findIndex","m","id","push","handleRefresh","handleCompleteMission","missionId","prev","map","Object","assign","alert","loadingContainer","size","color","loadingText","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","emptyText","renderItem","item","keyExtractor","list","refreshing","onRefresh","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","marginTop","textAlign","fontSize","fontWeight","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","opacity","paddingHorizontal","paddingVertical"],"sources":["C:/Users/PC/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, ActivityIndicator, Alert } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { Mission } from '../../features/missionSlice';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission, getUserPoints } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\n\r\ninterface JourneyMission {\r\n  id: string;\r\n  challengeId: string;\r\n  completed: boolean;\r\n  challenge: {\r\n    title: string;\r\n    description: string;\r\n    difficulty: string;\r\n    points: number;\r\n  };\r\n}\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: JourneyMission[];\r\n  };\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\n  route: MissionsScreenRouteProp;\r\n}\r\n\r\nconst MissionCard = ({ mission, onComplete }: { mission: JourneyMission; onComplete: () => void }) => (\r\n  <TouchableOpacity\r\n    style={[styles.card, mission.completed && styles.completedCard]}\r\n    onPress={() => !mission.completed && onComplete()}\r\n    disabled={mission.completed}\r\n  >\r\n    <View style={styles.cardHeader}>\r\n      <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n      <Text style={[styles.badge, { backgroundColor: mission.completed ? '#4CAF50' : '#FFA000' }]}>\r\n        {mission.completed ? 'Completada' : 'Pendiente'}\r\n      </Text>\r\n    </View>\r\n    <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n    <View style={styles.cardFooter}>\r\n      <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n      <Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MissionsScreen = ({ route }: MissionsScreenProps) => {\r\n  const { journeyId, challenges } = route.params || {};\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [missions, setMissions] = useState<JourneyMission[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [userPoints, setUserPoints] = useState(0);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n\r\n  const fetchMissions = async () => {\r\n    console.log('Parámetros recibidos:', { journeyId, challenges });\r\n\r\n    if (!journeyId) {\r\n      console.log('No se encontró journeyId en los parámetros de ruta');\r\n      setError('No se encontró el viaje');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Buscando misiones para journeyId:', journeyId);\r\n      const { data, error } = await supabase\r\n        .from('journeys_missions')\r\n        .select(`\r\n          id,\r\n          challengeId,\r\n          completed,\r\n          challenge:challenges (\r\n            title,\r\n            description,\r\n            difficulty,\r\n            points\r\n          )\r\n        `)\r\n        .eq('journeyId', journeyId)\r\n        .order('created_at', { ascending: true });\r\n\r\n      if (error) {\r\n        console.error('Error en la consulta de misiones:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('Misiones encontradas:', data);\r\n\r\n      if (!data || data.length === 0) {\r\n        console.log('No se encontraron misiones para este journey');\r\n        setError('No se encontraron misiones para este viaje');\r\n      } else {\r\n        // Mantener el estado anterior si hay datos nuevos\r\n        setMissions(prevMissions => {\r\n          const newMissions = [...prevMissions];\r\n          data.forEach((newMission: JourneyMission) => {\r\n            const existingIndex = newMissions.findIndex(m => m.id === newMission.id);\r\n            if (existingIndex === -1) {\r\n              newMissions.push(newMission);\r\n            } else {\r\n              newMissions[existingIndex] = newMission;\r\n            }\r\n          });\r\n          return newMissions;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching missions:', error);\r\n      setError('Error al cargar las misiones');\r\n    } finally {\r\n      setLoading(false);\r\n      setIsRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (journeyId) {\r\n      fetchMissions();\r\n    }\r\n  }, [journeyId]);\r\n\r\n  const handleRefresh = () => {\r\n    setIsRefreshing(true);\r\n    fetchMissions();\r\n  };\r\n\r\n  const handleCompleteMission = async (missionId: string) => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      const points = await completeMission(missionId, user.id);\r\n      setUserPoints(prev => prev + points);\r\n\r\n      // Actualizar el estado local inmediatamente\r\n      setMissions(prevMissions =>\r\n        prevMissions.map(mission =>\r\n          mission.id === missionId\r\n            ? { ...mission, completed: true }\r\n            : mission\r\n        )\r\n      );\r\n\r\n      Alert.alert(\r\n        '¡Misión Completada!',\r\n        `Has ganado ${points} puntos por completar esta misión.`\r\n      );\r\n    } catch (error) {\r\n      console.error('Error completing mission:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        'No se pudo completar la misión. Por favor, intenta de nuevo.'\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading && !isRefreshing) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={handleRefresh}>\r\n          <Text style={styles.retryButtonText}>Reintentar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Tus Misiones</Text>\r\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n      </View>\r\n      {missions.length === 0 ? (\r\n        <Text style={styles.emptyText}>No hay misiones disponibles.</Text>\r\n      ) : (\r\n        <FlatList\r\n          data={missions}\r\n          renderItem={({ item }) => (\r\n            <MissionCard\r\n              mission={item}\r\n              onComplete={() => handleCompleteMission(item.id)}\r\n            />\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n          style={styles.list}\r\n          refreshing={isRefreshing}\r\n          onRefresh={handleRefresh}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  pointsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    fontSize: 16,\r\n    marginTop: 20,\r\n  },\r\n  list: {\r\n    flex: 1,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  completedCard: {\r\n    opacity: 0.8,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  retryButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}