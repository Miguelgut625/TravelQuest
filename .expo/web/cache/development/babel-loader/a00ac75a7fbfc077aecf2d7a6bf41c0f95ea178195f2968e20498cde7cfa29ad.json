{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { supabase } from \"./supabase\";\nexport var testSupabaseConnection = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      console.log('Probando conexión con Supabase...');\n      var _yield$supabase$from$ = yield supabase.from('missions').select('*').limit(1),\n        data = _yield$supabase$from$.data,\n        error = _yield$supabase$from$.error;\n      if (error) {\n        console.error('Error de conexión:', error);\n        return false;\n      }\n      console.log('Conexión exitosa con Supabase');\n      return true;\n    } catch (error) {\n      console.error('Error al conectar con Supabase:', error);\n      return false;\n    }\n  });\n  return function testSupabaseConnection() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["supabase","testSupabaseConnection","_ref","_asyncToGenerator","console","log","_yield$supabase$from$","from","select","limit","data","error","apply","arguments"],"sources":["C:/Users/PC/TravelQuest/src/services/testConnection.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\nexport const testSupabaseConnection = async () => {\r\n  try {\r\n    console.log('Probando conexión con Supabase...');\r\n    const { data, error } = await supabase\r\n      .from('missions')\r\n      .select('*')\r\n      .limit(1);\r\n\r\n    if (error) {\r\n      console.error('Error de conexión:', error);\r\n      return false;\r\n    }\r\n\r\n    console.log('Conexión exitosa con Supabase');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al conectar con Supabase:', error);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ;AAEjB,OAAO,IAAMC,sBAAsB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAChD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,IAAAC,qBAAA,SAA8BN,QAAQ,CACnCO,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC;QAHHC,IAAI,GAAAJ,qBAAA,CAAJI,IAAI;QAAEC,KAAK,GAAAL,qBAAA,CAALK,KAAK;MAKnB,IAAIA,KAAK,EAAE;QACTP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAO,KAAK;MACd;MAEAP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAO,KAAK;IACd;EACF,CAAC;EAAA,gBAnBYV,sBAAsBA,CAAA;IAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,GAmBlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}