{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\navigation\\\\AppNavigator.tsx\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from '../screens/auth/LoginScreen';\nimport RegisterScreen from '../screens/auth/RegisterScreen';\nimport ForgotPasswordScreen from '../screens/auth/ForgotPasswordScreen';\nimport VerifyCodeScreen from '../screens/auth/VerifyCodeScreen';\nimport ResetPasswordScreen from '../screens/auth/ResetPasswordScreen';\nimport MapScreen from '../screens/main/MapScreen';\nimport MissionsScreen from '../screens/main/MissionsScreen';\nimport JournalScreen from '../screens/main/JournalScreen';\nimport ProfileScreen from '../screens/main/ProfileScreen';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst MainTabs = () => {\n  const theme = useTheme();\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: ({\n      route\n    }) => ({\n      tabBarIcon: ({\n        focused,\n        color,\n        size\n      }) => {\n        let iconName;\n        if (route.name === 'Map') {\n          iconName = focused ? 'map' : 'map-outline';\n        } else if (route.name === 'Missions') {\n          iconName = focused ? 'list' : 'list-outline';\n        } else if (route.name === 'Journal') {\n          iconName = focused ? 'journal' : 'journal-outline';\n        } else if (route.name === 'Profile') {\n          iconName = focused ? 'person' : 'person-outline';\n        }\n        return _jsxDEV(Ionicons, {\n          name: iconName,\n          size: size,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this);\n      },\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveTintColor: 'gray',\n      tabBarStyle: {\n        backgroundColor: 'white',\n        borderTopWidth: 1,\n        borderTopColor: '#e0e0e0',\n        height: 60,\n        paddingBottom: 8,\n        paddingTop: 8\n      },\n      headerStyle: {\n        backgroundColor: theme.colors.primary\n      },\n      headerTintColor: 'white',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    }),\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        title: 'Mapa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen,\n      options: {\n        title: 'Misiones'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        title: 'Diario'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\nconst AppNavigator = ({\n  linking\n}) => {\n  const {\n    user,\n    authState\n  } = useSelector(state => state.auth);\n  const theme = useTheme();\n  console.log('Estado de autenticaci칩n:', {\n    user,\n    authState\n  });\n  return _jsxDEV(NavigationContainer, {\n    linking: linking,\n    children: _jsxDEV(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: theme.colors.primary\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: authState === 'unauthenticated' || !user ? _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            title: 'Registro',\n            headerBackTitle: 'Volver'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"ForgotPassword\",\n          component: ForgotPasswordScreen,\n          options: {\n            title: 'Recuperar Contrase침a',\n            headerBackTitle: 'Volver'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"VerifyCode\",\n          component: VerifyCodeScreen,\n          options: {\n            title: 'Verificar C칩digo',\n            headerBackTitle: 'Volver'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"ResetPassword\",\n          component: ResetPasswordScreen,\n          options: {\n            title: 'Cambiar Contrase침a',\n            headerBackTitle: 'Volver'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : _jsxDEV(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","useSelector","LoginScreen","RegisterScreen","ForgotPasswordScreen","VerifyCodeScreen","ResetPasswordScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","createBottomTabNavigator","Ionicons","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","Stack","Tab","MainTabs","theme","Navigator","screenOptions","route","tabBarIcon","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","height","paddingBottom","paddingTop","headerStyle","headerTintColor","headerTitleStyle","fontWeight","children","Screen","component","options","title","AppNavigator","linking","user","authState","state","auth","console","log","headerShown","headerBackTitle"],"sources":["C:/Users/PC/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport ForgotPasswordScreen from '../screens/auth/ForgotPasswordScreen';\r\nimport VerifyCodeScreen from '../screens/auth/VerifyCodeScreen';\r\nimport ResetPasswordScreen from '../screens/auth/ResetPasswordScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useTheme } from 'react-native-paper';\r\nimport { RootStackParamList } from './types';\r\n\r\ntype TabParamList = {\r\n  Map: undefined;\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: any[];\r\n  };\r\n  Journal: undefined;\r\n  Profile: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\nconst Tab = createBottomTabNavigator<TabParamList>();\r\n\r\nconst MainTabs = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Map') {\r\n            iconName = focused ? 'map' : 'map-outline';\r\n          } else if (route.name === 'Missions') {\r\n            iconName = focused ? 'list' : 'list-outline';\r\n          } else if (route.name === 'Journal') {\r\n            iconName = focused ? 'journal' : 'journal-outline';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName as any} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: 'gray',\r\n        tabBarStyle: {\r\n          backgroundColor: 'white',\r\n          borderTopWidth: 1,\r\n          borderTopColor: '#e0e0e0',\r\n          height: 60,\r\n          paddingBottom: 8,\r\n          paddingTop: 8,\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: theme.colors.primary,\r\n        },\r\n        headerTintColor: 'white',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Map\"\r\n        component={MapScreen}\r\n        options={{\r\n          title: 'Mapa',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Missions\"\r\n        component={MissionsScreen}\r\n        options={{\r\n          title: 'Misiones',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Journal\"\r\n        component={JournalScreen}\r\n        options={{\r\n          title: 'Diario',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Perfil',\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = ({ linking }: any) => {\r\n  const { user, authState } = useSelector((state: RootState) => state.auth);\r\n  const theme = useTheme();\r\n\r\n  console.log('Estado de autenticaci칩n:', { user, authState });\r\n\r\n  return (\r\n    <NavigationContainer linking={linking}>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: theme.colors.primary,\r\n          },\r\n          headerTintColor: 'white',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      >\r\n        {authState === 'unauthenticated' || !user ? (\r\n          <>\r\n            <Stack.Screen\r\n              name=\"Login\"\r\n              component={LoginScreen}\r\n              options={{\r\n                headerShown: false\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Register\"\r\n              component={RegisterScreen}\r\n              options={{\r\n                title: 'Registro',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"ForgotPassword\"\r\n              component={ForgotPasswordScreen}\r\n              options={{\r\n                title: 'Recuperar Contrase침a',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"VerifyCode\"\r\n              component={VerifyCodeScreen}\r\n              options={{\r\n                title: 'Verificar C칩digo',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"ResetPassword\"\r\n              component={ResetPasswordScreen}\r\n              options={{\r\n                title: 'Cambiar Contrase침a',\r\n                headerBackTitle: 'Volver'\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={MainTabs}\r\n            options={{\r\n              headerShown: false\r\n            }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}