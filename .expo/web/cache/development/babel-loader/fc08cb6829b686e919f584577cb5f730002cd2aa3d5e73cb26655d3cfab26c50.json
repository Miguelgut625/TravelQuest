{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\JournalScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntryCard = ({\n  entry\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.card,\n  children: [_jsxDEV(Text, {\n    style: styles.cardTitle,\n    children: entry.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.cardDate,\n    children: new Date(entry.created_at).toLocaleDateString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.cardContent,\n    numberOfLines: 3,\n    children: entry.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), entry.photos && entry.photos.length > 0 && _jsxDEV(View, {\n    style: styles.photoGrid,\n    children: [entry.photos.slice(0, 3).map((photo, index) => _jsxDEV(Image, {\n      source: {\n        uri: photo\n      },\n      style: styles.thumbnail,\n      resizeMode: \"cover\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)), entry.photos.length > 3 && _jsxDEV(View, {\n      style: styles.morePhotos,\n      children: _jsxDEV(Text, {\n        style: styles.morePhotosText,\n        children: [\"+\", entry.photos.length - 3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this), _jsxDEV(View, {\n    style: styles.tags,\n    children: entry.tags && entry.tags.map((tag, index) => _jsxDEV(Text, {\n      style: styles.tag,\n      children: [\"#\", tag]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\nconst EmptyState = ({\n  message\n}) => _jsxDEV(View, {\n  style: styles.emptyContainer,\n  children: [_jsxDEV(Ionicons, {\n    name: \"journal-outline\",\n    size: 64,\n    color: \"#ccc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.emptyText,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 3\n}, this);\nconst CityCard = ({\n  city,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: _jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(Ionicons, {\n      name: \"location\",\n      size: 32,\n      color: \"#4CAF50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cityName,\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.viewMissionsText,\n      children: \"Ver misiones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this);\nconst transformEntryToCityJournalEntry = entry => {\n  return {\n    id: entry.id,\n    userId: entry.userid,\n    cityId: entry.cityid,\n    title: entry.title,\n    content: entry.content,\n    photos: entry.photos || [],\n    location: null,\n    created_at: entry.created_at,\n    tags: entry.tags || [],\n    city_name: entry.cities?.name || 'Sin ciudad'\n  };\n};\nconst JournalScreen = ({\n  route\n}) => {\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [entriesByCity, setEntriesByCity] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('cities');\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    shouldRefresh\n  } = useSelector(state => state.journal);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  useEffect(() => {\n    fetchJournalEntries();\n    const journalSubscription = supabase.channel('journal_changes').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'journal_entries',\n      filter: `userid=eq.${user?.id}`\n    }, payload => {\n      console.log('Nueva entrada de diario detectada:', payload);\n      fetchJournalEntries();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(journalSubscription);\n    };\n  }, []);\n  useEffect(() => {\n    if (shouldRefresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      dispatch(setRefreshJournal(false));\n    }\n  }, [shouldRefresh]);\n  useEffect(() => {\n    if (route.params?.refresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      if (navigation.setParams) {\n        navigation.setParams({\n          refresh: undefined\n        });\n      }\n    }\n  }, [route.params?.refresh]);\n  const fetchJournalEntries = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      const {\n        data,\n        error: supabaseError\n      } = await supabase.from('journal_entries').select(`\n          *,\n          cities:cityid (\n            name\n          )\n        `).eq('userid', user.id).order('created_at', {\n        ascending: false\n      });\n      if (supabaseError) throw supabaseError;\n      const entriesByCityMap = {};\n      data?.forEach(entry => {\n        const cityName = entry.cities?.name || 'Sin ciudad';\n        if (!entriesByCityMap[cityName]) {\n          entriesByCityMap[cityName] = [];\n        }\n        entriesByCityMap[cityName].push(transformEntryToCityJournalEntry(entry));\n      });\n      setEntriesByCity(entriesByCityMap);\n    } catch (error) {\n      console.error('Error al cargar entradas del diario:', error);\n      setError('No se pudieron cargar las entradas del diario');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCityPress = city => {\n    setSelectedCity(city);\n    setViewMode('entries');\n  };\n  const handleBackPress = () => {\n    setSelectedCity(null);\n    setViewMode('cities');\n  };\n  const renderContent = () => {\n    if (loading) {\n      return _jsxDEV(View, {\n        style: styles.loadingContainer,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Cargando diario...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this);\n    }\n    if (error) {\n      return _jsxDEV(View, {\n        style: styles.errorContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.errorText,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.retryButton,\n          onPress: fetchJournalEntries,\n          children: _jsxDEV(Text, {\n            style: styles.retryButtonText,\n            children: \"Reintentar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this);\n    }\n    const cities = Object.keys(entriesByCity);\n    if (viewMode === 'entries' && selectedCity) {\n      return _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          children: [_jsxDEV(TouchableOpacity, {\n            onPress: handleBackPress,\n            style: styles.backButton,\n            children: _jsxDEV(Ionicons, {\n              name: \"arrow-back\",\n              size: 24,\n              color: \"#333\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.title,\n            children: selectedCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), entriesByCity[selectedCity].length === 0 ? _jsxDEV(EmptyState, {\n          message: `No hay entradas de diario para ${selectedCity}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: entriesByCity[selectedCity],\n          renderItem: ({\n            item\n          }) => _jsxDEV(JournalEntryCard, {\n            entry: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 41\n          }, this),\n          keyExtractor: item => item.id,\n          style: styles.entriesList\n        }, \"entries\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Ciudades Disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), cities.length === 0 ? _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"map-outline\",\n          size: 64,\n          color: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No hay ciudades disponibles todav\\xEDa.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : _jsxDEV(FlatList, {\n        data: cities,\n        renderItem: ({\n          item\n        }) => _jsxDEV(CityCard, {\n          city: item,\n          onPress: () => handleCityPress(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this),\n        keyExtractor: item => item,\n        numColumns: 2,\n        columnWrapperStyle: styles.cityGrid\n      }, \"cities\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  };\n  return renderContent();\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 15\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    flex: 1\n  },\n  cityTabs: {\n    marginBottom: 20\n  },\n  cityTab: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginRight: 10,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  selectedCityTab: {\n    backgroundColor: '#4CAF50'\n  },\n  cityTabText: {\n    color: '#666',\n    fontWeight: 'bold'\n  },\n  selectedCityTabText: {\n    color: 'white'\n  },\n  entriesList: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  cardDate: {\n    color: '#666',\n    fontSize: 12,\n    marginBottom: 10\n  },\n  cardContent: {\n    color: '#333',\n    marginBottom: 10\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  thumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  morePhotos: {\n    width: 80,\n    height: 80,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  morePhotosText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  tag: {\n    color: '#4CAF50',\n    marginRight: 10,\n    fontSize: 12\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emptyText: {\n    color: '#666',\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 16\n  },\n  cityCard: {\n    width: (Dimensions.get('window').width - 60) / 2,\n    height: 160,\n    backgroundColor: 'white',\n    borderRadius: 15,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cityCardContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15\n  },\n  cityName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  viewMissionsText: {\n    color: '#4CAF50',\n    marginTop: 8,\n    fontSize: 14\n  },\n  cityGrid: {\n    justifyContent: 'flex-start',\n    paddingHorizontal: 10\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  backButton: {\n    padding: 10,\n    marginRight: 10\n  }\n});\nexport default JournalScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","TouchableOpacity","Image","ActivityIndicator","Dimensions","useSelector","useDispatch","Ionicons","setRefreshJournal","useNavigation","supabase","jsxDEV","_jsxDEV","JournalEntryCard","entry","style","styles","card","children","cardTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","cardDate","Date","created_at","toLocaleDateString","cardContent","numberOfLines","content","photos","length","photoGrid","slice","map","photo","index","source","uri","thumbnail","resizeMode","morePhotos","morePhotosText","tags","tag","EmptyState","message","emptyContainer","name","size","color","emptyText","CityCard","city","onPress","cityCard","cityCardContent","cityName","viewMissionsText","transformEntryToCityJournalEntry","id","userId","userid","cityId","cityid","location","city_name","cities","JournalScreen","route","selectedCity","setSelectedCity","entriesByCity","setEntriesByCity","loading","setLoading","error","setError","viewMode","setViewMode","user","state","auth","shouldRefresh","journal","dispatch","navigation","fetchJournalEntries","journalSubscription","channel","on","event","schema","table","filter","payload","console","log","subscribe","removeChannel","params","refresh","setParams","undefined","data","supabaseError","from","select","eq","order","ascending","entriesByCityMap","forEach","push","handleCityPress","handleBackPress","renderContent","loadingContainer","loadingText","errorContainer","errorText","retryButton","retryButtonText","Object","keys","container","header","backButton","renderItem","item","keyExtractor","entriesList","numColumns","columnWrapperStyle","cityGrid","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","paddingHorizontal","cityTabs","cityTab","paddingVertical","marginRight","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","selectedCityTab","cityTabText","selectedCityTabText","flexDirection","justifyContent","alignItems","flexWrap","marginTop","textAlign","get","margin"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/main/JournalScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Image, ActivityIndicator, Alert, Dimensions } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../features/store';\nimport { getUserJournalEntries, CityJournalEntry } from '../../services/journalService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { useNavigation, RouteProp } from '@react-navigation/native';\nimport { supabase } from '../../services/supabase';\nimport { TabParamList } from '../../navigation/AppNavigator';\n\ninterface JournalScreenProps {\n  route: RouteProp<TabParamList, 'Journal'>;\n}\n\ninterface JournalEntryFromDB {\n  id: string;\n  userid: string;\n  title: string;\n  content: string;\n  created_at: string;\n  photos?: string[];\n  tags?: string[];\n  cityid: string;\n  cities?: {\n    name: string;\n  };\n}\n\nconst JournalEntryCard = ({ entry }: { entry: CityJournalEntry }) => (\n  <TouchableOpacity style={styles.card}>\n    <Text style={styles.cardTitle}>{entry.title}</Text>\n    <Text style={styles.cardDate}>{new Date(entry.created_at).toLocaleDateString()}</Text>\n    <Text style={styles.cardContent} numberOfLines={3}>\n      {entry.content}\n    </Text>\n    {entry.photos && entry.photos.length > 0 && (\n      <View style={styles.photoGrid}>\n        {entry.photos.slice(0, 3).map((photo, index) => (\n          <Image\n            key={index}\n            source={{ uri: photo }}\n            style={styles.thumbnail}\n            resizeMode=\"cover\"\n          />\n        ))}\n        {entry.photos.length > 3 && (\n          <View style={styles.morePhotos}>\n            <Text style={styles.morePhotosText}>+{entry.photos.length - 3}</Text>\n          </View>\n        )}\n      </View>\n    )}\n    <View style={styles.tags}>\n      {entry.tags && entry.tags.map((tag, index) => (\n        <Text key={index} style={styles.tag}>\n          #{tag}\n        </Text>\n      ))}\n    </View>\n  </TouchableOpacity>\n);\n\nconst EmptyState = ({ message }: { message: string }) => (\n  <View style={styles.emptyContainer}>\n    <Ionicons name=\"journal-outline\" size={64} color=\"#ccc\" />\n    <Text style={styles.emptyText}>{message}</Text>\n  </View>\n);\n\nconst CityCard = ({ city, onPress }: { city: string; onPress: () => void }) => (\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\n    <View style={styles.cityCardContent}>\n      <Ionicons name=\"location\" size={32} color=\"#4CAF50\" />\n      <Text style={styles.cityName}>{city}</Text>\n      <Text style={styles.viewMissionsText}>Ver misiones</Text>\n    </View>\n  </TouchableOpacity>\n);\n\nconst transformEntryToCityJournalEntry = (entry: JournalEntryFromDB): CityJournalEntry => {\n  return {\n    id: entry.id,\n    userId: entry.userid,\n    cityId: entry.cityid,\n    title: entry.title,\n    content: entry.content,\n    photos: entry.photos || [],\n    location: null,\n    created_at: entry.created_at,\n    tags: entry.tags || [],\n    city_name: entry.cities?.name || 'Sin ciudad'\n  };\n};\n\nconst JournalScreen = ({ route }: JournalScreenProps) => {\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\n  const [entriesByCity, setEntriesByCity] = useState<{ [cityName: string]: CityJournalEntry[] }>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [viewMode, setViewMode] = useState<'cities' | 'entries'>('cities');\n  \n  const { user } = useSelector((state: RootState) => state.auth);\n  const { shouldRefresh } = useSelector((state: RootState) => state.journal);\n  const dispatch = useDispatch();\n  const navigation = useNavigation<any>();\n  \n  useEffect(() => {\n    fetchJournalEntries();\n    \n    // Suscribirse a cambios en la tabla journal_entries\n    const journalSubscription = supabase\n      .channel('journal_changes')\n      .on('postgres_changes', { \n        event: 'INSERT', \n        schema: 'public', \n        table: 'journal_entries',\n        filter: `userid=eq.${user?.id}`\n      }, (payload: any) => {\n        console.log('Nueva entrada de diario detectada:', payload);\n        // Actualizar los datos\n        fetchJournalEntries();\n      })\n      .subscribe();\n      \n    // Limpiar suscripción\n    return () => {\n      supabase.removeChannel(journalSubscription);\n    };\n  }, []);\n  \n  useEffect(() => {\n    if (shouldRefresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      dispatch(setRefreshJournal(false));\n    }\n  }, [shouldRefresh]);\n\n  // Detectar el parámetro refresh\n  useEffect(() => {\n    if (route.params?.refresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      // Limpiar el parámetro para evitar actualizaciones repetidas\n      if (navigation.setParams) {\n        navigation.setParams({ refresh: undefined });\n      }\n    }\n  }, [route.params?.refresh]);\n\n  const fetchJournalEntries = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const { data, error: supabaseError } = await supabase\n        .from('journal_entries')\n        .select(`\n          *,\n          cities:cityid (\n            name\n          )\n        `)\n        .eq('userid', user.id)\n        .order('created_at', { ascending: false });\n\n      if (supabaseError) throw supabaseError;\n\n      // Organizar entradas por ciudad\n      const entriesByCityMap: { [key: string]: CityJournalEntry[] } = {};\n      data?.forEach((entry: JournalEntryFromDB) => {\n        const cityName = entry.cities?.name || 'Sin ciudad';\n        if (!entriesByCityMap[cityName]) {\n          entriesByCityMap[cityName] = [];\n        }\n        // Usar la función de transformación\n        entriesByCityMap[cityName].push(transformEntryToCityJournalEntry(entry));\n      });\n\n      setEntriesByCity(entriesByCityMap);\n    } catch (error) {\n      console.error('Error al cargar entradas del diario:', error);\n      setError('No se pudieron cargar las entradas del diario');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCityPress = (city: string) => {\n    setSelectedCity(city);\n    setViewMode('entries');\n  };\n\n  const handleBackPress = () => {\n    setSelectedCity(null);\n    setViewMode('cities');\n  };\n\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n          <Text style={styles.loadingText}>Cargando diario...</Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity style={styles.retryButton} onPress={fetchJournalEntries}>\n            <Text style={styles.retryButtonText}>Reintentar</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    const cities = Object.keys(entriesByCity);\n\n    if (viewMode === 'entries' && selectedCity) {\n      return (\n        <View style={styles.container}>\n          <View style={styles.header}>\n            <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n              <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n            </TouchableOpacity>\n            <Text style={styles.title}>{selectedCity}</Text>\n          </View>\n          \n          {entriesByCity[selectedCity].length === 0 ? (\n            <EmptyState message={`No hay entradas de diario para ${selectedCity}`} />\n          ) : (\n            <FlatList\n              key=\"entries\"\n              data={entriesByCity[selectedCity]}\n              renderItem={({ item }) => <JournalEntryCard entry={item} />}\n              keyExtractor={(item) => item.id}\n              style={styles.entriesList}\n            />\n          )}\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Ciudades Disponibles</Text>\n        {cities.length === 0 ? (\n          <View style={styles.emptyContainer}>\n            <Ionicons name=\"map-outline\" size={64} color=\"#ccc\" />\n            <Text style={styles.emptyText}>\n              No hay ciudades disponibles todavía.\n            </Text>\n          </View>\n        ) : (\n          <FlatList\n            key=\"cities\"\n            data={cities}\n            renderItem={({ item }) => (\n              <CityCard\n                city={item}\n                onPress={() => handleCityPress(item)}\n              />\n            )}\n            keyExtractor={(item) => item}\n            numColumns={2}\n            columnWrapperStyle={styles.cityGrid}\n          />\n        )}\n      </View>\n    );\n  };\n\n  return renderContent();\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 15,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    flex: 1,\n  },\n  cityTabs: {\n    marginBottom: 20,\n  },\n  cityTab: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginRight: 10,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  selectedCityTab: {\n    backgroundColor: '#4CAF50',\n  },\n  cityTabText: {\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  selectedCityTabText: {\n    color: 'white',\n  },\n  entriesList: {\n    flex: 1,\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  cardDate: {\n    color: '#666',\n    fontSize: 12,\n    marginBottom: 10,\n  },\n  cardContent: {\n    color: '#333',\n    marginBottom: 10,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  thumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  morePhotos: {\n    width: 80,\n    height: 80,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  morePhotosText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  tag: {\n    color: '#4CAF50',\n    marginRight: 10,\n    fontSize: 12,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  emptyText: {\n    color: '#666',\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  cityCard: {\n    width: (Dimensions.get('window').width - 60) / 2,\n    height: 160,\n    backgroundColor: 'white',\n    borderRadius: 15,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  cityCardContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n  },\n  cityName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#333',\n  },\n  viewMissionsText: {\n    color: '#4CAF50',\n    marginTop: 8,\n    fontSize: 14,\n  },\n  cityGrid: {\n    justifyContent: 'flex-start',\n    paddingHorizontal: 10,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n  backButton: {\n    padding: 10,\n    marginRight: 10,\n  },\n});\n\nexport default JournalScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}