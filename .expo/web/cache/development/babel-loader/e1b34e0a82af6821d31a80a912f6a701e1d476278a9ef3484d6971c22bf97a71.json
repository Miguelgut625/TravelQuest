{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\App.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './src/features/store';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { supabase } from './src/services/supabase';\nimport { setAuthState, setUser, logout } from './src/features/authSlice';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { getCloudinaryConfigInfo } from './src/services/cloudinaryService';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Notifications from 'expo-notifications';\nimport { NotificationService } from './src/services/NotificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = Object.assign({}, DefaultTheme, {\n  colors: Object.assign({}, DefaultTheme.colors, {\n    primary: '#4CAF50',\n    accent: '#03A9F4'\n  })\n});\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        console.log('Iniciando la aplicación...');\n        const {\n          data: {\n            session\n          },\n          error: sessionError\n        } = await supabase.auth.getSession();\n        if (sessionError) {\n          console.error('Error obteniendo sesión:', sessionError);\n          throw sessionError;\n        }\n        const cloudinaryConfig = getCloudinaryConfigInfo();\n        console.log('Estado configuración Cloudinary:', cloudinaryConfig.isConfigured ? 'OK' : 'No configurado', __DEV__ && cloudinaryConfig.usingFallback ? '(usando fallback)' : '');\n        if (session?.user) {\n          console.log('Usuario autenticado encontrado:', session.user.email);\n          store.dispatch(setUser({\n            email: session.user.email || '',\n            id: session.user.id,\n            username: session.user.user_metadata?.username\n          }));\n          store.dispatch(setAuthState('authenticated'));\n        } else {\n          console.log('No hay sesión activa');\n          store.dispatch(setAuthState('unauthenticated'));\n        }\n        NotificationService.registerForPushNotificationsAsync();\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n          console.log('Notificación recibida:', notification);\n        });\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n          console.log('Respuesta a notificación:', response);\n        });\n      } catch (error) {\n        console.error('Error inicializando la app:', error);\n        setError('Error al inicializar la aplicación');\n        store.dispatch(logout());\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeApp();\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          marginTop: 10\n        },\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(Provider, {\n    store: store,\n    children: [_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsxDEV(PaperProvider, {\n        theme: theme,\n        children: _jsxDEV(SafeAreaProvider, {\n          children: _jsxDEV(AppNavigator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), _jsxDEV(StatusBar, {\n      style: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","PersistGate","Provider","store","persistor","AppNavigator","ActivityIndicator","View","Text","supabase","setAuthState","setUser","logout","PaperProvider","DefaultTheme","SafeAreaProvider","getCloudinaryConfigInfo","StatusBar","Notifications","NotificationService","jsxDEV","_jsxDEV","theme","Object","assign","colors","primary","accent","App","isLoading","setIsLoading","error","setError","notificationListener","responseListener","initializeApp","console","log","data","session","sessionError","auth","getSession","cloudinaryConfig","isConfigured","__DEV__","usingFallback","user","email","dispatch","id","username","user_metadata","registerForPushNotificationsAsync","current","addNotificationReceivedListener","notification","addNotificationResponseReceivedListener","response","removeNotificationSubscription","style","flex","justifyContent","alignItems","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","loading"],"sources":["C:/Users/PC/TravelQuest/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './src/features/store';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { ActivityIndicator, View, Text } from 'react-native';\nimport { supabase } from './src/services/supabase';\nimport { setAuthState, setUser, logout } from './src/features/authSlice';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { getCloudinaryConfigInfo } from './src/services/cloudinaryService';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Notifications from 'expo-notifications';\nimport { NotificationService } from './src/services/NotificationService';\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#4CAF50',\n    accent: '#03A9F4',\n  },\n};\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const notificationListener = useRef<any>();\n  const responseListener = useRef<any>();\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        console.log('Iniciando la aplicación...');\n\n        // Verificar sesión actual\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error('Error obteniendo sesión:', sessionError);\n          throw sessionError;\n        }\n\n        // Verificar configuración de Cloudinary\n        const cloudinaryConfig = getCloudinaryConfigInfo();\n        console.log('Estado configuración Cloudinary:',\n          cloudinaryConfig.isConfigured ? 'OK' : 'No configurado',\n          __DEV__ && cloudinaryConfig.usingFallback ? '(usando fallback)' : ''\n        );\n\n        if (session?.user) {\n          console.log('Usuario autenticado encontrado:', session.user.email);\n          store.dispatch(setUser({\n            email: session.user.email || '',\n            id: session.user.id,\n            username: session.user.user_metadata?.username\n          }));\n          store.dispatch(setAuthState('authenticated'));\n        } else {\n          console.log('No hay sesión activa');\n          store.dispatch(setAuthState('unauthenticated'));\n        }\n\n        // Registrar para notificaciones push\n        NotificationService.registerForPushNotificationsAsync();\n\n        // Escuchar notificaciones recibidas\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n          console.log('Notificación recibida:', notification);\n        });\n\n        // Escuchar respuestas a notificaciones\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n          console.log('Respuesta a notificación:', response);\n        });\n\n      } catch (error) {\n        console.error('Error inicializando la app:', error);\n        setError('Error al inicializar la aplicación');\n        store.dispatch(logout());\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeApp();\n\n    return () => {\n      // Limpiar listeners\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n        <Text style={{ marginTop: 10 }}>Cargando...</Text>\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text style={{ color: 'red' }}>{error}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <PaperProvider theme={theme}>\n          <SafeAreaProvider>\n            <AppNavigator />\n          </SafeAreaProvider>\n        </PaperProvider>\n      </PersistGate>\n      <StatusBar style=\"auto\" />\n    </Provider>\n  );\n};\n\nexport default App; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,EAAEC,SAAS,QAAQ,sBAAsB;AACvD,OAAOC,YAAY,MAAM,+BAA+B;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEzD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,YAAY,EAAEC,OAAO,EAAEC,MAAM,QAAQ,0BAA0B;AACxE,SAASV,QAAQ,IAAIW,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAC5E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,uBAAuB,QAAQ,kCAAkC;AAC1E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,SAASC,mBAAmB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,KAAK,GAAAC,MAAA,CAAAC,MAAA,KACNV,YAAY;EACfW,MAAM,EAAAF,MAAA,CAAAC,MAAA,KACDV,YAAY,CAACW,MAAM;IACtBC,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE;EAAS;AAClB,EACF;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMkC,oBAAoB,GAAGjC,MAAM,CAAM,CAAC;EAC1C,MAAMkC,gBAAgB,GAAGlC,MAAM,CAAM,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACd,MAAMqC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAGzC,MAAM;UAAEC,IAAI,EAAE;YAAEC;UAAQ,CAAC;UAAER,KAAK,EAAES;QAAa,CAAC,GAAG,MAAM/B,QAAQ,CAACgC,IAAI,CAACC,UAAU,CAAC,CAAC;QAEnF,IAAIF,YAAY,EAAE;UAChBJ,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAES,YAAY,CAAC;UACvD,MAAMA,YAAY;QACpB;QAGA,MAAMG,gBAAgB,GAAG3B,uBAAuB,CAAC,CAAC;QAClDoB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAC5CM,gBAAgB,CAACC,YAAY,GAAG,IAAI,GAAG,gBAAgB,EACvDC,OAAO,IAAIF,gBAAgB,CAACG,aAAa,GAAG,mBAAmB,GAAG,EACpE,CAAC;QAED,IAAIP,OAAO,EAAEQ,IAAI,EAAE;UACjBX,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,OAAO,CAACQ,IAAI,CAACC,KAAK,CAAC;UAClE7C,KAAK,CAAC8C,QAAQ,CAACtC,OAAO,CAAC;YACrBqC,KAAK,EAAET,OAAO,CAACQ,IAAI,CAACC,KAAK,IAAI,EAAE;YAC/BE,EAAE,EAAEX,OAAO,CAACQ,IAAI,CAACG,EAAE;YACnBC,QAAQ,EAAEZ,OAAO,CAACQ,IAAI,CAACK,aAAa,EAAED;UACxC,CAAC,CAAC,CAAC;UACHhD,KAAK,CAAC8C,QAAQ,CAACvC,YAAY,CAAC,eAAe,CAAC,CAAC;QAC/C,CAAC,MAAM;UACL0B,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnClC,KAAK,CAAC8C,QAAQ,CAACvC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QACjD;QAGAS,mBAAmB,CAACkC,iCAAiC,CAAC,CAAC;QAGvDpB,oBAAoB,CAACqB,OAAO,GAAGpC,aAAa,CAACqC,+BAA+B,CAACC,YAAY,IAAI;UAC3FpB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEmB,YAAY,CAAC;QACrD,CAAC,CAAC;QAGFtB,gBAAgB,CAACoB,OAAO,GAAGpC,aAAa,CAACuC,uCAAuC,CAACC,QAAQ,IAAI;UAC3FtB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEqB,QAAQ,CAAC;QACpD,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAO3B,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDC,QAAQ,CAAC,oCAAoC,CAAC;QAC9C7B,KAAK,CAAC8C,QAAQ,CAACrC,MAAM,CAAC,CAAC,CAAC;MAC1B,CAAC,SAAS;QACRkB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDK,aAAa,CAAC,CAAC;IAEf,OAAO,MAAM;MAEXjB,aAAa,CAACyC,8BAA8B,CAAC1B,oBAAoB,CAACqB,OAAO,CAAC;MAC1EpC,aAAa,CAACyC,8BAA8B,CAACzB,gBAAgB,CAACoB,OAAO,CAAC;IACxE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIzB,SAAS,EAAE;IACb,OACER,OAAA,CAACd,IAAI;MAACqD,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,GACvE3C,OAAA,CAACf,iBAAiB;QAAC2D,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClDjD,OAAA,CAACb,IAAI;QAACoD,KAAK,EAAE;UAAEW,SAAS,EAAE;QAAG,CAAE;QAAAP,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEX;EAEA,IAAIvC,KAAK,EAAE;IACT,OACEV,OAAA,CAACd,IAAI;MAACqD,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvE3C,OAAA,CAACb,IAAI;QAACoD,KAAK,EAAE;UAAEM,KAAK,EAAE;QAAM,CAAE;QAAAF,QAAA,EAAEjC;MAAK;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAEX;EAEA,OACEjD,OAAA,CAACnB,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAA6D,QAAA,GACrB3C,OAAA,CAACpB,WAAW;MAACuE,OAAO,EAAE,IAAK;MAACpE,SAAS,EAAEA,SAAU;MAAA4D,QAAA,EAC/C3C,OAAA,CAACR,aAAa;QAACS,KAAK,EAAEA,KAAM;QAAA0C,QAAA,EAC1B3C,OAAA,CAACN,gBAAgB;UAAAiD,QAAA,EACf3C,OAAA,CAAChB,YAAY;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACdjD,OAAA,CAACJ,SAAS;MAAC2C,KAAK,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEf,CAAC;AAED,eAAe1C,GAAG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}