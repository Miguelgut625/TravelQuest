{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\components\\\\NotificationTest.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NotificationService } from '../services/NotificationService';\nimport { useAppSelector } from '../features/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationTest = () => {\n  const userId = useAppSelector(state => state.auth.user?.id);\n  const testLocalNotification = async () => {\n    try {\n      await NotificationService.scheduleNotification('Prueba de Notificación Local', 'Esta es una notificación local de prueba', {\n        test: true\n      });\n      console.log('Notificación local programada');\n    } catch (error) {\n      console.error('Error al programar notificación local:', error);\n    }\n  };\n  const testDatabaseNotification = async () => {\n    if (!userId) {\n      console.log('No hay usuario autenticado');\n      return;\n    }\n    try {\n      await NotificationService.createNotification(userId, 'Prueba de Notificación en Base de Datos', 'Esta es una notificación guardada en la base de datos', 'test', {\n        test: true\n      });\n      console.log('Notificación guardada en la base de datos');\n    } catch (error) {\n      console.error('Error al crear notificación en base de datos:', error);\n    }\n  };\n  const testPushNotification = async () => {\n    try {\n      const token = await NotificationService.registerForPushNotificationsAsync();\n      console.log('Token de notificación push:', token);\n    } catch (error) {\n      console.error('Error al registrar notificaciones push:', error);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Prueba de Notificaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(Button, {\n        title: \"Probar Notificaci\\xF3n Local\",\n        onPress: testLocalNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(Button, {\n        title: \"Probar Notificaci\\xF3n en Base de Datos\",\n        onPress: testDatabaseNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(Button, {\n        title: \"Registrar para Notificaciones Push\",\n        onPress: testPushNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    marginVertical: 10\n  }\n});","map":{"version":3,"names":["React","View","Text","Button","StyleSheet","NotificationService","useAppSelector","jsxDEV","_jsxDEV","NotificationTest","userId","state","auth","user","id","testLocalNotification","scheduleNotification","test","console","log","error","testDatabaseNotification","createNotification","testPushNotification","token","registerForPushNotificationsAsync","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","onPress","create","flex","padding","justifyContent","fontSize","fontWeight","marginBottom","textAlign","marginVertical"],"sources":["C:/Users/PC/TravelQuest/src/components/NotificationTest.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\nimport { NotificationService } from '../services/NotificationService';\r\nimport { useAppSelector } from '../features/hooks';\r\n\r\nexport const NotificationTest = () => {\r\n    const userId = useAppSelector(state => state.auth.user?.id);\r\n\r\n    const testLocalNotification = async () => {\r\n        try {\r\n            await NotificationService.scheduleNotification(\r\n                'Prueba de Notificación Local',\r\n                'Esta es una notificación local de prueba',\r\n                { test: true }\r\n            );\r\n            console.log('Notificación local programada');\r\n        } catch (error) {\r\n            console.error('Error al programar notificación local:', error);\r\n        }\r\n    };\r\n\r\n    const testDatabaseNotification = async () => {\r\n        if (!userId) {\r\n            console.log('No hay usuario autenticado');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await NotificationService.createNotification(\r\n                userId,\r\n                'Prueba de Notificación en Base de Datos',\r\n                'Esta es una notificación guardada en la base de datos',\r\n                'test',\r\n                { test: true }\r\n            );\r\n            console.log('Notificación guardada en la base de datos');\r\n        } catch (error) {\r\n            console.error('Error al crear notificación en base de datos:', error);\r\n        }\r\n    };\r\n\r\n    const testPushNotification = async () => {\r\n        try {\r\n            const token = await NotificationService.registerForPushNotificationsAsync();\r\n            console.log('Token de notificación push:', token);\r\n        } catch (error) {\r\n            console.error('Error al registrar notificaciones push:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Prueba de Notificaciones</Text>\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    title=\"Probar Notificación Local\"\r\n                    onPress={testLocalNotification}\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    title=\"Probar Notificación en Base de Datos\"\r\n                    onPress={testDatabaseNotification}\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    title=\"Registrar para Notificaciones Push\"\r\n                    onPress={testPushNotification}\r\n                />\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 30,\r\n        textAlign: 'center',\r\n    },\r\n    buttonContainer: {\r\n        marginVertical: 10,\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}