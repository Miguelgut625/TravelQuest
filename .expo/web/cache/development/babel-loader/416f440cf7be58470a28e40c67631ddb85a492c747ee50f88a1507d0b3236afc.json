{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\VerifyEmailScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmailScreen = ({\n  route\n}) => {\n  const {\n    email\n  } = route.params || {};\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const resendVerificationEmail = async () => {\n    if (!email) {\n      Alert.alert('Error', 'No se encontró el correo electrónico');\n      return;\n    }\n    try {\n      setLoading(true);\n      const {\n        error\n      } = await supabase.auth.resend({\n        type: 'signup',\n        email\n      });\n      if (error) {\n        throw error;\n      }\n      Alert.alert('Correo enviado', 'Se ha enviado un nuevo correo de verificación. Por favor, revisa tu bandeja de entrada.');\n    } catch (error) {\n      Alert.alert('Error', error.message || 'No se pudo enviar el correo de verificación');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Verifica tu correo electr\\xF3nico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.description,\n      children: [\"Se ha enviado un correo de verificaci\\xF3n a \", _jsxDEV(Text, {\n        style: styles.email,\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }, this), \". Por favor, verifica tu correo electr\\xF3nico para continuar.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.note,\n      children: \"Nota: Seg\\xFAn la configuraci\\xF3n actual de Supabase, los usuarios deben verificar su correo electr\\xF3nico antes de poder iniciar sesi\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: resendVerificationEmail,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Reenviar correo de verificaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.backButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.backButtonText,\n        children: \"Volver al inicio de sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\nexport default VerifyEmailScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","ActivityIndicator","Alert","supabase","useNavigation","styles","jsxDEV","_jsxDEV","VerifyEmailScreen","route","email","params","loading","setLoading","navigation","resendVerificationEmail","alert","error","auth","resend","type","message","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","note","button","onPress","disabled","color","buttonText","backButton","navigate","backButtonText"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/VerifyEmailScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert } from 'react-native';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from './style'; // Importamos los estilos\n\nconst VerifyEmailScreen = ({ route }: any) => {\n  const { email } = route.params || {};\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation<any>();\n\n  const resendVerificationEmail = async () => {\n    if (!email) {\n      Alert.alert('Error', 'No se encontró el correo electrónico');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      const { error } = await supabase.auth.resend({\n        type: 'signup',\n        email\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      Alert.alert(\n        'Correo enviado',\n        'Se ha enviado un nuevo correo de verificación. Por favor, revisa tu bandeja de entrada.'\n      );\n    } catch (error: any) {\n      Alert.alert('Error', error.message || 'No se pudo enviar el correo de verificación');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Verifica tu correo electrónico</Text>\n      <Text style={styles.description}>\n        Se ha enviado un correo de verificación a <Text style={styles.email}>{email}</Text>.\n        Por favor, verifica tu correo electrónico para continuar.\n      </Text>\n\n      <Text style={styles.note}>\n        Nota: Según la configuración actual de Supabase, los usuarios deben verificar su correo\n        electrónico antes de poder iniciar sesión.\n      </Text>\n\n      <TouchableOpacity \n        style={styles.button}\n        onPress={resendVerificationEmail}\n        disabled={loading}\n      >\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.buttonText}>Reenviar correo de verificación</Text>\n        )}\n      </TouchableOpacity>\n\n      <TouchableOpacity \n        style={styles.backButton}\n        onPress={() => navigation.navigate('Login')}\n      >\n        <Text style={styles.backButtonText}>Volver al inicio de sesión</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default VerifyEmailScreen; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAExC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC5C,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK,CAACE,MAAM,IAAI,CAAC,CAAC;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMiB,UAAU,GAAGV,aAAa,CAAM,CAAC;EAEvC,MAAMW,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACL,KAAK,EAAE;MACVR,KAAK,CAACc,KAAK,CAAC,OAAO,EAAE,sCAAsC,CAAC;MAC5D;IACF;IAEA,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAM;QAAEI;MAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAACC,MAAM,CAAC;QAC3CC,IAAI,EAAE,QAAQ;QACdV;MACF,CAAC,CAAC;MAEF,IAAIO,KAAK,EAAE;QACT,MAAMA,KAAK;MACb;MAEAf,KAAK,CAACc,KAAK,CACT,gBAAgB,EAChB,yFACF,CAAC;IACH,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBf,KAAK,CAACc,KAAK,CAAC,OAAO,EAAEC,KAAK,CAACI,OAAO,IAAI,6CAA6C,CAAC;IACtF,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OACEN,OAAA,CAACT,IAAI;IAACwB,KAAK,EAAEjB,MAAM,CAACkB,SAAU;IAAAC,QAAA,GAC5BjB,OAAA,CAACR,IAAI;MAACuB,KAAK,EAAEjB,MAAM,CAACoB,KAAM;MAAAD,QAAA,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAChEtB,OAAA,CAACR,IAAI;MAACuB,KAAK,EAAEjB,MAAM,CAACyB,WAAY;MAAAN,QAAA,GAAC,+CACW,EAAAjB,OAAA,CAACR,IAAI;QAACuB,KAAK,EAAEjB,MAAM,CAACK,KAAM;QAAAc,QAAA,EAAEd;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,kEAErF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEPtB,OAAA,CAACR,IAAI;MAACuB,KAAK,EAAEjB,MAAM,CAAC0B,IAAK;MAAAP,QAAA,EAAC;IAG1B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEPtB,OAAA,CAACP,gBAAgB;MACfsB,KAAK,EAAEjB,MAAM,CAAC2B,MAAO;MACrBC,OAAO,EAAElB,uBAAwB;MACjCmB,QAAQ,EAAEtB,OAAQ;MAAAY,QAAA,EAEjBZ,OAAO,GACNL,OAAA,CAACN,iBAAiB;QAACkC,KAAK,EAAC;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAEnCtB,OAAA,CAACR,IAAI;QAACuB,KAAK,EAAEjB,MAAM,CAAC+B,UAAW;QAAAZ,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IACtE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,EAEnBtB,OAAA,CAACP,gBAAgB;MACfsB,KAAK,EAAEjB,MAAM,CAACgC,UAAW;MACzBJ,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACwB,QAAQ,CAAC,OAAO,CAAE;MAAAd,QAAA,EAE5CjB,OAAA,CAACR,IAAI;QAACuB,KAAK,EAAEjB,MAAM,CAACkC,cAAe;QAAAf,QAAA,EAAC;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEX,CAAC;AAED,eAAerB,iBAAiB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}