{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\ResetPasswordScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPasswordScreen = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const handleResetPassword = async () => {\n    if (!newPassword || !confirmPassword) {\n      Alert.alert('Error', 'Por favor, completa todos los campos');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      Alert.alert('Error', 'Las contraseñas no coinciden');\n      return;\n    }\n    if (newPassword.length < 6) {\n      Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) {\n        Alert.alert('Error', 'Error al verificar la sesión');\n        return;\n      }\n      if (!session) {\n        Alert.alert('Error', 'Tu sesión ha expirado. Por favor, vuelve a iniciar sesión');\n        navigation.navigate('Login');\n        return;\n      }\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      Alert.alert('Éxito', 'Tu contraseña ha sido actualizada correctamente');\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error al cambiar contraseña:', error);\n      Alert.alert('Error', 'Ocurrió un error al cambiar la contraseña');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Cambiar Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa tu nueva contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nueva contrase\\xF1a\",\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleResetPassword,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Cambiar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","supabase","useNavigation","styles","jsxDEV","_jsxDEV","ResetPasswordScreen","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigation","handleResetPassword","alert","length","data","session","error","sessionError","auth","getSession","navigate","updateUser","password","message","console","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","secureTextEntry","button","buttonDisabled","onPress","disabled","color","buttonText","cancelButton","cancelButtonText"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/ResetPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Alert,\n    ActivityIndicator,\n} from 'react-native';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../navigation/types';\nimport styles from './style'; // Importamos los estilos\n\ntype ResetPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nexport const ResetPasswordScreen = () => {\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigation = useNavigation<ResetPasswordScreenNavigationProp>();\n\n    const handleResetPassword = async () => {\n        if (!newPassword || !confirmPassword) {\n            Alert.alert('Error', 'Por favor, completa todos los campos');\n            return;\n        }\n\n        if (newPassword !== confirmPassword) {\n            Alert.alert('Error', 'Las contraseñas no coinciden');\n            return;\n        }\n\n        if (newPassword.length < 6) {\n            Alert.alert('Error', 'La contraseña debe tener al menos 6 caracteres');\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            // Verificar la sesión actual\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n\n            if (sessionError) {\n                Alert.alert('Error', 'Error al verificar la sesión');\n                return;\n            }\n\n            if (!session) {\n                Alert.alert('Error', 'Tu sesión ha expirado. Por favor, vuelve a iniciar sesión');\n                navigation.navigate('Login');\n                return;\n            }\n\n            // Actualizar la contraseña\n            const { error } = await supabase.auth.updateUser({\n                password: newPassword\n            });\n\n            if (error) {\n                Alert.alert('Error', error.message);\n                return;\n            }\n\n            Alert.alert('Éxito', 'Tu contraseña ha sido actualizada correctamente');\n            navigation.navigate('Login');\n        } catch (error) {\n            console.error('Error al cambiar contraseña:', error);\n            Alert.alert('Error', 'Ocurrió un error al cambiar la contraseña');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Cambiar Contraseña</Text>\n            <Text style={styles.subtitle}>\n                Por favor, ingresa tu nueva contraseña\n            </Text>\n\n            <TextInput\n                style={styles.input}\n                placeholder=\"Nueva contraseña\"\n                value={newPassword}\n                onChangeText={setNewPassword}\n                secureTextEntry\n            />\n\n            <TextInput\n                style={styles.input}\n                placeholder=\"Confirmar contraseña\"\n                value={confirmPassword}\n                onChangeText={setConfirmPassword}\n                secureTextEntry\n            />\n\n            <TouchableOpacity\n                style={[styles.button, loading && styles.buttonDisabled]}\n                onPress={handleResetPassword}\n                disabled={loading}\n            >\n                {loading ? (\n                    <ActivityIndicator color=\"white\" />\n                ) : (\n                    <Text style={styles.buttonText}>Cambiar Contraseña</Text>\n                )}\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.cancelButton}\n                onPress={() => navigation.navigate('Login')}\n            >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default ResetPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}