{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\ProfileScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout, setAuthState } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport CloudinaryStatusCard from '../../components/CloudinaryStatusCard';\nimport styles from '../main/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = () => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [isChangePasswordVisible, setIsChangePasswordVisible] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const [stats, setStats] = useState({\n    totalPoints: 0,\n    completedMissions: 0,\n    visitedCities: 0\n  });\n  const [loadingStats, setLoadingStats] = useState(true);\n  useEffect(() => {\n    fetchUserStats();\n  }, [user?.id]);\n  const fetchUserStats = async () => {\n    if (!user?.id) return;\n    try {\n      setLoadingStats(true);\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n          id,\n          cityId,\n          journeys_missions!inner (\n            completed,\n            challenges!inner (\n              points\n            )\n          )\n        `).eq('userId', user.id);\n      if (journeysError) throw journeysError;\n      const stats = {\n        totalPoints: 0,\n        completedMissions: 0,\n        visitedCities: new Set()\n      };\n      journeys?.forEach(journey => {\n        if (journey.cityId) {\n          stats.visitedCities.add(journey.cityId);\n        }\n        journey.journeys_missions.forEach(mission => {\n          if (mission.completed) {\n            stats.completedMissions++;\n            stats.totalPoints += mission.challenges.points;\n          }\n        });\n      });\n      setStats({\n        totalPoints: stats.totalPoints,\n        completedMissions: stats.completedMissions,\n        visitedCities: stats.visitedCities.size\n      });\n    } catch (error) {\n      console.error('Error obteniendo estadísticas:', error);\n    } finally {\n      setLoadingStats(false);\n    }\n  };\n  const handleLogout = async () => {\n    if (loading) return;\n    try {\n      setLoading(true);\n      console.log('Iniciando proceso de cierre de sesión');\n      console.log('Cerrando sesión en Supabase');\n      const {\n        error: signOutError\n      } = await supabase.auth.signOut();\n      if (signOutError) {\n        console.error('Error al cerrar sesión en Supabase:', signOutError);\n        Alert.alert('Error', 'No se pudo cerrar la sesión en Supabase');\n        return;\n      }\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      if (session) {\n        console.log('Sesión aún activa, intentando cerrar nuevamente');\n        await supabase.auth.signOut();\n      }\n      console.log('Limpiando estado de Redux');\n      dispatch(logout());\n      dispatch(setAuthState('unauthenticated'));\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n      Alert.alert('Error', 'Ocurrió un error al cerrar sesión');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChangePassword = async () => {\n    if (!currentPassword) {\n      setMessage({\n        type: 'error',\n        text: 'Por favor ingresa tu contraseña actual'\n      });\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setMessage({\n        type: 'error',\n        text: 'Las contraseñas nuevas no coinciden'\n      });\n      return;\n    }\n    if (newPassword.length < 6) {\n      setMessage({\n        type: 'error',\n        text: 'La contraseña debe tener al menos 6 caracteres'\n      });\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const {\n        data: {\n          session\n        },\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) {\n        console.error('Error al obtener la sesión:', sessionError);\n        setMessage({\n          type: 'error',\n          text: 'Error al verificar tu sesión. Por favor, intenta nuevamente.'\n        });\n        return;\n      }\n      if (!session) {\n        const {\n          data: signInData,\n          error: signInError\n        } = await supabase.auth.signInWithPassword({\n          email: user?.email || '',\n          password: currentPassword\n        });\n        if (signInError) {\n          console.error('Error al verificar contraseña:', signInError);\n          setMessage({\n            type: 'error',\n            text: 'La contraseña actual es incorrecta'\n          });\n          return;\n        }\n        if (!signInData.session) {\n          setMessage({\n            type: 'error',\n            text: 'No se pudo iniciar sesión. Por favor, intenta nuevamente.'\n          });\n          return;\n        }\n        const {\n          error: updateError\n        } = await supabase.auth.updateUser({\n          password: newPassword\n        });\n        if (updateError) {\n          console.error('Error al actualizar contraseña:', updateError);\n          setMessage({\n            type: 'error',\n            text: 'No se pudo actualizar la contraseña: ' + updateError.message\n          });\n          return;\n        }\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n        setMessage({\n          type: 'success',\n          text: 'Tu contraseña ha sido actualizada correctamente'\n        });\n        setTimeout(() => {\n          setIsChangePasswordVisible(false);\n          setMessage({\n            type: '',\n            text: ''\n          });\n        }, 2000);\n        return;\n      }\n      const {\n        error: signInError\n      } = await supabase.auth.signInWithPassword({\n        email: user?.email || '',\n        password: currentPassword\n      });\n      if (signInError) {\n        console.error('Error al verificar contraseña:', signInError);\n        setMessage({\n          type: 'error',\n          text: 'La contraseña actual es incorrecta'\n        });\n        return;\n      }\n      const {\n        error: updateError\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (updateError) {\n        console.error('Error al actualizar contraseña:', updateError);\n        setMessage({\n          type: 'error',\n          text: 'No se pudo actualizar la contraseña: ' + updateError.message\n        });\n        return;\n      }\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setMessage({\n        type: 'success',\n        text: 'Tu contraseña ha sido actualizada correctamente'\n      });\n      setTimeout(() => {\n        setIsChangePasswordVisible(false);\n        setMessage({\n          type: '',\n          text: ''\n        });\n      }, 2000);\n    } catch (error) {\n      console.error('Error al cambiar contraseña:', error);\n      setMessage({\n        type: 'error',\n        text: 'Ocurrió un error al intentar cambiar la contraseña. Por favor, intenta nuevamente.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [user?.profilePicture ? _jsxDEV(Image, {\n        source: {\n          uri: user.profilePicture\n        },\n        style: styles.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : _jsxDEV(View, {\n        style: styles.avatarContainer,\n        children: _jsxDEV(Ionicons, {\n          name: \"person-circle\",\n          size: 100,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: styles.username,\n        children: user?.username || user?.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.email,\n        children: user?.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.statsContainer,\n      children: loadingStats ? _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this) : _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.statCard,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: stats.totalPoints\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Puntos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.statCard,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: stats.completedMissions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Misiones Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.statCard,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: stats.visitedCities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Ciudades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Configuraci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), _jsxDEV(CloudinaryStatusCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Seguridad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.privacyContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.privacyButton,\n          onPress: () => setIsChangePasswordVisible(true),\n          children: _jsxDEV(Text, {\n            style: styles.privacyButtonText,\n            children: \"Cambiar Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.privacyDescription,\n          children: \"Actualiza tu contrase\\xF1a para mantener tu cuenta segura\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.logoutButton, loading && styles.disabledButton],\n      onPress: handleLogout,\n      disabled: loading,\n      children: _jsxDEV(Text, {\n        style: styles.logoutButtonText,\n        children: loading ? 'Cerrando sesión...' : 'Cerrar Sesión'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: isChangePasswordVisible,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: \"Cambiar Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), message.text ? _jsxDEV(Text, {\n            style: [styles.messageText, message.type === 'error' ? styles.errorMessage : styles.successMessage],\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this) : null, _jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Contrase\\xF1a actual\",\n            secureTextEntry: true,\n            value: currentPassword,\n            onChangeText: text => {\n              setCurrentPassword(text);\n              setMessage({\n                type: '',\n                text: ''\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Nueva contrase\\xF1a\",\n            secureTextEntry: true,\n            value: newPassword,\n            onChangeText: text => {\n              setNewPassword(text);\n              setMessage({\n                type: '',\n                text: ''\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Confirmar nueva contrase\\xF1a\",\n            secureTextEntry: true,\n            value: confirmPassword,\n            onChangeText: text => {\n              setConfirmPassword(text);\n              setMessage({\n                type: '',\n                text: ''\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: () => {\n                setIsChangePasswordVisible(false);\n                setCurrentPassword('');\n                setNewPassword('');\n                setConfirmPassword('');\n                setMessage({\n                  type: '',\n                  text: ''\n                });\n              },\n              children: _jsxDEV(Text, {\n                style: styles.modalButtonText,\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton, loading && styles.disabledButton],\n              onPress: handleChangePassword,\n              disabled: loading,\n              children: _jsxDEV(Text, {\n                style: styles.modalButtonText,\n                children: loading ? 'Guardando...' : 'Guardar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Image","TextInput","Modal","Alert","ActivityIndicator","ScrollView","useSelector","useDispatch","logout","setAuthState","supabase","useNavigation","Ionicons","CloudinaryStatusCard","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileScreen","navigation","dispatch","user","state","auth","isChangePasswordVisible","setIsChangePasswordVisible","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","message","setMessage","type","text","stats","setStats","totalPoints","completedMissions","visitedCities","loadingStats","setLoadingStats","fetchUserStats","id","data","journeys","error","journeysError","from","select","eq","Set","forEach","journey","cityId","add","journeys_missions","mission","completed","challenges","points","size","console","handleLogout","log","signOutError","signOut","alert","session","getSession","handleChangePassword","length","sessionError","signInData","signInError","signInWithPassword","email","password","updateError","updateUser","setTimeout","style","container","children","header","profilePicture","source","uri","avatar","fileName","_jsxFileName","lineNumber","columnNumber","avatarContainer","name","color","username","statsContainer","statCard","statNumber","statLabel","section","sectionTitle","privacyContainer","privacyButton","onPress","privacyButtonText","privacyDescription","logoutButton","disabledButton","disabled","logoutButtonText","visible","transparent","animationType","modalContainer","modalContent","modalTitle","messageText","errorMessage","successMessage","input","placeholder","secureTextEntry","value","onChangeText","modalButtons","modalButton","cancelButton","modalButtonText","saveButton"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/main/ProfileScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, TextInput, Modal, Alert, ActivityIndicator, ScrollView } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../features/store';\nimport { logout, setAuthState } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../navigation/types';\nimport CloudinaryStatusCard from '../../components/CloudinaryStatusCard';\nimport styles from '../main/styles';\n\n// Definir interfaces para los tipos de datos\ninterface Journey {\n  id: string;\n  cityId: string;\n  journeys_missions: JourneyMission[];\n}\n\ninterface JourneyMission {\n  completed: boolean;\n  challenges: {\n    points: number;\n  };\n}\n\ntype ProfileScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst ProfileScreen = () => {\n  const navigation = useNavigation<ProfileScreenNavigationProp>();\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: RootState) => state.auth);\n  const [isChangePasswordVisible, setIsChangePasswordVisible] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [stats, setStats] = useState({\n    totalPoints: 0,\n    completedMissions: 0,\n    visitedCities: 0\n  });\n  const [loadingStats, setLoadingStats] = useState(true);\n\n  useEffect(() => {\n    fetchUserStats();\n  }, [user?.id]);\n\n  const fetchUserStats = async () => {\n    if (!user?.id) return;\n\n    try {\n      setLoadingStats(true);\n\n      // Obtener los journeys del usuario con sus misiones completadas\n      const { data: journeys, error: journeysError } = await supabase\n        .from('journeys')\n        .select(`\n          id,\n          cityId,\n          journeys_missions!inner (\n            completed,\n            challenges!inner (\n              points\n            )\n          )\n        `)\n        .eq('userId', user.id);\n\n      if (journeysError) throw journeysError;\n\n      // Calcular estadísticas\n      const stats = {\n        totalPoints: 0,\n        completedMissions: 0,\n        visitedCities: new Set()\n      };\n\n      (journeys as Journey[])?.forEach((journey: Journey) => {\n        // Añadir la ciudad a las visitadas\n        if (journey.cityId) {\n          stats.visitedCities.add(journey.cityId);\n        }\n\n        // Contar misiones completadas y puntos\n        journey.journeys_missions.forEach((mission: JourneyMission) => {\n          if (mission.completed) {\n            stats.completedMissions++;\n            stats.totalPoints += mission.challenges.points;\n          }\n        });\n      });\n\n      setStats({\n        totalPoints: stats.totalPoints,\n        completedMissions: stats.completedMissions,\n        visitedCities: stats.visitedCities.size\n      });\n\n    } catch (error) {\n      console.error('Error obteniendo estadísticas:', error);\n    } finally {\n      setLoadingStats(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    if (loading) return;\n\n    try {\n      setLoading(true);\n      console.log('Iniciando proceso de cierre de sesión');\n\n      // Primero cerramos la sesión en Supabase\n      console.log('Cerrando sesión en Supabase');\n      const { error: signOutError } = await supabase.auth.signOut();\n\n      if (signOutError) {\n        console.error('Error al cerrar sesión en Supabase:', signOutError);\n        Alert.alert('Error', 'No se pudo cerrar la sesión en Supabase');\n        return;\n      }\n\n      // Verificar que la sesión se haya cerrado correctamente\n      const { data: { session } } = await supabase.auth.getSession();\n      if (session) {\n        console.log('Sesión aún activa, intentando cerrar nuevamente');\n        await supabase.auth.signOut();\n      }\n\n      // Una vez que la sesión está cerrada, limpiamos el estado de Redux\n      console.log('Limpiando estado de Redux');\n      dispatch(logout());\n\n      // Forzar la actualización del estado de autenticación\n      dispatch(setAuthState('unauthenticated'));\n\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n      Alert.alert('Error', 'Ocurrió un error al cerrar sesión');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChangePassword = async () => {\n    if (!currentPassword) {\n      setMessage({ type: 'error', text: 'Por favor ingresa tu contraseña actual' });\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setMessage({ type: 'error', text: 'Las contraseñas nuevas no coinciden' });\n      return;\n    }\n\n    if (newPassword.length < 6) {\n      setMessage({ type: 'error', text: 'La contraseña debe tener al menos 6 caracteres' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      // Primero verificamos la sesión actual\n      const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n\n      if (sessionError) {\n        console.error('Error al obtener la sesión:', sessionError);\n        setMessage({ type: 'error', text: 'Error al verificar tu sesión. Por favor, intenta nuevamente.' });\n        return;\n      }\n\n      if (!session) {\n        // Si no hay sesión, intentamos iniciar sesión con las credenciales actuales\n        const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({\n          email: user?.email || '',\n          password: currentPassword\n        });\n\n        if (signInError) {\n          console.error('Error al verificar contraseña:', signInError);\n          setMessage({ type: 'error', text: 'La contraseña actual es incorrecta' });\n          return;\n        }\n\n        if (!signInData.session) {\n          setMessage({ type: 'error', text: 'No se pudo iniciar sesión. Por favor, intenta nuevamente.' });\n          return;\n        }\n\n        // Ahora intentamos actualizar la contraseña\n        const { error: updateError } = await supabase.auth.updateUser({\n          password: newPassword\n        });\n\n        if (updateError) {\n          console.error('Error al actualizar contraseña:', updateError);\n          setMessage({ type: 'error', text: 'No se pudo actualizar la contraseña: ' + updateError.message });\n          return;\n        }\n\n        // Limpiamos el formulario\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n        setMessage({ type: 'success', text: 'Tu contraseña ha sido actualizada correctamente' });\n\n        // Cerramos el modal después de 2 segundos\n        setTimeout(() => {\n          setIsChangePasswordVisible(false);\n          setMessage({ type: '', text: '' });\n        }, 2000);\n\n        return;\n      }\n\n      // Si hay sesión activa, verificamos la contraseña actual\n      const { error: signInError } = await supabase.auth.signInWithPassword({\n        email: user?.email || '',\n        password: currentPassword\n      });\n\n      if (signInError) {\n        console.error('Error al verificar contraseña:', signInError);\n        setMessage({ type: 'error', text: 'La contraseña actual es incorrecta' });\n        return;\n      }\n\n      // Si la contraseña es correcta, actualizamos a la nueva\n      const { error: updateError } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n\n      if (updateError) {\n        console.error('Error al actualizar contraseña:', updateError);\n        setMessage({ type: 'error', text: 'No se pudo actualizar la contraseña: ' + updateError.message });\n        return;\n      }\n\n      // Limpiamos el formulario\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setMessage({ type: 'success', text: 'Tu contraseña ha sido actualizada correctamente' });\n\n      // Cerramos el modal después de 2 segundos\n      setTimeout(() => {\n        setIsChangePasswordVisible(false);\n        setMessage({ type: '', text: '' });\n      }, 2000);\n\n    } catch (error: any) {\n      console.error('Error al cambiar contraseña:', error);\n      setMessage({ type: 'error', text: 'Ocurrió un error al intentar cambiar la contraseña. Por favor, intenta nuevamente.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        {user?.profilePicture ? (\n          <Image\n            source={{ uri: user.profilePicture }}\n            style={styles.avatar}\n          />\n        ) : (\n          <View style={styles.avatarContainer}>\n            <Ionicons name=\"person-circle\" size={100} color=\"white\" />\n          </View>\n        )}\n        <Text style={styles.username}>{user?.username || user?.email}</Text>\n        <Text style={styles.email}>{user?.email}</Text>\n      </View>\n\n      <View style={styles.statsContainer}>\n        {loadingStats ? (\n          <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n        ) : (\n          <>\n            <View style={styles.statCard}>\n              <Text style={styles.statNumber}>{stats.totalPoints}</Text>\n              <Text style={styles.statLabel}>Puntos</Text>\n            </View>\n            <View style={styles.statCard}>\n              <Text style={styles.statNumber}>{stats.completedMissions}</Text>\n              <Text style={styles.statLabel}>Misiones Completadas</Text>\n            </View>\n            <View style={styles.statCard}>\n              <Text style={styles.statNumber}>{stats.visitedCities}</Text>\n              <Text style={styles.statLabel}>Ciudades</Text>\n            </View>\n          </>\n        )}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Configuración</Text>\n        <CloudinaryStatusCard />\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Seguridad</Text>\n        <View style={styles.privacyContainer}>\n          <TouchableOpacity\n            style={styles.privacyButton}\n            onPress={() => setIsChangePasswordVisible(true)}\n          >\n            <Text style={styles.privacyButtonText}>Cambiar Contraseña</Text>\n          </TouchableOpacity>\n          <Text style={styles.privacyDescription}>\n            Actualiza tu contraseña para mantener tu cuenta segura\n          </Text>\n        </View>\n      </View>\n\n      <TouchableOpacity\n        style={[\n          styles.logoutButton,\n          loading && styles.disabledButton\n        ]}\n        onPress={handleLogout}\n        disabled={loading}\n      >\n        <Text style={styles.logoutButtonText}>\n          {loading ? 'Cerrando sesión...' : 'Cerrar Sesión'}\n        </Text>\n      </TouchableOpacity>\n\n      <Modal\n        visible={isChangePasswordVisible}\n        transparent={true}\n        animationType=\"slide\"\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Cambiar Contraseña</Text>\n\n            {message.text ? (\n              <Text style={[\n                styles.messageText,\n                message.type === 'error' ? styles.errorMessage : styles.successMessage\n              ]}>\n                {message.text}\n              </Text>\n            ) : null}\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Contraseña actual\"\n              secureTextEntry\n              value={currentPassword}\n              onChangeText={(text) => {\n                setCurrentPassword(text);\n                setMessage({ type: '', text: '' });\n              }}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Nueva contraseña\"\n              secureTextEntry\n              value={newPassword}\n              onChangeText={(text) => {\n                setNewPassword(text);\n                setMessage({ type: '', text: '' });\n              }}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Confirmar nueva contraseña\"\n              secureTextEntry\n              value={confirmPassword}\n              onChangeText={(text) => {\n                setConfirmPassword(text);\n                setMessage({ type: '', text: '' });\n              }}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => {\n                  setIsChangePasswordVisible(false);\n                  setCurrentPassword('');\n                  setNewPassword('');\n                  setConfirmPassword('');\n                  setMessage({ type: '', text: '' });\n                }}\n              >\n                <Text style={styles.modalButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[\n                  styles.modalButton,\n                  styles.saveButton,\n                  loading && styles.disabledButton\n                ]}\n                onPress={handleChangePassword}\n                disabled={loading}\n              >\n                <Text style={styles.modalButtonText}>\n                  {loading ? 'Guardando...' : 'Guardar'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default ProfileScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}