{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\LoginScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, setAuthState, setError } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const error = useSelector(state => state.auth.error);\n  const handleLogin = async () => {\n    if (!email || !password) {\n      dispatch(setError('Por favor ingresa email y contraseña'));\n      return;\n    }\n    try {\n      setLoading(true);\n      dispatch(setAuthState('loading'));\n      dispatch(setError(null));\n      console.log('Iniciando sesión para:', email);\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: email.trim(),\n        password: password.trim()\n      });\n      if (error) {\n        console.error('Error de autenticación:', error);\n        if (error.message.includes('Invalid login credentials')) {\n          dispatch(setError('Email o contraseña incorrectos.'));\n        } else if (error.message.includes('User not allowed') || error.message.includes('Email not confirmed')) {\n          dispatch(setError('Necesitas verificar tu correo electrónico antes de iniciar sesión'));\n          navigation.navigate('VerifyEmail', {\n            email: email.trim()\n          });\n          return;\n        } else {\n          dispatch(setError('Error al iniciar sesión: ' + error.message));\n        }\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n      if (!data.user) {\n        dispatch(setError('No se encontró el usuario'));\n        dispatch(setAuthState('unauthenticated'));\n        return;\n      }\n      console.log('Login exitoso:', data.user.email);\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.from('users').select('username').eq('id', data.user.id).single();\n      if (userError) {\n        console.error('Error obteniendo datos del usuario:', userError);\n      }\n      dispatch(setUser({\n        email: data.user.email || '',\n        id: data.user.id,\n        username: userData?.username\n      }));\n      dispatch(setAuthState('authenticated'));\n      navigation.navigate('Main');\n    } catch (error) {\n      console.error('Error inesperado durante el login:', error);\n      dispatch(setError('Ocurrió un error inesperado'));\n      dispatch(setAuthState('unauthenticated'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleForgotPassword = () => {\n    navigation.navigate('ForgotPassword');\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Text, {\n        style: styles.title,\n        children: \"TravelQuest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.formContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChangeText: setEmail,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), error && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.forgotPasswordButton,\n        onPress: handleForgotPassword,\n        disabled: loading,\n        children: _jsxDEV(Text, {\n          style: styles.forgotPasswordText,\n          children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Register'),\n        children: _jsxDEV(Text, {\n          style: styles.link,\n          children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 20\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginTop: 60,\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  forgotPasswordButton: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  forgotPasswordText: {\n    color: '#4CAF50',\n    fontSize: 14,\n    textDecorationLine: 'underline'\n  },\n  link: {\n    color: '#4CAF50',\n    fontSize: 14,\n    marginTop: 20,\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: '#f44336',\n    marginBottom: 10,\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","useDispatch","useSelector","setUser","setAuthState","setError","supabase","useNavigation","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","loading","setLoading","dispatch","navigation","error","state","auth","handleLogin","console","log","data","signInWithPassword","trim","message","includes","navigate","user","userData","userError","from","select","eq","id","single","username","handleForgotPassword","style","styles","container","children","logoContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","forgotPasswordButton","forgotPasswordText","link","create","flex","backgroundColor","padding","alignItems","marginTop","marginBottom","fontSize","fontWeight","justifyContent","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","textDecorationLine","textAlign"],"sources":["C:/Users/Dani/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator, Alert } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser, setAuthState, setError } from '../../features/authSlice';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../../navigation/types';\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const error = useSelector((state: any) => state.auth.error);\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      dispatch(setError('Por favor ingresa email y contraseña'));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      dispatch(setAuthState('loading'));\r\n      dispatch(setError(null));\r\n\r\n      console.log('Iniciando sesión para:', email);\r\n\r\n      // Intentar iniciar sesión directamente\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: email.trim(),\r\n        password: password.trim()\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error de autenticación:', error);\r\n        if (error.message.includes('Invalid login credentials')) {\r\n          dispatch(setError('Email o contraseña incorrectos.'));\r\n        } else if (error.message.includes('User not allowed') || error.message.includes('Email not confirmed')) {\r\n          dispatch(setError('Necesitas verificar tu correo electrónico antes de iniciar sesión'));\r\n          // Redirigir a la pantalla de verificación\r\n          navigation.navigate('VerifyEmail', { email: email.trim() });\r\n          return;\r\n        } else {\r\n          dispatch(setError('Error al iniciar sesión: ' + error.message));\r\n        }\r\n        dispatch(setAuthState('unauthenticated'));\r\n        return;\r\n      }\r\n\r\n      if (!data.user) {\r\n        dispatch(setError('No se encontró el usuario'));\r\n        dispatch(setAuthState('unauthenticated'));\r\n        return;\r\n      }\r\n\r\n      console.log('Login exitoso:', data.user.email);\r\n\r\n      // Obtener datos adicionales del usuario\r\n      const { data: userData, error: userError } = await supabase\r\n        .from('users')\r\n        .select('username')\r\n        .eq('id', data.user.id)\r\n        .single();\r\n\r\n      if (userError) {\r\n        console.error('Error obteniendo datos del usuario:', userError);\r\n      }\r\n\r\n      // Actualizar el estado con los datos del usuario\r\n      dispatch(setUser({\r\n        email: data.user.email || '',\r\n        id: data.user.id,\r\n        username: userData?.username\r\n      }));\r\n      dispatch(setAuthState('authenticated'));\r\n      navigation.navigate('Main');\r\n\r\n    } catch (error) {\r\n      console.error('Error inesperado durante el login:', error);\r\n      dispatch(setError('Ocurrió un error inesperado'));\r\n      dispatch(setAuthState('unauthenticated'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleForgotPassword = () => {\r\n    navigation.navigate('ForgotPassword');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.logoContainer}>\r\n        <Text style={styles.title}>TravelQuest</Text>\r\n      </View>\r\n\r\n      <View style={styles.formContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n\r\n        {error && (\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        )}\r\n\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handleLogin}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.forgotPasswordButton}\r\n          onPress={handleForgotPassword}\r\n          disabled={loading}\r\n        >\r\n          <Text style={styles.forgotPasswordText}>¿Olvidaste tu contraseña?</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate('Register')}>\r\n          <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 20,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 60,\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  formContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  forgotPasswordButton: {\r\n    marginTop: 15,\r\n    alignItems: 'center',\r\n  },\r\n  forgotPasswordText: {\r\n    color: '#4CAF50',\r\n    fontSize: 14,\r\n    textDecorationLine: 'underline',\r\n  },\r\n  link: {\r\n    color: '#4CAF50',\r\n    fontSize: 14,\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  errorText: {\r\n    color: '#f44336',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}