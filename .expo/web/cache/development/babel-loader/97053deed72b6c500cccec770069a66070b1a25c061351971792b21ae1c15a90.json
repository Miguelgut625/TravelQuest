{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  entries: {},\n  isLoading: false,\n  error: null\n};\nvar journalSlice = createSlice({\n  name: 'journal',\n  initialState: initialState,\n  reducers: {\n    addEntry: function addEntry(state, action) {\n      var cityId = action.payload.cityId;\n      if (!state.entries[cityId]) {\n        state.entries[cityId] = [];\n      }\n      state.entries[cityId].push(action.payload);\n    },\n    updateEntry: function updateEntry(state, action) {\n      var _action$payload = action.payload,\n        cityId = _action$payload.cityId,\n        id = _action$payload.id;\n      var cityEntries = state.entries[cityId];\n      if (cityEntries) {\n        var index = cityEntries.findIndex(function (entry) {\n          return entry.id === id;\n        });\n        if (index !== -1) {\n          cityEntries[index] = action.payload;\n        }\n      }\n    },\n    deleteEntry: function deleteEntry(state, action) {\n      var _action$payload2 = action.payload,\n        cityId = _action$payload2.cityId,\n        entryId = _action$payload2.entryId;\n      if (state.entries[cityId]) {\n        state.entries[cityId] = state.entries[cityId].filter(function (entry) {\n          return entry.id !== entryId;\n        });\n      }\n    },\n    setLoading: function setLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nvar _journalSlice$actions = journalSlice.actions,\n  addEntry = _journalSlice$actions.addEntry,\n  updateEntry = _journalSlice$actions.updateEntry,\n  deleteEntry = _journalSlice$actions.deleteEntry,\n  setLoading = _journalSlice$actions.setLoading,\n  setError = _journalSlice$actions.setError;\nexport { addEntry, updateEntry, deleteEntry, setLoading, setError };\nexport default journalSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","entries","isLoading","error","journalSlice","name","reducers","addEntry","state","action","cityId","payload","push","updateEntry","_action$payload","id","cityEntries","index","findIndex","entry","deleteEntry","_action$payload2","entryId","filter","setLoading","setError","_journalSlice$actions","actions","reducer"],"sources":["C:/Users/Guacter/TravelQuest/src/features/journalSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface JournalEntry {\r\n  id: string;\r\n  cityId: string;\r\n  missionId?: string;\r\n  title: string;\r\n  content: string;\r\n  photos: string[];\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  createdAt: string;\r\n  tags: string[];\r\n}\r\n\r\ninterface JournalState {\r\n  entries: { [cityId: string]: JournalEntry[] };\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: JournalState = {\r\n  entries: {},\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst journalSlice = createSlice({\r\n  name: 'journal',\r\n  initialState,\r\n  reducers: {\r\n    addEntry: (state, action: PayloadAction<JournalEntry>) => {\r\n      const { cityId } = action.payload;\r\n      if (!state.entries[cityId]) {\r\n        state.entries[cityId] = [];\r\n      }\r\n      state.entries[cityId].push(action.payload);\r\n    },\r\n    updateEntry: (state, action: PayloadAction<JournalEntry>) => {\r\n      const { cityId, id } = action.payload;\r\n      const cityEntries = state.entries[cityId];\r\n      if (cityEntries) {\r\n        const index = cityEntries.findIndex(entry => entry.id === id);\r\n        if (index !== -1) {\r\n          cityEntries[index] = action.payload;\r\n        }\r\n      }\r\n    },\r\n    deleteEntry: (state, action: PayloadAction<{ cityId: string; entryId: string }>) => {\r\n      const { cityId, entryId } = action.payload;\r\n      if (state.entries[cityId]) {\r\n        state.entries[cityId] = state.entries[cityId].filter(entry => entry.id !== entryId);\r\n      }\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addEntry,\r\n  updateEntry,\r\n  deleteEntry,\r\n  setLoading,\r\n  setError,\r\n} = journalSlice.actions;\r\n\r\nexport default journalSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAuB7D,IAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfL,YAAY,EAAZA,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,KAAK,EAAEC,MAAmC,EAAK;MACxD,IAAQC,MAAM,GAAKD,MAAM,CAACE,OAAO,CAAzBD,MAAM;MACd,IAAI,CAACF,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,EAAE;QAC1BF,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,GAAG,EAAE;MAC5B;MACAF,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,CAACE,IAAI,CAACH,MAAM,CAACE,OAAO,CAAC;IAC5C,CAAC;IACDE,WAAW,EAAE,SAAbA,WAAWA,CAAGL,KAAK,EAAEC,MAAmC,EAAK;MAC3D,IAAAK,eAAA,GAAuBL,MAAM,CAACE,OAAO;QAA7BD,MAAM,GAAAI,eAAA,CAANJ,MAAM;QAAEK,EAAE,GAAAD,eAAA,CAAFC,EAAE;MAClB,IAAMC,WAAW,GAAGR,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC;MACzC,IAAIM,WAAW,EAAE;QACf,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK,CAACJ,EAAE,KAAKA,EAAE;QAAA,EAAC;QAC7D,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,WAAW,CAACC,KAAK,CAAC,GAAGR,MAAM,CAACE,OAAO;QACrC;MACF;IACF,CAAC;IACDS,WAAW,EAAE,SAAbA,WAAWA,CAAGZ,KAAK,EAAEC,MAA0D,EAAK;MAClF,IAAAY,gBAAA,GAA4BZ,MAAM,CAACE,OAAO;QAAlCD,MAAM,GAAAW,gBAAA,CAANX,MAAM;QAAEY,OAAO,GAAAD,gBAAA,CAAPC,OAAO;MACvB,IAAId,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,EAAE;QACzBF,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,GAAGF,KAAK,CAACP,OAAO,CAACS,MAAM,CAAC,CAACa,MAAM,CAAC,UAAAJ,KAAK;UAAA,OAAIA,KAAK,CAACJ,EAAE,KAAKO,OAAO;QAAA,EAAC;MACrF;IACF,CAAC;IACDE,UAAU,EAAE,SAAZA,UAAUA,CAAGhB,KAAK,EAAEC,MAA8B,EAAK;MACrDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACE,OAAO;IAClC,CAAC;IACDc,QAAQ,EAAE,SAAVA,QAAQA,CAAGjB,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEK,IAAAe,qBAAA,GAMHtB,YAAY,CAACuB,OAAO;EALtBpB,QAAQ,GAAAmB,qBAAA,CAARnB,QAAQ;EACRM,WAAW,GAAAa,qBAAA,CAAXb,WAAW;EACXO,WAAW,GAAAM,qBAAA,CAAXN,WAAW;EACXI,UAAU,GAAAE,qBAAA,CAAVF,UAAU;EACVC,QAAQ,GAAAC,qBAAA,CAARD,QAAQ;AACe,SAAAlB,QAAA,EAAAM,WAAA,EAAAO,WAAA,EAAAI,UAAA,EAAAC,QAAA;AAEzB,eAAerB,YAAY,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}