{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\RegisterScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterScreen = ({\n  navigation\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n  const handleRegister = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const {\n        data: authData,\n        error: signupError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            username: username\n          }\n        }\n      });\n      if (signupError) throw signupError;\n      if (!authData.user) {\n        throw new Error('No se pudo crear el usuario');\n      }\n      const {\n        error: insertError\n      } = await supabase.from('users').insert([{\n        id: authData.user.id,\n        email,\n        username,\n        created_at: new Date().toISOString()\n      }]);\n      if (insertError) throw insertError;\n      dispatch(setUser({\n        id: authData.user.id,\n        email: authData.user.email,\n        username: username\n      }));\n      navigation.replace('Login');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Crear Cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: setUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error ? _jsxDEV(Text, {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this) : null, _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.link,\n        children: \"\\xBFYa tienes cuenta? Inicia sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","useDispatch","setUser","supabase","jsxDEV","_jsxDEV","RegisterScreen","navigation","email","setEmail","password","setPassword","username","setUsername","loading","setLoading","error","setError","dispatch","handleRegister","data","authData","signupError","auth","signUp","options","user","Error","insertError","from","insert","id","created_at","Date","toISOString","replace","message","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","marginTop","textDecorationLine"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser, setToken } from '../../features/authSlice';\r\nimport { supabase } from '../../services/supabase';\r\n\r\nconst RegisterScreen = ({ navigation }: any) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegister = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Crear un nuevo usuario en Supabase\r\n      const { data: authData, error: signupError } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            username: username\r\n          }\r\n        }\r\n      });\r\n\r\n      if (signupError) throw signupError;\r\n\r\n      if (!authData.user) {\r\n        throw new Error('No se pudo crear el usuario');\r\n      }\r\n\r\n      // Insertar el usuario en la tabla 'users' sin la contraseña\r\n      const { error: insertError } = await supabase\r\n        .from('users')\r\n        .insert([\r\n          {\r\n            id: authData.user.id,\r\n            email,\r\n            username,\r\n            created_at: new Date().toISOString()\r\n          }\r\n        ]);\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      // Guardar el usuario en Redux\r\n      dispatch(setUser({\r\n        id: authData.user.id,\r\n        email: authData.user.email!,\r\n        username: username,\r\n      }));\r\n\r\n      // Redirigir a la pantalla de inicio de sesión\r\n      navigation.replace('Login');\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Crear Cuenta</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nombre de usuario\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Contraseña\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n      <TouchableOpacity style={styles.button} onPress={handleRegister} disabled={loading}>\r\n        {loading ? (\r\n          <ActivityIndicator color=\"white\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>Registrarse</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n        <Text style={styles.link}>¿Ya tienes cuenta? Inicia sesión</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 40,\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 20,\r\n    color: '#4CAF50',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}