{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\LeaderboardScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderboardScreen = () => {\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('users').select('username, points').order('points', {\n          ascending: false\n        });\n        if (error) throw error;\n        setLeaderboardData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLeaderboardData();\n  }, []);\n  const renderItem = ({\n    item\n  }) => _jsxDEV(View, {\n    style: styles.itemContainer,\n    children: _jsxDEV(Text, {\n      style: styles.itemText,\n      children: [item.username, \": \", item.points]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return _jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(Text, {\n      style: styles.errorText,\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: leaderboardData,\n      renderItem: renderItem,\n      keyExtractor: item => item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f8f9fa'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center',\n    color: '#343a40'\n  },\n  itemContainer: {\n    padding: 12,\n    marginVertical: 8,\n    borderRadius: 8,\n    backgroundColor: '#ffffff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 2\n  },\n  itemText: {\n    fontSize: 18,\n    color: '#495057'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginTop: 20\n  }\n});\nexport default LeaderboardScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","ActivityIndicator","StyleSheet","supabase","jsxDEV","_jsxDEV","LeaderboardScreen","leaderboardData","setLeaderboardData","loading","setLoading","error","setError","fetchLeaderboardData","data","from","select","order","ascending","err","message","renderItem","item","style","styles","itemContainer","children","itemText","username","points","fileName","_jsxFileName","lineNumber","columnNumber","size","color","errorText","container","title","keyExtractor","id","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","marginVertical","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/LeaderboardScreen.tsx"],"sourcesContent":["// src/screens/main/LeaderboardScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, FlatList, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { supabase } from '../../services/supabase'; \r\n\r\ninterface LeaderboardItem {\r\n  id: string; // Asegúrate de que este campo exista en tu tabla\r\n  username: string; // Cambia 'username' si el campo tiene otro nombre\r\n  points: number;\r\n}\r\n\r\nconst LeaderboardScreen = () => {\r\n  const [leaderboardData, setLeaderboardData] = useState<LeaderboardItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboardData = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('users') \r\n          .select('username, points') \r\n          .order('points', { ascending: false }); \r\n\r\n        if (error) throw error;\r\n\r\n        setLeaderboardData(data);\r\n      } catch (err: any) { // Especifica el tipo de 'err' como 'any'\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLeaderboardData();\r\n  }, []);\r\n\r\n  const renderItem = ({ item }: { item: LeaderboardItem }) => (\r\n    <View style={styles.itemContainer}>\r\n      <Text style={styles.itemText}>{item.username}: {item.points}</Text>\r\n    </View>\r\n  );\r\n\r\n  if (loading) {\r\n    return <ActivityIndicator size=\"large\" color=\"#0000ff\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Text style={styles.errorText}>Error: {error}</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Leaderboard</Text>\r\n      <FlatList\r\n        data={leaderboardData}\r\n        renderItem={renderItem}\r\n        keyExtractor={item => item.id}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f8f9fa', // Color de fondo\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n    color: '#343a40', // Color del texto del título\r\n  },\r\n  itemContainer: {\r\n    padding: 12,\r\n    marginVertical: 8,\r\n    borderRadius: 8,\r\n    backgroundColor: '#ffffff', // Color de fondo de los elementos\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 4,\r\n    elevation: 2, // Para Android\r\n  },\r\n  itemText: {\r\n    fontSize: 18,\r\n    color: '#495057', // Color del texto de los elementos\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default LeaderboardScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}