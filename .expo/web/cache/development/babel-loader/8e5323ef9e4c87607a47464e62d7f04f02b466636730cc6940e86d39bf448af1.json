{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./src/features/store\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { testSupabaseConnection } from \"./src/services/testConnection\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { linking } from \"./src/navigation/linking\";\nimport { supabase } from \"./src/services/supabase\";\nimport { setUser, setToken, logout, setAuthState } from \"./src/features/authSlice\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const [error, setError] = useState(null);\n  const [isInitializing, setIsInitializing] = useState(true);\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        console.log('Iniciando la aplicación...');\n        const isConnected = await testSupabaseConnection();\n        console.log('Estado de conexión Supabase:', isConnected ? 'Exitosa' : 'Fallida');\n        const {\n          data: {\n            session\n          },\n          error: sessionError\n        } = await supabase.auth.getSession();\n        if (sessionError) {\n          console.error('Error al verificar sesión:', sessionError);\n          store.dispatch(logout());\n        } else if (session) {\n          console.log('Sesión activa encontrada, configurando usuario...');\n          store.dispatch(setUser({\n            id: session.user.id,\n            email: session.user.email,\n            username: session.user.user_metadata.username || session.user.email.split('@')[0]\n          }));\n          store.dispatch(setToken(session.access_token));\n          store.dispatch(setAuthState('authenticated'));\n        } else {\n          console.log('No hay sesión activa, mostrando pantalla de login');\n          store.dispatch(setAuthState('unauthenticated'));\n        }\n        const initialUrl = await Linking.getInitialURL();\n        console.log('URL inicial:', initialUrl);\n        if (initialUrl?.includes('type=recovery')) {\n          console.log('Detectado enlace de recuperación de contraseña');\n          store.dispatch(setAuthState('password_recovery'));\n        }\n        const {\n          data: {\n            subscription\n          }\n        } = supabase.auth.onAuthStateChange(async (event, session) => {\n          console.log('Evento de autenticación:', event);\n          if (event === 'PASSWORD_RECOVERY') {\n            console.log('Estado de recuperación de contraseña detectado');\n            store.dispatch(setAuthState('password_recovery'));\n          } else if (event === 'SIGNED_IN') {\n            console.log('Usuario autenticado');\n            if (session?.user) {\n              store.dispatch(setUser({\n                id: session.user.id,\n                email: session.user.email,\n                username: session.user.user_metadata.username || session.user.email.split('@')[0]\n              }));\n              store.dispatch(setToken(session.access_token));\n              store.dispatch(setAuthState('authenticated'));\n            }\n          } else if (event === 'SIGNED_OUT') {\n            console.log('Usuario desconectado');\n            store.dispatch(logout());\n          }\n        });\n        console.log('Inicialización completada');\n      } catch (error) {\n        console.error('Error inicializando la app:', error);\n        setError('Error al inicializar la aplicación');\n        store.dispatch(logout());\n      } finally {\n        setIsInitializing(false);\n      }\n    };\n    initializeApp();\n  }, []);\n  if (isInitializing) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#f5f5f5'\n      },\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          marginTop: 20,\n          color: '#666'\n        },\n        children: \"Inicializando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), error && _jsxDEV(Text, {\n        style: {\n          marginTop: 10,\n          color: 'red',\n          textAlign: 'center',\n          padding: 20\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsxDEV(AppNavigator, {\n        linking: linking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Provider","PersistGate","store","persistor","AppNavigator","testSupabaseConnection","ActivityIndicator","View","Text","linking","supabase","setUser","setToken","logout","setAuthState","Linking","jsxDEV","_jsxDEV","App","error","setError","isInitializing","setIsInitializing","initializeApp","console","log","isConnected","data","session","sessionError","auth","getSession","dispatch","id","user","email","username","user_metadata","split","access_token","initialUrl","getInitialURL","includes","subscription","onAuthStateChange","event","style","flex","justifyContent","alignItems","backgroundColor","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","textAlign","padding","loading"],"sources":["C:/Users/PC/TravelQuest/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './src/features/store';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { testSupabaseConnection } from './src/services/testConnection';\r\nimport { ActivityIndicator, View, Text } from 'react-native';\r\nimport { linking } from './src/navigation/linking';\r\nimport { supabase } from './src/services/supabase';\r\nimport { setUser, setToken, logout, setAuthState } from './src/features/authSlice';\r\nimport { Linking } from 'react-native';\r\n\r\nconst App = () => {\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isInitializing, setIsInitializing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      try {\r\n        console.log('Iniciando la aplicación...');\r\n\r\n        // Verificar conexión con Supabase\r\n        const isConnected = await testSupabaseConnection();\r\n        console.log('Estado de conexión Supabase:', isConnected ? 'Exitosa' : 'Fallida');\r\n\r\n        // Verificar sesión actual\r\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession();\r\n\r\n        if (sessionError) {\r\n          console.error('Error al verificar sesión:', sessionError);\r\n          store.dispatch(logout());\r\n        } else if (session) {\r\n          // Solo redirigir si el usuario ha iniciado sesión manualmente\r\n          console.log('Sesión activa encontrada, configurando usuario...');\r\n          store.dispatch(setUser({\r\n            id: session.user.id,\r\n            email: session.user.email!,\r\n            username: session.user.user_metadata.username || session.user.email!.split('@')[0],\r\n          }));\r\n          store.dispatch(setToken(session.access_token));\r\n          store.dispatch(setAuthState('authenticated'));\r\n        } else {\r\n          // Si no hay sesión, redirigir a Login\r\n          console.log('No hay sesión activa, mostrando pantalla de login');\r\n          store.dispatch(setAuthState('unauthenticated'));\r\n        }\r\n\r\n        // Verificar si la app se abrió desde un enlace de recuperación de contraseña\r\n        const initialUrl = await Linking.getInitialURL();\r\n        console.log('URL inicial:', initialUrl);\r\n\r\n        if (initialUrl?.includes('type=recovery')) {\r\n          console.log('Detectado enlace de recuperación de contraseña');\r\n          store.dispatch(setAuthState('password_recovery'));\r\n        }\r\n\r\n        // Configurar el listener de cambios de autenticación\r\n        const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n          console.log('Evento de autenticación:', event);\r\n\r\n          if (event === 'PASSWORD_RECOVERY') {\r\n            console.log('Estado de recuperación de contraseña detectado');\r\n            store.dispatch(setAuthState('password_recovery'));\r\n          } else if (event === 'SIGNED_IN') {\r\n            console.log('Usuario autenticado');\r\n            if (session?.user) {\r\n              store.dispatch(setUser({\r\n                id: session.user.id,\r\n                email: session.user.email!,\r\n                username: session.user.user_metadata.username || session.user.email!.split('@')[0],\r\n              }));\r\n              store.dispatch(setToken(session.access_token));\r\n              store.dispatch(setAuthState('authenticated'));\r\n            }\r\n          } else if (event === 'SIGNED_OUT') {\r\n            console.log('Usuario desconectado');\r\n            store.dispatch(logout());\r\n          }\r\n        });\r\n\r\n        console.log('Inicialización completada');\r\n      } catch (error) {\r\n        console.error('Error inicializando la app:', error);\r\n        setError('Error al inicializar la aplicación');\r\n        store.dispatch(logout());\r\n      } finally {\r\n        setIsInitializing(false);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n  }, []);\r\n\r\n  if (isInitializing) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={{ marginTop: 20, color: '#666' }}>\r\n          Inicializando...\r\n        </Text>\r\n        {error && (\r\n          <Text style={{ marginTop: 10, color: 'red', textAlign: 'center', padding: 20 }}>\r\n            {error}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <AppNavigator linking={linking} />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}