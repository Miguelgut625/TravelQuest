{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from \"../../services/supabase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ForgotPasswordScreen = function ForgotPasswordScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var navigation = useNavigation();\n  var handleSendCode = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!email) {\n        Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\n        return;\n      }\n      setLoading(true);\n      try {\n        var _yield$supabase$auth$ = yield supabase.auth.signInWithOtp({\n            email: email,\n            options: {\n              shouldCreateUser: false\n            }\n          }),\n          error = _yield$supabase$auth$.error;\n        if (error) {\n          Alert.alert('Error', error.message);\n          return;\n        }\n        navigation.navigate('VerifyCode', {\n          email: email\n        });\n      } catch (error) {\n        console.error('Error al enviar código de recuperación:', error);\n        Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSendCode() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Recuperar Contrase\\xF1a\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Ingresa tu correo electr\\xF3nico para recibir un c\\xF3digo de verificaci\\xF3n\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Correo electr\\xF3nico\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleSendCode,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Enviar C\\xF3digo\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.cancelButtonText,\n        children: \"Volver al Login\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    backgroundColor: '#005F9E',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonDisabled: {\n    backgroundColor: '#78909C'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","supabase","useNavigation","jsx","_jsx","jsxs","_jsxs","ForgotPasswordScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","loading","setLoading","navigation","handleSendCode","_ref","_asyncToGenerator","alert","_yield$supabase$auth$","auth","signInWithOtp","options","shouldCreateUser","error","message","navigate","console","apply","arguments","style","styles","container","children","title","subtitle","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","button","buttonDisabled","onPress","disabled","color","buttonText","cancelButton","cancelButtonText","create","flex","padding","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","borderWidth","borderColor","alignItems","marginTop"],"sources":["C:/Users/migue/TravelQuest/src/screens/auth/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../../navigation/types';\r\n\r\ntype ForgotPasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nexport const ForgotPasswordScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigation = useNavigation<ForgotPasswordScreenNavigationProp>();\r\n\r\n    const handleSendCode = async () => {\r\n        if (!email) {\r\n            Alert.alert('Error', 'Por favor, ingresa tu correo electrónico');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const { error } = await supabase.auth.signInWithOtp({\r\n                email,\r\n                options: {\r\n                    shouldCreateUser: false\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                Alert.alert('Error', error.message);\r\n                return;\r\n            }\r\n\r\n            // Si el envío fue exitoso, navegamos a VerifyCode con el email\r\n            navigation.navigate('VerifyCode', { email });\r\n        } catch (error) {\r\n            console.error('Error al enviar código de recuperación:', error);\r\n            Alert.alert('Error', 'Ocurrió un error al enviar el código de recuperación');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Recuperar Contraseña</Text>\r\n            <Text style={styles.subtitle}>\r\n                Ingresa tu correo electrónico para recibir un código de verificación\r\n            </Text>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Correo electrónico\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n            />\r\n\r\n            <TouchableOpacity\r\n                style={[styles.button, loading && styles.buttonDisabled]}\r\n                onPress={handleSendCode}\r\n                disabled={loading}\r\n            >\r\n                {loading ? (\r\n                    <ActivityIndicator color=\"white\" />\r\n                ) : (\r\n                    <Text style={styles.buttonText}>Enviar Código</Text>\r\n                )}\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                style={styles.cancelButton}\r\n                onPress={() => navigation.navigate('Login')}\r\n            >\r\n                <Text style={styles.cancelButtonText}>Volver al Login</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n    },\r\n    button: {\r\n        backgroundColor: '#005F9E',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#78909C',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    cancelButton: {\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    cancelButtonText: {\r\n        color: '#666',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default ForgotPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}