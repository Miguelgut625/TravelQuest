{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport ImageUploadModal from '../../components/ImageUploadModal';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { createJournalEntry } from '../../services/journalService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTimeRemaining = endDate => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nconst MissionCard = ({\n  mission,\n  onComplete,\n  onShare\n}) => {\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  const [completingMission, setCompletingMission] = useState(false);\n  const handleMissionPress = () => {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n  const handleUploadSuccess = imageUrl => {\n    setShowUploadModal(false);\n    onComplete(imageUrl);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TouchableOpacity, {\n      style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n      onPress: handleMissionPress,\n      disabled: mission.completed || isExpired || completingMission,\n      children: [_jsxDEV(View, {\n        style: styles.cardHeader,\n        children: [_jsxDEV(Text, {\n          style: styles.cardTitle,\n          children: mission.challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 1\n        }, this), _jsxDEV(View, {\n          style: styles.badgeContainer,\n          children: [_jsxDEV(Text, {\n            style: [styles.badge, {\n              backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000'\n            }],\n            children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 1\n          }, this), _jsxDEV(Text, {\n            style: [styles.timeRemaining, isExpired && styles.expiredTime],\n            children: timeRemaining.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 1\n      }, this), _jsxDEV(Text, {\n        style: styles.cardDescription,\n        children: mission.challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), _jsxDEV(View, {\n        style: styles.cardFooter,\n        children: [_jsxDEV(Text, {\n          style: styles.difficulty,\n          children: [\"Dificultad: \", mission.challenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 1\n        }, this), _jsxDEV(Text, {\n          style: styles.points,\n          children: [mission.challenge.points, \" puntos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 1\n        }, this), !mission.completed && !timeRemaining.isExpired && _jsxDEV(TouchableOpacity, {\n          onPress: onShare,\n          style: styles.shareIcon,\n          children: _jsxDEV(Ionicons, {\n            name: \"share-social\",\n            size: 20,\n            color: \"#4CAF50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }, this), completingMission && _jsxDEV(View, {\n        style: styles.loadingOverlay,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FFFFFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 1\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Completando misi\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 1\n    }, this), _jsxDEV(ImageUploadModal, {\n      visible: showUploadModal,\n      missionId: mission.id,\n      missionTitle: mission.challenge.title,\n      onClose: () => setShowUploadModal(false),\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\nconst CityCard = ({\n  cityName,\n  totalMissions,\n  completedMissions,\n  expiredMissions,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: [_jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(View, {\n      style: styles.cityInfo,\n      children: [_jsxDEV(Text, {\n        style: styles.cityName,\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 1\n      }, this), _jsxDEV(Text, {\n        style: styles.missionCount,\n        children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 1\n    }, this), _jsxDEV(Ionicons, {\n      name: \"chevron-forward\",\n      size: 24,\n      color: \"#666\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 1\n  }, this), _jsxDEV(View, {\n    style: styles.progressBar,\n    children: _jsxDEV(View, {\n      style: [styles.progressFill, {\n        width: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 199,\n  columnNumber: 1\n}, this);\nconst FriendSelectionModal = ({\n  visible,\n  onClose,\n  onSelect\n}) => {\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    if (visible) {\n      const fetchFriends = async () => {\n        if (!user) {\n          setLoading(false);\n          return;\n        }\n        try {\n          setLoading(true);\n          const {\n            data: friendData,\n            error\n          } = await supabase.from('friends').select('user2Id').eq('user1Id', user.id);\n          if (error) throw error;\n          const friendDetails = await Promise.all(friendData.map(async friend => {\n            const {\n              data: userData,\n              error: userError\n            } = await supabase.from('users').select('username, points').eq('id', friend.user2Id).single();\n            if (userError) return null;\n            return {\n              user2Id: friend.user2Id,\n              username: userData.username,\n              points: userData.points\n            };\n          }));\n          setFriends(friendDetails.filter(f => f !== null));\n        } catch (error) {\n          console.error('Error fetching friends:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchFriends();\n    }\n  }, [visible, user]);\n  return _jsxDEV(Modal, {\n    visible: visible,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    transparent: true,\n    children: _jsxDEV(View, {\n      style: modalStyles.modalOverlay,\n      children: _jsxDEV(View, {\n        style: modalStyles.modalContent,\n        children: [_jsxDEV(Text, {\n          style: modalStyles.modalTitle,\n          children: \"Selecciona un amigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), loading ? _jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: friends,\n          keyExtractor: item => item.user2Id,\n          renderItem: ({\n            item\n          }) => _jsxDEV(TouchableOpacity, {\n            style: modalStyles.friendItem,\n            onPress: () => onSelect(item),\n            children: [_jsxDEV(Text, {\n              style: modalStyles.friendName,\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: modalStyles.friendPoints,\n              children: [\"Puntos: \", item.points]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: modalStyles.cancelButton,\n          onPress: onClose,\n          children: _jsxDEV(Text, {\n            style: modalStyles.cancelButtonText,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  friendItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  friendName: {\n    fontSize: 16\n  },\n  friendPoints: {\n    fontSize: 14,\n    color: '#666'\n  },\n  cancelButton: {\n    marginTop: 10,\n    backgroundColor: '#f44336',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nconst MissionsScreen = ({\n  route,\n  navigation\n}) => {\n  const {\n    journeyId\n  } = route.params || {};\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [missions, setMissions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [completingMission, setCompletingMission] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [showShareModal, setShowShareModal] = useState(false);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n         id,\n         description,\n         created_at,\n         cities (\n           name\n         ),\n         journeys_missions!inner (\n           id,\n           completed,\n           challengeId,\n           end_date,\n           challenges!inner (\n             id,\n             title,\n             description,\n             difficulty,\n             points\n           )\n         )\n       `).eq('userId', user.id).order('created_at', {\n        ascending: false\n      });\n      if (journeysError) throw journeysError;\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n      const allMissions = journeys.flatMap(journey => journey.journeys_missions.map(jm => ({\n        id: jm.id,\n        completed: jm.completed,\n        cityName: journey.cities?.name || 'Ciudad Desconocida',\n        end_date: jm.end_date,\n        challenge: {\n          title: jm.challenges.title,\n          description: jm.challenges.description,\n          difficulty: jm.challenges.difficulty,\n          points: jm.challenges.points\n        }\n      })));\n      const missionsByCity = {};\n      allMissions.forEach(mission => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n      setMissions(missionsByCity);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n  const handleCompleteMission = async (missionId, imageUrl) => {\n    try {\n      setCompletingMission(true);\n      if (!user?.id) {\n        throw new Error('Usuario no autenticado');\n      }\n      await createJournalEntry({\n        userId: user.id,\n        missionId: missionId,\n        photos: [imageUrl || ''],\n        title: 'MisiÃ³n completada',\n        content: 'MisiÃ³n completada con Ã©xito',\n        cityId: selectedCity || 'Ciudad Desconocida'\n      });\n      const points = await completeMission(missionId, user.id, imageUrl);\n      const updatedMissions = Object.assign({}, missions);\n      let missionFound = false;\n      for (const city in updatedMissions) {\n        if (updatedMissions[city].pending) {\n          const pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\n          if (pendingIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].pending[pendingIndex], {\n              completed: true\n            });\n            updatedMissions[city].pending.splice(pendingIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n        if (!missionFound && updatedMissions[city].expired) {\n          const expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\n          if (expiredIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].expired[expiredIndex], {\n              completed: true\n            });\n            updatedMissions[city].expired.splice(expiredIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n      }\n      if (!missionFound) {\n        console.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\n      }\n      setMissions(updatedMissions);\n      dispatch(dispatchCompleteMission(missionId));\n      Alert.alert('MisiÃ³n Completada', `Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`, [{\n        text: 'Ver Diario',\n        onPress: () => {\n          dispatch(setRefreshJournal(true));\n          navigation.navigate('Journal', {\n            refresh: true\n          });\n        }\n      }, {\n        text: 'Continuar',\n        style: 'cancel'\n      }]);\n    } catch (error) {\n      console.error('Error completando misiÃ³n:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n');\n    } finally {\n      setCompletingMission(false);\n    }\n  };\n  const handleShareJourney = async friend => {\n    try {\n      const {\n        error\n      } = await supabase.from('journeys_shared').insert({\n        journeyId: journeyId,\n        ownerId: user.id,\n        sharedWithUserId: friend.user2Id\n      });\n      if (error) throw error;\n      Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\n    } catch (err) {\n      console.error(err);\n      Alert.alert('Error', 'No se pudo compartir el journey');\n    } finally {\n      setShowShareModal(false);\n    }\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 1\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 1\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 1\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 1\n    }, this);\n  }\n  if (!selectedCity) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 1\n        }, this), _jsxDEV(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 1\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(missions).map(([cityName, missions]) => _jsxDEV(CityCard, {\n          cityName: cityName,\n          totalMissions: missions.completed.length + missions.pending.length,\n          completedMissions: missions.completed.length,\n          expiredMissions: missions.expired.length,\n          onPress: () => setSelectedCity(cityName)\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 1\n    }, this);\n  }\n  const cityData = missions[selectedCity];\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => setSelectedCity(null),\n        children: [_jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 1\n        }, this), _jsxDEV(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 1\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 1\n    }, this), _jsxDEV(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 1\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 1\n        }, this), cityData.pending.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: imageUrl => handleCompleteMission(mission.id, imageUrl),\n          onShare: () => setShowShareModal(true)\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 1\n        }, this))]\n      }, void 0, true), cityData.expired.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 1\n          }, this), _jsxDEV(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 1\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 1\n        }, this), cityData.expired.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {},\n          onShare: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 1\n        }, this))]\n      }, void 0, true), cityData.completed.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 1\n          }, this), _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 1\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 1\n        }, this), cityData.completed.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {},\n          onShare: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 1\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 1\n    }, this), _jsxDEV(FriendSelectionModal, {\n      visible: showShareModal,\n      onClose: () => setShowShareModal(false),\n      onSelect: handleShareJourney\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 590,\n    columnNumber: 1\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    flexWrap: 'wrap'\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButtonText: {\n    fontSize: 16,\n    marginLeft: 5,\n    color: '#333'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    flex: 1\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    marginRight: 10\n  },\n  citiesList: {\n    flex: 1\n  },\n  cityCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  cityCardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cityInfo: {\n    flex: 1\n  },\n  cityName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  missionCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 2,\n    overflow: 'hidden'\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50'\n  },\n  missionsList: {\n    flex: 1\n  },\n  cityTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 15\n  },\n  completedDivider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#4CAF50'\n  },\n  completedText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    marginHorizontal: 10,\n    fontSize: 16\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  expiredCard: {\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  badgeContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  shareIcon: {\n    marginLeft: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","ScrollView","Modal","FlatList","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","ImageUploadModal","setRefreshJournal","createJournalEntry","jsxDEV","_jsxDEV","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","mission","onComplete","onShare","showUploadModal","setShowUploadModal","timeRemaining","end_date","completed","completingMission","setCompletingMission","handleMissionPress","handleUploadSuccess","imageUrl","children","style","styles","card","completedCard","expiredCard","onPress","disabled","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","shareIcon","name","size","color","loadingOverlay","loadingText","visible","missionId","id","missionTitle","onClose","onSuccess","CityCard","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCount","progressBar","progressFill","width","FriendSelectionModal","onSelect","friends","setFriends","loading","setLoading","user","state","auth","fetchFriends","data","friendData","error","from","select","eq","friendDetails","Promise","all","map","friend","userData","userError","user2Id","single","username","filter","f","console","animationType","onRequestClose","transparent","modalStyles","modalOverlay","modalContent","modalTitle","keyExtractor","item","renderItem","friendItem","friendName","friendPoints","cancelButton","cancelButtonText","create","flex","justifyContent","alignItems","borderRadius","padding","maxHeight","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","marginTop","MissionsScreen","route","navigation","journeyId","params","missions","setMissions","setError","userPoints","setUserPoints","selectedCity","setSelectedCity","showShareModal","setShowShareModal","dispatch","theme","fetchMissions","journeys","journeysError","order","ascending","length","allMissions","flatMap","journey","journeys_missions","jm","cities","challenges","missionsByCity","forEach","pending","expired","push","handleCompleteMission","Error","userId","photos","content","cityId","updatedMissions","Object","assign","missionFound","city","pendingIndex","findIndex","m","splice","expiredIndex","warn","alert","navigate","refresh","handleShareJourney","insert","ownerId","sharedWithUserId","err","loadingContainer","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText","flexDirection","flexWrap","marginLeft","marginRight","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","marginVertical","marginHorizontal","opacity","borderColor","borderWidth","paddingHorizontal","paddingVertical","textAlign"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["// MissionsScreen.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert, ScrollView, Modal, FlatList } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\r\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\r\nimport ImageUploadModal from '../../components/ImageUploadModal';\r\nimport { setRefreshJournal } from '../../features/journalSlice';\r\nimport { createJournalEntry } from '../../services/journalService';\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\nMissions: {\r\njourneyId: string;\r\nchallenges: JourneyMission[];\r\n};\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\nroute: MissionsScreenRouteProp;\r\nnavigation: any;\r\n}\r\n\r\ninterface CityMissions {\r\n[cityName: string]: {\r\ncompleted: JourneyMission[];\r\npending: JourneyMission[];\r\nexpired: JourneyMission[];\r\n};\r\n}\r\n\r\ninterface JourneyMission {\r\nid: string;\r\ncompleted: boolean;\r\ncityName: string;\r\nend_date: string;\r\nchallenge: {\r\ntitle: string;\r\ndescription: string;\r\ndifficulty: string;\r\npoints: number;\r\n};\r\n}\r\n\r\ninterface Journey {\r\nid: string;\r\ndescription: string;\r\ncreated_at: string;\r\ncities?: {\r\nname: string;\r\n};\r\njourneys_missions: {\r\nid: string;\r\ncompleted: boolean;\r\nchallengeId: string;\r\nend_date: string;\r\nchallenges: {\r\nid: string;\r\ntitle: string;\r\ndescription: string;\r\ndifficulty: string;\r\npoints: number;\r\n};\r\n}[];\r\n}\r\n\r\ninterface Friend {\r\n  user2Id: string;\r\n  username: string;\r\n  points: number;\r\n}\r\n\r\nconst getTimeRemaining = (endDate: string) => {\r\nconst now = new Date();\r\nconst end = new Date(endDate);\r\nconst diff = end.getTime() - now.getTime();\r\n\r\nif (diff <= 0) {\r\nreturn {\r\nisExpired: true,\r\ntext: 'Tiempo expirado'\r\n};\r\n}\r\n\r\nconst days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\nconst hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\nconst minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\nif (days > 0) {\r\nreturn {\r\nisExpired: false,\r\ntext: `${days} dÃ­as restantes`\r\n};\r\n} else if (hours > 0) {\r\nreturn {\r\nisExpired: false,\r\ntext: `${hours} horas restantes`\r\n};\r\n} else {\r\nreturn {\r\nisExpired: false,\r\ntext: `${minutes} minutos restantes`\r\n};\r\n}\r\n};\r\n\r\n// Modificamos MissionCard para incluir el botÃ³n de compartir\r\nconst MissionCard = ({ mission, onComplete, onShare }: { \r\n  mission: JourneyMission; \r\n  onComplete: (imageUrl?: string) => void;\r\n  onShare: () => void;\r\n}) => {\r\nconst [showUploadModal, setShowUploadModal] = useState(false);\r\nconst timeRemaining = getTimeRemaining(mission.end_date);\r\nconst isExpired = timeRemaining.isExpired && !mission.completed;\r\nconst [completingMission, setCompletingMission] = useState(false);\r\n\r\nconst handleMissionPress = () => {\r\nif (!mission.completed && !isExpired) {\r\nsetShowUploadModal(true);\r\n}\r\n};\r\n\r\nconst handleUploadSuccess = (imageUrl: string) => {\r\nsetShowUploadModal(false);\r\nonComplete(imageUrl);\r\n};\r\n\r\nreturn (\r\n<>\r\n<TouchableOpacity\r\nstyle={[\r\nstyles.card,\r\nmission.completed && styles.completedCard,\r\nisExpired && styles.expiredCard\r\n]}\r\nonPress={handleMissionPress}\r\ndisabled={mission.completed || isExpired || completingMission}\r\n>\r\n<View style={styles.cardHeader}>\r\n<Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n<View style={styles.badgeContainer}>\r\n<Text style={[\r\nstyles.badge,\r\n{ backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000' }\r\n]}>\r\n{mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\r\n</Text>\r\n<Text style={[\r\nstyles.timeRemaining,\r\nisExpired && styles.expiredTime\r\n]}>\r\n{timeRemaining.text}\r\n</Text>\r\n</View>\r\n</View>\r\n<Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n<View style={styles.cardFooter}>\r\n<Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n<Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n          {/* BotÃ³n para compartir: solo si la misiÃ³n no estÃ¡ completada y no expirÃ³ */}\r\n          {(!mission.completed && !timeRemaining.isExpired) && (\r\n            <TouchableOpacity onPress={onShare} style={styles.shareIcon}>\r\n              <Ionicons name=\"share-social\" size={20} color=\"#4CAF50\" />\r\n            </TouchableOpacity>\r\n          )}\r\n</View>\r\n\r\n{completingMission && (\r\n<View style={styles.loadingOverlay}>\r\n<ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\r\n<Text style={styles.loadingText}>Completando misiÃ³n...</Text>\r\n</View>\r\n)}\r\n</TouchableOpacity>\r\n\r\n<ImageUploadModal\r\nvisible={showUploadModal}\r\nmissionId={mission.id}\r\nmissionTitle={mission.challenge.title}\r\nonClose={() => setShowUploadModal(false)}\r\nonSuccess={handleUploadSuccess}\r\n/>\r\n</>\r\n);\r\n};\r\n\r\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \r\ncityName: string; \r\ntotalMissions: number;\r\ncompletedMissions: number;\r\nexpiredMissions?: number;\r\nonPress: () => void;\r\n}) => (\r\n<TouchableOpacity style={styles.cityCard} onPress={onPress}>\r\n<View style={styles.cityCardContent}>\r\n<View style={styles.cityInfo}>\r\n<Text style={styles.cityName}>{cityName}</Text>\r\n<Text style={styles.missionCount}>\r\n{completedMissions}/{totalMissions} misiones completadas\r\n</Text>\r\n</View>\r\n<Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\r\n</View>\r\n<View style={styles.progressBar}>\r\n<View \r\nstyle={[\r\nstyles.progressFill, \r\n{ width: `${(completedMissions / totalMissions) * 100}%` }\r\n]} \r\n/>\r\n</View>\r\n</TouchableOpacity>\r\n);\r\n\r\n// Modal para seleccionar un amigo (se usa igual que antes)\r\nconst FriendSelectionModal = ({ visible, onClose, onSelect }: { \r\n  visible: boolean; \r\n  onClose: () => void; \r\n  onSelect: (friend: Friend) => void;\r\n}) => {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      const fetchFriends = async () => {\r\n        if (!user) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        try {\r\n          setLoading(true);\r\n          const { data: friendData, error } = await supabase\r\n            .from('friends')\r\n            .select('user2Id')\r\n            .eq('user1Id', user.id);\r\n          if (error) throw error;\r\n  \r\n          const friendDetails = await Promise.all(\r\n            friendData.map(async (friend: { user2Id: string }) => {\r\n              const { data: userData, error: userError } = await supabase\r\n                .from('users')\r\n                .select('username, points')\r\n                .eq('id', friend.user2Id)\r\n                .single();\r\n              if (userError) return null;\r\n              return {\r\n                user2Id: friend.user2Id,\r\n                username: userData.username,\r\n                points: userData.points,\r\n              };\r\n            })\r\n          );\r\n  \r\n          setFriends(friendDetails.filter((f) => f !== null) as Friend[]);\r\n        } catch (error) {\r\n          console.error('Error fetching friends:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchFriends();\r\n    }\r\n  }, [visible, user]);\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\" onRequestClose={onClose} transparent>\r\n      <View style={modalStyles.modalOverlay}>\r\n        <View style={modalStyles.modalContent}>\r\n          <Text style={modalStyles.modalTitle}>Selecciona un amigo</Text>\r\n          {loading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n          ) : (\r\n            <FlatList\r\n              data={friends}\r\n              keyExtractor={(item) => item.user2Id}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity style={modalStyles.friendItem} onPress={() => onSelect(item)}>\r\n                  <Text style={modalStyles.friendName}>{item.username}</Text>\r\n                  <Text style={modalStyles.friendPoints}>Puntos: {item.points}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          )}\r\n          <TouchableOpacity style={modalStyles.cancelButton} onPress={onClose}>\r\n            <Text style={modalStyles.cancelButtonText}>Cancelar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyles = StyleSheet.create({\r\n  modalOverlay: {\r\n    flex:1,\r\n    backgroundColor:'rgba(0,0,0,0.5)',\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  modalContent: {\r\n    width:'80%',\r\n    backgroundColor:'white',\r\n    borderRadius:10,\r\n    padding:20,\r\n    maxHeight:'80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize:20,\r\n    fontWeight:'bold',\r\n    marginBottom:10\r\n  },\r\n  friendItem: {\r\n    padding:10,\r\n    borderBottomWidth:1,\r\n    borderBottomColor:'#ccc'\r\n  },\r\n  friendName: {\r\n    fontSize:16\r\n  },\r\n  friendPoints: {\r\n    fontSize:14,\r\n    color:'#666'\r\n  },\r\n  cancelButton: {\r\n    marginTop:10,\r\n    backgroundColor:'#f44336',\r\n    padding:10,\r\n    borderRadius:5,\r\n    alignItems:'center'\r\n  },\r\n  cancelButtonText: {\r\n    color:'white',\r\n    fontWeight:'bold'\r\n  }\r\n});\r\n\r\nconst MissionsScreen = ({ route, navigation }: MissionsScreenProps) => {\r\nconst { journeyId } = route.params || {};\r\nconst { user } = useSelector((state: RootState) => state.auth);\r\nconst [missions, setMissions] = useState<CityMissions>({});\r\nconst [loading, setLoading] = useState(true);\r\nconst [error, setError] = useState<string | null>(null);\r\nconst [completingMission, setCompletingMission] = useState(false);\r\nconst [userPoints, setUserPoints] = useState(0);\r\nconst [selectedCity, setSelectedCity] = useState<string | null>(null);\r\n  // Estado para mostrar modal de compartir\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\nconst dispatch = useDispatch();\r\nconst theme = useTheme();\r\n\r\nconst fetchMissions = async () => {\r\nif (!user?.id) {\r\nsetError('Usuario no autenticado');\r\nsetLoading(false);\r\nreturn;\r\n}\r\n\r\ntry {\r\nconst { data: journeys, error: journeysError } = await supabase\r\n.from('journeys')\r\n.select(`\r\n         id,\r\n         description,\r\n         created_at,\r\n         cities (\r\n           name\r\n         ),\r\n         journeys_missions!inner (\r\n           id,\r\n           completed,\r\n           challengeId,\r\n           end_date,\r\n           challenges!inner (\r\n             id,\r\n             title,\r\n             description,\r\n             difficulty,\r\n             points\r\n           )\r\n         )\r\n       `)\r\n.eq('userId', user.id)\r\n.order('created_at', { ascending: false });\r\n\r\nif (journeysError) throw journeysError;\r\n\r\nif (!journeys || journeys.length === 0) {\r\nsetError('No hay viajes disponibles');\r\nsetLoading(false);\r\nreturn;\r\n}\r\n\r\nconst allMissions = journeys.flatMap((journey: Journey) => \r\njourney.journeys_missions.map((jm) => ({\r\nid: jm.id,\r\ncompleted: jm.completed,\r\ncityName: journey.cities?.name || 'Ciudad Desconocida',\r\nend_date: jm.end_date,\r\nchallenge: {\r\ntitle: jm.challenges.title,\r\ndescription: jm.challenges.description,\r\ndifficulty: jm.challenges.difficulty,\r\npoints: jm.challenges.points\r\n}\r\n}))\r\n);\r\n\r\n// Organizar misiones por ciudad\r\nconst missionsByCity: CityMissions = {};\r\nallMissions.forEach((mission: JourneyMission) => {\r\nif (!missionsByCity[mission.cityName]) {\r\nmissionsByCity[mission.cityName] = {\r\ncompleted: [],\r\npending: [],\r\nexpired: []\r\n};\r\n}\r\nif (mission.completed) {\r\nmissionsByCity[mission.cityName].completed.push(mission);\r\n} else {\r\nmissionsByCity[mission.cityName].pending.push(mission);\r\n}\r\n});\r\n\r\nsetMissions(missionsByCity);\r\n} catch (error) {\r\nconsole.error('Error fetching missions:', error);\r\nsetError('Error al cargar las misiones');\r\n} finally {\r\nsetLoading(false);\r\n}\r\n};\r\n\r\nuseEffect(() => {\r\nfetchMissions();\r\n}, [journeyId]);\r\n\r\nconst handleCompleteMission = async (missionId: string, imageUrl?: string) => {\r\ntry {\r\nsetCompletingMission(true);\r\n\r\nif (!user?.id) {\r\nthrow new Error('Usuario no autenticado');\r\n}\r\n\r\nawait createJournalEntry({\r\nuserId: user.id,\r\nmissionId: missionId,\r\nphotos: [imageUrl || ''],\r\ntitle: 'MisiÃ³n completada',\r\ncontent: 'MisiÃ³n completada con Ã©xito',\r\ncityId: selectedCity || 'Ciudad Desconocida'\r\n});\r\n\r\nconst points = await completeMission(missionId, user.id, imageUrl);\r\n\r\n// Actualizar la lista de misiones localmente\r\nconst updatedMissions = { ...missions };\r\nlet missionFound = false;\r\n\r\nfor (const city in updatedMissions) {\r\nif (updatedMissions[city].pending) {\r\nconst pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\r\nif (pendingIndex !== -1) {\r\nconst mission = { ...updatedMissions[city].pending[pendingIndex], completed: true };\r\nupdatedMissions[city].pending.splice(pendingIndex, 1);\r\nupdatedMissions[city].completed.push(mission);\r\nmissionFound = true;\r\nbreak;\r\n}\r\n}\r\nif (!missionFound && updatedMissions[city].expired) {\r\nconst expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\r\nif (expiredIndex !== -1) {\r\nconst mission = { ...updatedMissions[city].expired[expiredIndex], completed: true };\r\nupdatedMissions[city].expired.splice(expiredIndex, 1);\r\nupdatedMissions[city].completed.push(mission);\r\nmissionFound = true;\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\nif (!missionFound) {\r\nconsole.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\r\n}\r\n\r\nsetMissions(updatedMissions);\r\ndispatch(dispatchCompleteMission(missionId));\r\n\r\nAlert.alert(\r\n'MisiÃ³n Completada',\r\n`Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`,\r\n[\r\n{\r\ntext: 'Ver Diario',\r\nonPress: () => {\r\n              dispatch(setRefreshJournal(true));\r\nnavigation.navigate('Journal', { refresh: true });\r\n}\r\n},\r\n{\r\ntext: 'Continuar',\r\nstyle: 'cancel'\r\n}\r\n]\r\n);\r\n\r\n} catch (error) {\r\nconsole.error('Error completando misiÃ³n:', error);\r\nAlert.alert('Error', 'No se pudo completar la misiÃ³n');\r\n} finally {\r\nsetCompletingMission(false);\r\n}\r\n};\r\n\r\n  // FunciÃ³n para compartir el journey (desde una misiÃ³n)\r\n  const handleShareJourney = async (friend: Friend) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('journeys_shared')\r\n        .insert({\r\n          journeyId: journeyId,\r\n          ownerId: user.id,\r\n          sharedWithUserId: friend.user2Id\r\n        });\r\n      if (error) throw error;\r\n      Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert('Error', 'No se pudo compartir el journey');\r\n    } finally {\r\n      setShowShareModal(false);\r\n    }\r\n  };\r\n\r\nif (loading) {\r\nreturn (\r\n<View style={styles.loadingContainer}>\r\n<ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n<Text style={styles.loadingText}>Cargando misiones...</Text>\r\n</View>\r\n);\r\n}\r\n\r\nif (error) {\r\nreturn (\r\n<View style={styles.errorContainer}>\r\n<Text style={styles.errorText}>{error}</Text>\r\n<TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\r\n<Text style={styles.retryButtonText}>Reintentar</Text>\r\n</TouchableOpacity>\r\n</View>\r\n);\r\n}\r\n\r\nif (!selectedCity) {\r\nreturn (\r\n<View style={styles.container}>\r\n<View style={styles.header}>\r\n<Text style={styles.title}>Tus Ciudades</Text>\r\n<Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n</View>\r\n<ScrollView style={styles.citiesList}>\r\n{Object.entries(missions).map(([cityName, missions]) => (\r\n<CityCard\r\nkey={cityName}\r\ncityName={cityName}\r\ntotalMissions={missions.completed.length + missions.pending.length}\r\ncompletedMissions={missions.completed.length}\r\nexpiredMissions={missions.expired.length}\r\nonPress={() => setSelectedCity(cityName)}\r\n/>\r\n))}\r\n</ScrollView>\r\n</View>\r\n);\r\n}\r\n\r\nconst cityData = missions[selectedCity];\r\n\r\nreturn (\r\n<View style={styles.container}>\r\n<View style={styles.header}>\r\n<TouchableOpacity \r\nstyle={styles.backButton} \r\nonPress={() => setSelectedCity(null)}\r\n>\r\n<Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\r\n<Text style={styles.backButtonText}>Ciudades</Text>\r\n</TouchableOpacity>\r\n<Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n</View>\r\n\r\n<Text style={styles.cityTitle}>{selectedCity}</Text>\r\n\r\n<ScrollView style={styles.missionsList}>\r\n{cityData.pending.length > 0 && (\r\n<>\r\n<Text style={styles.sectionTitle}>Misiones Pendientes</Text>\r\n{cityData.pending.map(mission => (\r\n<MissionCard\r\nkey={mission.id}\r\nmission={mission}\r\nonComplete={(imageUrl) => handleCompleteMission(mission.id, imageUrl)}\r\n                onShare={() => setShowShareModal(true)}\r\n/>\r\n))}\r\n</>\r\n)}\r\n\r\n{cityData.expired.length > 0 && (\r\n<>\r\n<View style={styles.completedDivider}>\r\n<View style={styles.dividerLine} />\r\n<Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\r\n<View style={styles.dividerLine} />\r\n</View>\r\n{cityData.expired.map(mission => (\r\n<MissionCard\r\nkey={mission.id}\r\nmission={mission}\r\nonComplete={() => {}}\r\n                onShare={() => {}}\r\n/>\r\n))}\r\n</>\r\n)}\r\n\r\n{cityData.completed.length > 0 && (\r\n<>\r\n<View style={styles.completedDivider}>\r\n<View style={styles.dividerLine} />\r\n<Text style={styles.completedText}>Completadas</Text>\r\n<View style={styles.dividerLine} />\r\n</View>\r\n{cityData.completed.map(mission => (\r\n<MissionCard\r\nkey={mission.id}\r\nmission={mission}\r\nonComplete={() => {}}\r\n                onShare={() => {}}\r\n/>\r\n))}\r\n</>\r\n)}\r\n</ScrollView>\r\n      <FriendSelectionModal \r\n        visible={showShareModal} \r\n        onClose={() => setShowShareModal(false)}\r\n        onSelect={handleShareJourney}\r\n      />\r\n</View>\r\n);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\nflex: 1,\r\npadding: 20,\r\nbackgroundColor: '#f5f5f5',\r\n},\r\nheader: {\r\nflexDirection: 'row',\r\nalignItems: 'center',\r\nmarginBottom: 20,\r\n    flexWrap: 'wrap'\r\n},\r\nbackButton: {\r\nflexDirection: 'row',\r\nalignItems: 'center',\r\n},\r\nbackButtonText: {\r\nfontSize: 16,\r\nmarginLeft: 5,\r\ncolor: '#333',\r\n},\r\ntitle: {\r\nfontSize: 24,\r\nfontWeight: 'bold',\r\ncolor: '#333',\r\n    flex: 1,\r\n},\r\npointsText: {\r\nfontSize: 18,\r\nfontWeight: 'bold',\r\ncolor: '#4CAF50',\r\n    marginRight: 10\r\n},\r\ncitiesList: {\r\nflex: 1,\r\n},\r\ncityCard: {\r\nbackgroundColor: 'white',\r\nborderRadius: 15,\r\npadding: 15,\r\nmarginBottom: 15,\r\nshadowColor: '#000',\r\nshadowOffset: {\r\nwidth: 0,\r\nheight: 2,\r\n},\r\nshadowOpacity: 0.1,\r\nshadowRadius: 3,\r\nelevation: 3,\r\n},\r\ncityCardContent: {\r\nflexDirection: 'row',\r\njustifyContent: 'space-between',\r\nalignItems: 'center',\r\nmarginBottom: 10,\r\n},\r\ncityInfo: {\r\nflex: 1,\r\n},\r\ncityName: {\r\nfontSize: 20,\r\nfontWeight: 'bold',\r\ncolor: '#333',\r\nmarginBottom: 5,\r\n},\r\nmissionCount: {\r\nfontSize: 14,\r\ncolor: '#666',\r\n},\r\nprogressBar: {\r\nheight: 4,\r\nbackgroundColor: '#E0E0E0',\r\nborderRadius: 2,\r\noverflow: 'hidden',\r\n},\r\nprogressFill: {\r\nheight: '100%',\r\nbackgroundColor: '#4CAF50',\r\n},\r\nmissionsList: {\r\nflex: 1,\r\n},\r\n  cityTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\nsectionTitle: {\r\nfontSize: 18,\r\nfontWeight: 'bold',\r\ncolor: '#666',\r\nmarginBottom: 15,\r\n},\r\ncompletedDivider: {\r\nflexDirection: 'row',\r\nalignItems: 'center',\r\nmarginVertical: 20,\r\n},\r\ndividerLine: {\r\nflex: 1,\r\nheight: 1,\r\nbackgroundColor: '#4CAF50',\r\n},\r\ncompletedText: {\r\ncolor: '#4CAF50',\r\nfontWeight: 'bold',\r\nmarginHorizontal: 10,\r\nfontSize: 16,\r\n},\r\ncard: {\r\nbackgroundColor: 'white',\r\nborderRadius: 10,\r\npadding: 15,\r\nmarginBottom: 10,\r\nshadowColor: '#000',\r\nshadowOffset: {\r\nwidth: 0,\r\nheight: 2,\r\n},\r\nshadowOpacity: 0.25,\r\nshadowRadius: 3.84,\r\nelevation: 5,\r\n},\r\ncompletedCard: {\r\nopacity: 0.8,\r\n},\r\n  expiredCard: {\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\ncardHeader: {\r\nflexDirection: 'row',\r\njustifyContent: 'space-between',\r\nalignItems: 'center',\r\nmarginBottom: 10,\r\n},\r\ncardTitle: {\r\nfontSize: 18,\r\nfontWeight: 'bold',\r\nflex: 1,\r\n},\r\nbadge: {\r\npaddingHorizontal: 10,\r\npaddingVertical: 5,\r\nborderRadius: 15,\r\ncolor: 'white',\r\nfontSize: 12,\r\nfontWeight: 'bold',\r\n},\r\nbadgeContainer: {\r\nflexDirection: 'column',\r\nalignItems: 'flex-end',\r\n},\r\ncardDescription: {\r\ncolor: '#666',\r\nmarginBottom: 10,\r\n},\r\ncardFooter: {\r\nflexDirection: 'row',\r\njustifyContent: 'space-between',\r\nalignItems: 'center',\r\n},\r\ndifficulty: {\r\ncolor: '#666',\r\nfontSize: 12,\r\n},\r\npoints: {\r\ncolor: '#4CAF50',\r\nfontWeight: 'bold',\r\n},\r\n  shareIcon: {\r\n    marginLeft: 10,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\nretryButton: {\r\nbackgroundColor: '#4CAF50',\r\npadding: 10,\r\nborderRadius: 5,\r\nmarginTop: 10,\r\n},\r\nretryButtonText: {\r\ncolor: 'white',\r\ntextAlign: 'center',\r\nfontWeight: 'bold',\r\n},\r\n});\r\n\r\nexport default MissionsScreen;"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAEnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,eAAe,QAAQ,8BAA8B;AAE9D,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,QAAA;AAE9C,SAASF,eAAe,IAAIG,uBAAuB,QAAQ,qCAAqC;AAChG,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,kBAAkB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AA+DnE,MAAMC,gBAAgB,GAAIC,OAAe,IAAK;EAC9C,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;EAC7B,MAAMI,IAAI,GAAGD,GAAG,CAACE,OAAO,CAAC,CAAC,GAAGJ,GAAG,CAACI,OAAO,CAAC,CAAC;EAE1C,IAAID,IAAI,IAAI,CAAC,EAAE;IACf,OAAO;MACPE,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE;IACN,CAAC;EACD;EAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACrD,MAAMO,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEN,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3E,MAAMQ,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEN,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EAEnE,IAAII,IAAI,GAAG,CAAC,EAAE;IACd,OAAO;MACPF,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE,GAAGC,IAAI;IACb,CAAC;EACD,CAAC,MAAM,IAAIG,KAAK,GAAG,CAAC,EAAE;IACtB,OAAO;MACPL,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE,GAAGI,KAAK;IACd,CAAC;EACD,CAAC,MAAM;IACP,OAAO;MACPL,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE,GAAGK,OAAO;IAChB,CAAC;EACD;AACA,CAAC;AAGD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAI5C,CAAC,KAAK;EACN,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM4C,aAAa,GAAGpB,gBAAgB,CAACe,OAAO,CAACM,QAAQ,CAAC;EACxD,MAAMd,SAAS,GAAGa,aAAa,CAACb,SAAS,IAAI,CAACQ,OAAO,CAACO,SAAS;EAC/D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMiD,kBAAkB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACV,OAAO,CAACO,SAAS,IAAI,CAACf,SAAS,EAAE;MACtCY,kBAAkB,CAAC,IAAI,CAAC;IACxB;EACA,CAAC;EAED,MAAMO,mBAAmB,GAAIC,QAAgB,IAAK;IAClDR,kBAAkB,CAAC,KAAK,CAAC;IACzBH,UAAU,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,OACA9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,GACA/B,OAAA,CAACjB,gBAAgB;MACjBiD,KAAK,EAAE,CACPC,MAAM,CAACC,IAAI,EACXhB,OAAO,CAACO,SAAS,IAAIQ,MAAM,CAACE,aAAa,EACzCzB,SAAS,IAAIuB,MAAM,CAACG,WAAW,CAC7B;MACFC,OAAO,EAAET,kBAAmB;MAC5BU,QAAQ,EAAEpB,OAAO,CAACO,SAAS,IAAIf,SAAS,IAAIgB,iBAAkB;MAAAK,QAAA,GAE9D/B,OAAA,CAACpB,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAR,QAAA,GAC/B/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACO,SAAU;UAAAT,QAAA,EAAEb,OAAO,CAACuB,SAAS,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC/D9C,OAAA,CAACpB,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACc,cAAe;UAAAhB,QAAA,GACnC/B,OAAA,CAACnB,IAAI;YAACmD,KAAK,EAAE,CACbC,MAAM,CAACe,KAAK,EACZ;cAAEC,eAAe,EAAE/B,OAAO,CAACO,SAAS,GAAG,SAAS,GAAGf,SAAS,GAAG,SAAS,GAAG;YAAU,CAAC,CACpF;YAAAqB,QAAA,EACDb,OAAO,CAACO,SAAS,GAAG,YAAY,GAAGf,SAAS,GAAG,UAAU,GAAG;UAAW;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,EACP9C,OAAA,CAACnB,IAAI;YAACmD,KAAK,EAAE,CACbC,MAAM,CAACV,aAAa,EACpBb,SAAS,IAAIuB,MAAM,CAACiB,WAAW,CAC7B;YAAAnB,QAAA,EACDR,aAAa,CAACZ;UAAI;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACP9C,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACkB,eAAgB;QAAApB,QAAA,EAAEb,OAAO,CAACuB,SAAS,CAACW;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC3E9C,OAAA,CAACpB,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAACoB,UAAW;QAAAtB,QAAA,GAC/B/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACqB,UAAW;UAAAvB,QAAA,GAAC,cAAY,EAACb,OAAO,CAACuB,SAAS,CAACa,UAAU;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACjF9C,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACsB,MAAO;UAAAxB,QAAA,GAAEb,OAAO,CAACuB,SAAS,CAACc,MAAM,EAAC,SAAO;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAExD,CAAC5B,OAAO,CAACO,SAAS,IAAI,CAACF,aAAa,CAACb,SAAS,IAC9CV,OAAA,CAACjB,gBAAgB;UAACsD,OAAO,EAAEjB,OAAQ;UAACY,KAAK,EAAEC,MAAM,CAACuB,SAAU;UAAAzB,QAAA,EAC1D/B,OAAA,CAACP,QAAQ;YAACgE,IAAI,EAAC,cAAc;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CACnB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAENpB,iBAAiB,IAClB1B,OAAA,CAACpB,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAAC2B,cAAe;QAAA7B,QAAA,GACnC/B,OAAA,CAAChB,iBAAiB;UAAC0E,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC;QAAS;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClD9C,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAAC4B,WAAY;UAAA9B,QAAA,EAAC;QAAqB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB,CAAC,EAEnB9C,OAAA,CAACJ,gBAAgB;MACjBkE,OAAO,EAAEzC,eAAgB;MACzB0C,SAAS,EAAE7C,OAAO,CAAC8C,EAAG;MACtBC,YAAY,EAAE/C,OAAO,CAACuB,SAAS,CAACC,KAAM;MACtCwB,OAAO,EAAEA,CAAA,KAAM5C,kBAAkB,CAAC,KAAK,CAAE;MACzC6C,SAAS,EAAEtC;IAAoB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA,eACA,CAAC;AAEH,CAAC;AAED,MAAMsB,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,iBAAiB;EAAEC,eAAe;EAAEnC;AAMjF,CAAC,KACDrC,OAAA,CAACjB,gBAAgB;EAACiD,KAAK,EAAEC,MAAM,CAACwC,QAAS;EAACpC,OAAO,EAAEA,OAAQ;EAAAN,QAAA,GAC3D/B,OAAA,CAACpB,IAAI;IAACoD,KAAK,EAAEC,MAAM,CAACyC,eAAgB;IAAA3C,QAAA,GACpC/B,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEC,MAAM,CAAC0C,QAAS;MAAA5C,QAAA,GAC7B/B,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACoC,QAAS;QAAAtC,QAAA,EAAEsC;MAAQ;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC/C9C,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAAC2C,YAAa;QAAA7C,QAAA,GAChCwC,iBAAiB,EAAC,GAAC,EAACD,aAAa,EAAC,uBACnC;MAAA;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACP9C,OAAA,CAACP,QAAQ;MAACgE,IAAI,EAAC,iBAAiB;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAM;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC,EACP9C,OAAA,CAACpB,IAAI;IAACoD,KAAK,EAAEC,MAAM,CAAC4C,WAAY;IAAA9C,QAAA,EAChC/B,OAAA,CAACpB,IAAI;MACLoD,KAAK,EAAE,CACPC,MAAM,CAAC6C,YAAY,EACnB;QAAEC,KAAK,EAAE,GAAIR,iBAAiB,GAAGD,aAAa,GAAI,GAAG;MAAI,CAAC;IACxD;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACW,CACjB;AAGD,MAAMkC,oBAAoB,GAAGA,CAAC;EAAElB,OAAO;EAAEI,OAAO;EAAEe;AAIlD,CAAC,KAAK;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxG,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACyG,OAAO,EAAEC,UAAU,CAAC,GAAG1G,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM2G,IAAI,GAAGjG,WAAW,CAAEkG,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAE/D5G,SAAS,CAAC,MAAM;IACd,IAAIoF,OAAO,EAAE;MACX,MAAM2B,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI,CAACH,IAAI,EAAE;UACTD,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QACA,IAAI;UACFA,UAAU,CAAC,IAAI,CAAC;UAChB,MAAM;YAAEK,IAAI,EAAEC,UAAU;YAAEC;UAAM,CAAC,GAAG,MAAMrG,QAAQ,CAC/CsG,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,SAAS,CAAC,CACjBC,EAAE,CAAC,SAAS,EAAET,IAAI,CAACtB,EAAE,CAAC;UACzB,IAAI4B,KAAK,EAAE,MAAMA,KAAK;UAEtB,MAAMI,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCP,UAAU,CAACQ,GAAG,CAAC,MAAOC,MAA2B,IAAK;YACpD,MAAM;cAAEV,IAAI,EAAEW,QAAQ;cAAET,KAAK,EAAEU;YAAU,CAAC,GAAG,MAAM/G,QAAQ,CACxDsG,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,kBAAkB,CAAC,CAC1BC,EAAE,CAAC,IAAI,EAAEK,MAAM,CAACG,OAAO,CAAC,CACxBC,MAAM,CAAC,CAAC;YACX,IAAIF,SAAS,EAAE,OAAO,IAAI;YAC1B,OAAO;cACLC,OAAO,EAAEH,MAAM,CAACG,OAAO;cACvBE,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;cAC3BlD,MAAM,EAAE8C,QAAQ,CAAC9C;YACnB,CAAC;UACH,CAAC,CACH,CAAC;UAED4B,UAAU,CAACa,aAAa,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAa,CAAC;QACjE,CAAC,CAAC,OAAOf,KAAK,EAAE;UACdgB,OAAO,CAAChB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,SAAS;UACRP,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MACDI,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAAC3B,OAAO,EAAEwB,IAAI,CAAC,CAAC;EAEnB,OACEtF,OAAA,CAACb,KAAK;IAAC2E,OAAO,EAAEA,OAAQ;IAAC+C,aAAa,EAAC,OAAO;IAACC,cAAc,EAAE5C,OAAQ;IAAC6C,WAAW;IAAAhF,QAAA,EACjF/B,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEgF,WAAW,CAACC,YAAa;MAAAlF,QAAA,EACpC/B,OAAA,CAACpB,IAAI;QAACoD,KAAK,EAAEgF,WAAW,CAACE,YAAa;QAAAnF,QAAA,GACpC/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEgF,WAAW,CAACG,UAAW;UAAApF,QAAA,EAAC;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9DsC,OAAO,GACNpF,OAAA,CAAChB,iBAAiB;UAAC0E,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC;QAAS;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAElD9C,OAAA,CAACZ,QAAQ;UACPsG,IAAI,EAAER,OAAQ;UACdkC,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACd,OAAQ;UACrCe,UAAU,EAAEA,CAAC;YAAED;UAAK,CAAC,KACnBrH,OAAA,CAACjB,gBAAgB;YAACiD,KAAK,EAAEgF,WAAW,CAACO,UAAW;YAAClF,OAAO,EAAEA,CAAA,KAAM4C,QAAQ,CAACoC,IAAI,CAAE;YAAAtF,QAAA,GAC7E/B,OAAA,CAACnB,IAAI;cAACmD,KAAK,EAAEgF,WAAW,CAACQ,UAAW;cAAAzF,QAAA,EAAEsF,IAAI,CAACZ;YAAQ;cAAA9D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC3D9C,OAAA,CAACnB,IAAI;cAACmD,KAAK,EAAEgF,WAAW,CAACS,YAAa;cAAA1F,QAAA,GAAC,UAAQ,EAACsF,IAAI,CAAC9D,MAAM;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD;QAClB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACF,EACD9C,OAAA,CAACjB,gBAAgB;UAACiD,KAAK,EAAEgF,WAAW,CAACU,YAAa;UAACrF,OAAO,EAAE6B,OAAQ;UAAAnC,QAAA,EAClE/B,OAAA,CAACnB,IAAI;YAACmD,KAAK,EAAEgF,WAAW,CAACW,gBAAiB;YAAA5F,QAAA,EAAC;UAAQ;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAED,MAAMkE,WAAW,GAAGlI,UAAU,CAAC8I,MAAM,CAAC;EACpCX,YAAY,EAAE;IACZY,IAAI,EAAC,CAAC;IACN5E,eAAe,EAAC,iBAAiB;IACjC6E,cAAc,EAAC,QAAQ;IACvBC,UAAU,EAAC;EACb,CAAC;EACDb,YAAY,EAAE;IACZnC,KAAK,EAAC,KAAK;IACX9B,eAAe,EAAC,OAAO;IACvB+E,YAAY,EAAC,EAAE;IACfC,OAAO,EAAC,EAAE;IACVC,SAAS,EAAC;EACZ,CAAC;EACDf,UAAU,EAAE;IACVgB,QAAQ,EAAC,EAAE;IACXC,UAAU,EAAC,MAAM;IACjBC,YAAY,EAAC;EACf,CAAC;EACDd,UAAU,EAAE;IACVU,OAAO,EAAC,EAAE;IACVK,iBAAiB,EAAC,CAAC;IACnBC,iBAAiB,EAAC;EACpB,CAAC;EACDf,UAAU,EAAE;IACVW,QAAQ,EAAC;EACX,CAAC;EACDV,YAAY,EAAE;IACZU,QAAQ,EAAC,EAAE;IACXxE,KAAK,EAAC;EACR,CAAC;EACD+D,YAAY,EAAE;IACZc,SAAS,EAAC,EAAE;IACZvF,eAAe,EAAC,SAAS;IACzBgF,OAAO,EAAC,EAAE;IACVD,YAAY,EAAC,CAAC;IACdD,UAAU,EAAC;EACb,CAAC;EACDJ,gBAAgB,EAAE;IAChBhE,KAAK,EAAC,OAAO;IACbyE,UAAU,EAAC;EACb;AACF,CAAC,CAAC;AAEF,MAAMK,cAAc,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAgC,CAAC,KAAK;EACvE,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK,CAACG,MAAM,IAAI,CAAC,CAAC;EACxC,MAAM;IAAEvD;EAAK,CAAC,GAAGjG,WAAW,CAAEkG,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC9D,MAAM,CAACsD,QAAQ,EAAEC,WAAW,CAAC,GAAGpK,QAAQ,CAAe,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACyG,OAAO,EAAEC,UAAU,CAAC,GAAG1G,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiH,KAAK,EAAEoD,QAAQ,CAAC,GAAGrK,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC+C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsK,UAAU,EAAEC,aAAa,CAAC,GAAGvK,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwK,YAAY,EAAEC,eAAe,CAAC,GAAGzK,QAAQ,CAAgB,IAAI,CAAC;EAEnE,MAAM,CAAC0K,cAAc,EAAEC,iBAAiB,CAAC,GAAG3K,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM4K,QAAQ,GAAGjK,WAAW,CAAC,CAAC;EAC9B,MAAMkK,KAAK,GAAG9J,QAAQ,CAAC,CAAC;EAExB,MAAM+J,aAAa,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACnE,IAAI,EAAEtB,EAAE,EAAE;MACfgF,QAAQ,CAAC,wBAAwB,CAAC;MAClC3D,UAAU,CAAC,KAAK,CAAC;MACjB;IACA;IAEA,IAAI;MACJ,MAAM;QAAEK,IAAI,EAAEgE,QAAQ;QAAE9D,KAAK,EAAE+D;MAAc,CAAC,GAAG,MAAMpK,QAAQ,CAC9DsG,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC,CACRC,EAAE,CAAC,QAAQ,EAAET,IAAI,CAACtB,EAAE,CAAC,CACrB4F,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MAE1C,IAAIF,aAAa,EAAE,MAAMA,aAAa;MAEtC,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;QACxCd,QAAQ,CAAC,2BAA2B,CAAC;QACrC3D,UAAU,CAAC,KAAK,CAAC;QACjB;MACA;MAEA,MAAM0E,WAAW,GAAGL,QAAQ,CAACM,OAAO,CAAEC,OAAgB,IACtDA,OAAO,CAACC,iBAAiB,CAAC/D,GAAG,CAAEgE,EAAE,KAAM;QACvCnG,EAAE,EAAEmG,EAAE,CAACnG,EAAE;QACTvC,SAAS,EAAE0I,EAAE,CAAC1I,SAAS;QACvB4C,QAAQ,EAAE4F,OAAO,CAACG,MAAM,EAAE3G,IAAI,IAAI,oBAAoB;QACtDjC,QAAQ,EAAE2I,EAAE,CAAC3I,QAAQ;QACrBiB,SAAS,EAAE;UACXC,KAAK,EAAEyH,EAAE,CAACE,UAAU,CAAC3H,KAAK;UAC1BU,WAAW,EAAE+G,EAAE,CAACE,UAAU,CAACjH,WAAW;UACtCE,UAAU,EAAE6G,EAAE,CAACE,UAAU,CAAC/G,UAAU;UACpCC,MAAM,EAAE4G,EAAE,CAACE,UAAU,CAAC9G;QACtB;MACA,CAAC,CAAC,CACF,CAAC;MAGD,MAAM+G,cAA4B,GAAG,CAAC,CAAC;MACvCP,WAAW,CAACQ,OAAO,CAAErJ,OAAuB,IAAK;QACjD,IAAI,CAACoJ,cAAc,CAACpJ,OAAO,CAACmD,QAAQ,CAAC,EAAE;UACvCiG,cAAc,CAACpJ,OAAO,CAACmD,QAAQ,CAAC,GAAG;YACnC5C,SAAS,EAAE,EAAE;YACb+I,OAAO,EAAE,EAAE;YACXC,OAAO,EAAE;UACT,CAAC;QACD;QACA,IAAIvJ,OAAO,CAACO,SAAS,EAAE;UACvB6I,cAAc,CAACpJ,OAAO,CAACmD,QAAQ,CAAC,CAAC5C,SAAS,CAACiJ,IAAI,CAACxJ,OAAO,CAAC;QACxD,CAAC,MAAM;UACPoJ,cAAc,CAACpJ,OAAO,CAACmD,QAAQ,CAAC,CAACmG,OAAO,CAACE,IAAI,CAACxJ,OAAO,CAAC;QACtD;MACA,CAAC,CAAC;MAEF6H,WAAW,CAACuB,cAAc,CAAC;IAC3B,CAAC,CAAC,OAAO1E,KAAK,EAAE;MAChBgB,OAAO,CAAChB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDoD,QAAQ,CAAC,8BAA8B,CAAC;IACxC,CAAC,SAAS;MACV3D,UAAU,CAAC,KAAK,CAAC;IACjB;EACA,CAAC;EAED3G,SAAS,CAAC,MAAM;IAChB+K,aAAa,CAAC,CAAC;EACf,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,MAAM+B,qBAAqB,GAAG,MAAAA,CAAO5G,SAAiB,EAAEjC,QAAiB,KAAK;IAC9E,IAAI;MACJH,oBAAoB,CAAC,IAAI,CAAC;MAE1B,IAAI,CAAC2D,IAAI,EAAEtB,EAAE,EAAE;QACf,MAAM,IAAI4G,KAAK,CAAC,wBAAwB,CAAC;MACzC;MAEA,MAAM9K,kBAAkB,CAAC;QACzB+K,MAAM,EAAEvF,IAAI,CAACtB,EAAE;QACfD,SAAS,EAAEA,SAAS;QACpB+G,MAAM,EAAE,CAAChJ,QAAQ,IAAI,EAAE,CAAC;QACxBY,KAAK,EAAE,mBAAmB;QAC1BqI,OAAO,EAAE,6BAA6B;QACtCC,MAAM,EAAE7B,YAAY,IAAI;MACxB,CAAC,CAAC;MAEF,MAAM5F,MAAM,GAAG,MAAM/D,eAAe,CAACuE,SAAS,EAAEuB,IAAI,CAACtB,EAAE,EAAElC,QAAQ,CAAC;MAGlE,MAAMmJ,eAAe,GAAAC,MAAA,CAAAC,MAAA,KAAQrC,QAAQ,CAAE;MACvC,IAAIsC,YAAY,GAAG,KAAK;MAExB,KAAK,MAAMC,IAAI,IAAIJ,eAAe,EAAE;QACpC,IAAIA,eAAe,CAACI,IAAI,CAAC,CAACb,OAAO,EAAE;UACnC,MAAMc,YAAY,GAAGL,eAAe,CAACI,IAAI,CAAC,CAACb,OAAO,CAACe,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACxH,EAAE,KAAKD,SAAS,CAAC;UACrF,IAAIuH,YAAY,KAAK,CAAC,CAAC,EAAE;YACzB,MAAMpK,OAAO,GAAAgK,MAAA,CAAAC,MAAA,KAAQF,eAAe,CAACI,IAAI,CAAC,CAACb,OAAO,CAACc,YAAY,CAAC;cAAE7J,SAAS,EAAE;YAAI,EAAE;YACnFwJ,eAAe,CAACI,IAAI,CAAC,CAACb,OAAO,CAACiB,MAAM,CAACH,YAAY,EAAE,CAAC,CAAC;YACrDL,eAAe,CAACI,IAAI,CAAC,CAAC5J,SAAS,CAACiJ,IAAI,CAACxJ,OAAO,CAAC;YAC7CkK,YAAY,GAAG,IAAI;YACnB;UACA;QACA;QACA,IAAI,CAACA,YAAY,IAAIH,eAAe,CAACI,IAAI,CAAC,CAACZ,OAAO,EAAE;UACpD,MAAMiB,YAAY,GAAGT,eAAe,CAACI,IAAI,CAAC,CAACZ,OAAO,CAACc,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACxH,EAAE,KAAKD,SAAS,CAAC;UACrF,IAAI2H,YAAY,KAAK,CAAC,CAAC,EAAE;YACzB,MAAMxK,OAAO,GAAAgK,MAAA,CAAAC,MAAA,KAAQF,eAAe,CAACI,IAAI,CAAC,CAACZ,OAAO,CAACiB,YAAY,CAAC;cAAEjK,SAAS,EAAE;YAAI,EAAE;YACnFwJ,eAAe,CAACI,IAAI,CAAC,CAACZ,OAAO,CAACgB,MAAM,CAACC,YAAY,EAAE,CAAC,CAAC;YACrDT,eAAe,CAACI,IAAI,CAAC,CAAC5J,SAAS,CAACiJ,IAAI,CAACxJ,OAAO,CAAC;YAC7CkK,YAAY,GAAG,IAAI;YACnB;UACA;QACA;MACA;MAEA,IAAI,CAACA,YAAY,EAAE;QACnBxE,OAAO,CAAC+E,IAAI,CAAC,kCAAkC,EAAE5H,SAAS,CAAC;MAC3D;MAEAgF,WAAW,CAACkC,eAAe,CAAC;MAC5B1B,QAAQ,CAAC5J,uBAAuB,CAACoE,SAAS,CAAC,CAAC;MAE5C9E,KAAK,CAAC2M,KAAK,CACX,mBAAmB,EACnB,uDAAuDrI,MAAM,4DAA4D,EACzH,CACA;QACA5C,IAAI,EAAE,YAAY;QAClB0B,OAAO,EAAEA,CAAA,KAAM;UACDkH,QAAQ,CAAC1J,iBAAiB,CAAC,IAAI,CAAC,CAAC;UAC/C8I,UAAU,CAACkD,QAAQ,CAAC,SAAS,EAAE;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACjD;MACA,CAAC,EACD;QACAnL,IAAI,EAAE,WAAW;QACjBqB,KAAK,EAAE;MACP,CAAC,CAED,CAAC;IAED,CAAC,CAAC,OAAO4D,KAAK,EAAE;MAChBgB,OAAO,CAAChB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD3G,KAAK,CAAC2M,KAAK,CAAC,OAAO,EAAE,gCAAgC,CAAC;IACtD,CAAC,SAAS;MACVjK,oBAAoB,CAAC,KAAK,CAAC;IAC3B;EACA,CAAC;EAGC,MAAMoK,kBAAkB,GAAG,MAAO3F,MAAc,IAAK;IACnD,IAAI;MACF,MAAM;QAAER;MAAM,CAAC,GAAG,MAAMrG,QAAQ,CAC7BsG,IAAI,CAAC,iBAAiB,CAAC,CACvBmG,MAAM,CAAC;QACNpD,SAAS,EAAEA,SAAS;QACpBqD,OAAO,EAAE3G,IAAI,CAACtB,EAAE;QAChBkI,gBAAgB,EAAE9F,MAAM,CAACG;MAC3B,CAAC,CAAC;MACJ,IAAIX,KAAK,EAAE,MAAMA,KAAK;MACtB3G,KAAK,CAAC2M,KAAK,CAAC,OAAO,EAAE,0BAA0BxF,MAAM,CAACK,QAAQ,EAAE,CAAC;IACnE,CAAC,CAAC,OAAO0F,GAAG,EAAE;MACZvF,OAAO,CAAChB,KAAK,CAACuG,GAAG,CAAC;MAClBlN,KAAK,CAAC2M,KAAK,CAAC,OAAO,EAAE,iCAAiC,CAAC;IACzD,CAAC,SAAS;MACRtC,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAEH,IAAIlE,OAAO,EAAE;IACb,OACApF,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEC,MAAM,CAACmK,gBAAiB;MAAArK,QAAA,GACrC/B,OAAA,CAAChB,iBAAiB;QAAC0E,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClD9C,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAAC4B,WAAY;QAAA9B,QAAA,EAAC;MAAoB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAEP;EAEA,IAAI8C,KAAK,EAAE;IACX,OACA5F,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEC,MAAM,CAACoK,cAAe;MAAAtK,QAAA,GACnC/B,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAACqK,SAAU;QAAAvK,QAAA,EAAE6D;MAAK;QAAAjD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC7C9C,OAAA,CAACjB,gBAAgB;QAACiD,KAAK,EAAEC,MAAM,CAACsK,WAAY;QAAClK,OAAO,EAAEoH,aAAc;QAAA1H,QAAA,EACpE/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACuK,eAAgB;UAAAzK,QAAA,EAAC;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEP;EAEA,IAAI,CAACqG,YAAY,EAAE;IACnB,OACAnJ,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEC,MAAM,CAACwK,SAAU;MAAA1K,QAAA,GAC9B/B,OAAA,CAACpB,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAACyK,MAAO;QAAA3K,QAAA,GAC3B/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACS,KAAM;UAAAX,QAAA,EAAC;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9C9C,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAAC0K,UAAW;UAAA5K,QAAA,GAAC,UAAQ,EAACkH,UAAU;QAAA;UAAAtG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,EACP9C,OAAA,CAACd,UAAU;QAAC8C,KAAK,EAAEC,MAAM,CAAC2K,UAAW;QAAA7K,QAAA,EACpCmJ,MAAM,CAAC2B,OAAO,CAAC/D,QAAQ,CAAC,CAAC3C,GAAG,CAAC,CAAC,CAAC9B,QAAQ,EAAEyE,QAAQ,CAAC,KACnD9I,OAAA,CAACoE,QAAQ;UAETC,QAAQ,EAAEA,QAAS;UACnBC,aAAa,EAAEwE,QAAQ,CAACrH,SAAS,CAACqI,MAAM,GAAGhB,QAAQ,CAAC0B,OAAO,CAACV,MAAO;UACnEvF,iBAAiB,EAAEuE,QAAQ,CAACrH,SAAS,CAACqI,MAAO;UAC7CtF,eAAe,EAAEsE,QAAQ,CAAC2B,OAAO,CAACX,MAAO;UACzCzH,OAAO,EAAEA,CAAA,KAAM+G,eAAe,CAAC/E,QAAQ;QAAE,GALpCA,QAAQ;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEP;EAEA,MAAMgK,QAAQ,GAAGhE,QAAQ,CAACK,YAAY,CAAC;EAEvC,OACAnJ,OAAA,CAACpB,IAAI;IAACoD,KAAK,EAAEC,MAAM,CAACwK,SAAU;IAAA1K,QAAA,GAC9B/B,OAAA,CAACpB,IAAI;MAACoD,KAAK,EAAEC,MAAM,CAACyK,MAAO;MAAA3K,QAAA,GAC3B/B,OAAA,CAACjB,gBAAgB;QACjBiD,KAAK,EAAEC,MAAM,CAAC8K,UAAW;QACzB1K,OAAO,EAAEA,CAAA,KAAM+G,eAAe,CAAC,IAAI,CAAE;QAAArH,QAAA,GAErC/B,OAAA,CAACP,QAAQ;UAACgE,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACrD9C,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAAC+K,cAAe;UAAAjL,QAAA,EAAC;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACnB9C,OAAA,CAACnB,IAAI;QAACmD,KAAK,EAAEC,MAAM,CAAC0K,UAAW;QAAA5K,QAAA,GAAC,UAAQ,EAACkH,UAAU;MAAA;QAAAtG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,EAEP9C,OAAA,CAACnB,IAAI;MAACmD,KAAK,EAAEC,MAAM,CAACgL,SAAU;MAAAlL,QAAA,EAAEoH;IAAY;MAAAxG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAEpD9C,OAAA,CAACd,UAAU;MAAC8C,KAAK,EAAEC,MAAM,CAACiL,YAAa;MAAAnL,QAAA,GACtC+K,QAAQ,CAACtC,OAAO,CAACV,MAAM,GAAG,CAAC,IAC5B9J,OAAA,CAAAE,SAAA;QAAA6B,QAAA,GACA/B,OAAA,CAACnB,IAAI;UAACmD,KAAK,EAAEC,MAAM,CAACkL,YAAa;UAAApL,QAAA,EAAC;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC3DgK,QAAQ,CAACtC,OAAO,CAACrE,GAAG,CAACjF,OAAO,IAC7BlB,OAAA,CAACiB,WAAW;UAEZC,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAGW,QAAQ,IAAK6I,qBAAqB,CAACzJ,OAAO,CAAC8C,EAAE,EAAElC,QAAQ,CAAE;UACtDV,OAAO,EAAEA,CAAA,KAAMkI,iBAAiB,CAAC,IAAI;QAAE,GAHlDpI,OAAO,CAAC8C,EAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACA,CAAC;MAAA,eACA,CACD,EAEAgK,QAAQ,CAACrC,OAAO,CAACX,MAAM,GAAG,CAAC,IAC5B9J,OAAA,CAAAE,SAAA;QAAA6B,QAAA,GACA/B,OAAA,CAACpB,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACmL,gBAAiB;UAAArL,QAAA,GACrC/B,OAAA,CAACpB,IAAI;YAACoD,KAAK,EAAEC,MAAM,CAACoL;UAAY;YAAA1K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACnC9C,OAAA,CAACnB,IAAI;YAACmD,KAAK,EAAE,CAACC,MAAM,CAACqL,aAAa,EAAE;cAAE3J,KAAK,EAAE;YAAU,CAAC,CAAE;YAAA5B,QAAA,EAAC;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC3E9C,OAAA,CAACpB,IAAI;YAACoD,KAAK,EAAEC,MAAM,CAACoL;UAAY;YAAA1K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EACNgK,QAAQ,CAACrC,OAAO,CAACtE,GAAG,CAACjF,OAAO,IAC7BlB,OAAA,CAACiB,WAAW;UAEZC,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;UACLC,OAAO,EAAEA,CAAA,KAAM,CAAC;QAAE,GAH7BF,OAAO,CAAC8C,EAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACA,CAAC;MAAA,eACA,CACD,EAEAgK,QAAQ,CAACrL,SAAS,CAACqI,MAAM,GAAG,CAAC,IAC9B9J,OAAA,CAAAE,SAAA;QAAA6B,QAAA,GACA/B,OAAA,CAACpB,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACmL,gBAAiB;UAAArL,QAAA,GACrC/B,OAAA,CAACpB,IAAI;YAACoD,KAAK,EAAEC,MAAM,CAACoL;UAAY;YAAA1K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACnC9C,OAAA,CAACnB,IAAI;YAACmD,KAAK,EAAEC,MAAM,CAACqL,aAAc;YAAAvL,QAAA,EAAC;UAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACrD9C,OAAA,CAACpB,IAAI;YAACoD,KAAK,EAAEC,MAAM,CAACoL;UAAY;YAAA1K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EACNgK,QAAQ,CAACrL,SAAS,CAAC0E,GAAG,CAACjF,OAAO,IAC/BlB,OAAA,CAACiB,WAAW;UAEZC,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;UACLC,OAAO,EAAEA,CAAA,KAAM,CAAC;QAAE,GAH7BF,OAAO,CAAC8C,EAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACA,CAAC;MAAA,eACA,CACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC,EACP9C,OAAA,CAACgF,oBAAoB;MACnBlB,OAAO,EAAEuF,cAAe;MACxBnF,OAAO,EAAEA,CAAA,KAAMoF,iBAAiB,CAAC,KAAK,CAAE;MACxCrE,QAAQ,EAAE8G;IAAmB;MAAApJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEP,CAAC;AAED,MAAMb,MAAM,GAAGnD,UAAU,CAAC8I,MAAM,CAAC;EACjC6E,SAAS,EAAE;IACX5E,IAAI,EAAE,CAAC;IACPI,OAAO,EAAE,EAAE;IACXhF,eAAe,EAAE;EACjB,CAAC;EACDyJ,MAAM,EAAE;IACRa,aAAa,EAAE,KAAK;IACpBxF,UAAU,EAAE,QAAQ;IACpBM,YAAY,EAAE,EAAE;IACZmF,QAAQ,EAAE;EACd,CAAC;EACDT,UAAU,EAAE;IACZQ,aAAa,EAAE,KAAK;IACpBxF,UAAU,EAAE;EACZ,CAAC;EACDiF,cAAc,EAAE;IAChB7E,QAAQ,EAAE,EAAE;IACZsF,UAAU,EAAE,CAAC;IACb9J,KAAK,EAAE;EACP,CAAC;EACDjB,KAAK,EAAE;IACPyF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzE,KAAK,EAAE,MAAM;IACTkE,IAAI,EAAE;EACV,CAAC;EACD8E,UAAU,EAAE;IACZxE,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzE,KAAK,EAAE,SAAS;IACZ+J,WAAW,EAAE;EACjB,CAAC;EACDd,UAAU,EAAE;IACZ/E,IAAI,EAAE;EACN,CAAC;EACDpD,QAAQ,EAAE;IACVxB,eAAe,EAAE,OAAO;IACxB+E,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBsF,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACd7I,KAAK,EAAE,CAAC;MACR8I,MAAM,EAAE;IACR,CAAC;IACDC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACX,CAAC;EACDtJ,eAAe,EAAE;IACjB6I,aAAa,EAAE,KAAK;IACpBzF,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBM,YAAY,EAAE;EACd,CAAC;EACD1D,QAAQ,EAAE;IACVkD,IAAI,EAAE;EACN,CAAC;EACDxD,QAAQ,EAAE;IACV8D,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzE,KAAK,EAAE,MAAM;IACb0E,YAAY,EAAE;EACd,CAAC;EACDzD,YAAY,EAAE;IACduD,QAAQ,EAAE,EAAE;IACZxE,KAAK,EAAE;EACP,CAAC;EACDkB,WAAW,EAAE;IACbgJ,MAAM,EAAE,CAAC;IACT5K,eAAe,EAAE,SAAS;IAC1B+E,YAAY,EAAE,CAAC;IACfiG,QAAQ,EAAE;EACV,CAAC;EACDnJ,YAAY,EAAE;IACd+I,MAAM,EAAE,MAAM;IACd5K,eAAe,EAAE;EACjB,CAAC;EACDiK,YAAY,EAAE;IACdrF,IAAI,EAAE;EACN,CAAC;EACCoF,SAAS,EAAE;IACT9E,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzE,KAAK,EAAE,MAAM;IACb0E,YAAY,EAAE;EAChB,CAAC;EACH8E,YAAY,EAAE;IACdhF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzE,KAAK,EAAE,MAAM;IACb0E,YAAY,EAAE;EACd,CAAC;EACD+E,gBAAgB,EAAE;IAClBG,aAAa,EAAE,KAAK;IACpBxF,UAAU,EAAE,QAAQ;IACpBmG,cAAc,EAAE;EAChB,CAAC;EACDb,WAAW,EAAE;IACbxF,IAAI,EAAE,CAAC;IACPgG,MAAM,EAAE,CAAC;IACT5K,eAAe,EAAE;EACjB,CAAC;EACDqK,aAAa,EAAE;IACf3J,KAAK,EAAE,SAAS;IAChByE,UAAU,EAAE,MAAM;IAClB+F,gBAAgB,EAAE,EAAE;IACpBhG,QAAQ,EAAE;EACV,CAAC;EACDjG,IAAI,EAAE;IACNe,eAAe,EAAE,OAAO;IACxB+E,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBsF,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACd7I,KAAK,EAAE,CAAC;MACR8I,MAAM,EAAE;IACR,CAAC;IACDC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACX,CAAC;EACD7L,aAAa,EAAE;IACfiM,OAAO,EAAE;EACT,CAAC;EACChM,WAAW,EAAE;IACXiM,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf,CAAC;EACH/L,UAAU,EAAE;IACZgL,aAAa,EAAE,KAAK;IACpBzF,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBM,YAAY,EAAE;EACd,CAAC;EACD7F,SAAS,EAAE;IACX2F,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBP,IAAI,EAAE;EACN,CAAC;EACD7E,KAAK,EAAE;IACPuL,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,CAAC;IAClBxG,YAAY,EAAE,EAAE;IAChBrE,KAAK,EAAE,OAAO;IACdwE,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACZ,CAAC;EACDrF,cAAc,EAAE;IAChBwK,aAAa,EAAE,QAAQ;IACvBxF,UAAU,EAAE;EACZ,CAAC;EACD5E,eAAe,EAAE;IACjBQ,KAAK,EAAE,MAAM;IACb0E,YAAY,EAAE;EACd,CAAC;EACDhF,UAAU,EAAE;IACZkK,aAAa,EAAE,KAAK;IACpBzF,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE;EACZ,CAAC;EACDzE,UAAU,EAAE;IACZK,KAAK,EAAE,MAAM;IACbwE,QAAQ,EAAE;EACV,CAAC;EACD5E,MAAM,EAAE;IACRI,KAAK,EAAE,SAAS;IAChByE,UAAU,EAAE;EACZ,CAAC;EACC5E,SAAS,EAAE;IACTiK,UAAU,EAAE;EACd,CAAC;EACDrB,gBAAgB,EAAE;IAChBvE,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpB9E,eAAe,EAAE;EACnB,CAAC;EACDY,WAAW,EAAE;IACX2E,SAAS,EAAE,EAAE;IACb7E,KAAK,EAAE;EACT,CAAC;EACD0I,cAAc,EAAE;IACdxE,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpB9E,eAAe,EAAE;EACnB,CAAC;EACDqJ,SAAS,EAAE;IACT3I,KAAK,EAAE,KAAK;IACZ8K,SAAS,EAAE,QAAQ;IACnBxG,OAAO,EAAE;EACX,CAAC;EACHsE,WAAW,EAAE;IACbtJ,eAAe,EAAE,SAAS;IAC1BgF,OAAO,EAAE,EAAE;IACXD,YAAY,EAAE,CAAC;IACfQ,SAAS,EAAE;EACX,CAAC;EACDgE,eAAe,EAAE;IACjB7I,KAAK,EAAE,OAAO;IACd8K,SAAS,EAAE,QAAQ;IACnBrG,UAAU,EAAE;EACZ;AACA,CAAC,CAAC;AAEF,eAAeK,cAAc","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}