{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from \"../../features/authSlice\";\nimport { supabase } from \"../../services/supabase\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var dispatch = useDispatch();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setError('');\n      try {\n        var _yield$supabase$auth$ = yield supabase.auth.signInWithPassword({\n            email: email,\n            password: password\n          }),\n          user = _yield$supabase$auth$.user,\n          _error = _yield$supabase$auth$.error;\n        if (_error) throw _error;\n        if (user) {\n          dispatch(setUser({\n            id: user.id,\n            email: user.email,\n            username: user.user_metadata.username || ''\n          }));\n          dispatch(setToken(user.access_token));\n          navigation.replace('Main');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleGoToMap = function handleGoToMap() {\n    navigation.replace('Map');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Iniciar Sesi\\xF3n\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), error ? _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    }) : null, _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Iniciar Sesi\\xF3n\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.link,\n        children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default LoginScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \":is(.flex)\": {\n      \"display\": \"flex\"\n    },\n    \":is(.underline)\": {\n      \"textDecorationLine\": \"underline\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","useDispatch","setUser","setToken","supabase","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","dispatch","handleLogin","_ref2","_asyncToGenerator","_yield$supabase$auth$","auth","signInWithPassword","user","id","username","user_metadata","access_token","replace","message","apply","arguments","handleGoToMap","style","styles","container","children","title","input","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","marginTop","textDecorationLine","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/migue/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken } from '../../features/authSlice';\nimport { supabase } from '../../services/supabase';\n\nconst LoginScreen = ({ navigation }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n\n  const handleLogin = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      const { user, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n\n      if (user) {\n        dispatch(setUser({\n          id: user.id,\n          email: user.email!,\n          username: user.user_metadata.username || '',\n        }));\n        dispatch(setToken(user.access_token));\n        navigation.replace('Main');\n      }\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoToMap = () => {\n    navigation.replace('Map'); // Redirigir directamente a la pantalla del mapa\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Iniciar Sesión</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Contraseña\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\n      <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={loading}>\n        {loading ? (\n          <ActivityIndicator color=\"white\" />\n        ) : (\n          <Text style={styles.buttonText}>Iniciar Sesión</Text>\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n        <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#333',\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 20,\n    color: '#4CAF50',\n    textDecorationLine: 'underline',\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}