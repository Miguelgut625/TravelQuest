{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport ImageUploadModal from '../../components/ImageUploadModal';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { createJournalEntry } from '../../services/journalService';\nimport styles from '../main/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTimeRemaining = endDate => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nconst MissionCard = ({\n  mission,\n  onComplete\n}) => {\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  const [completingMission, setCompletingMission] = useState(false);\n  const handleMissionPress = () => {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n  const handleUploadSuccess = imageUrl => {\n    setShowUploadModal(false);\n    onComplete(imageUrl);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TouchableOpacity, {\n      style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n      onPress: handleMissionPress,\n      disabled: mission.completed || isExpired || completingMission,\n      children: [_jsxDEV(View, {\n        style: styles.cardHeader,\n        children: [_jsxDEV(Text, {\n          style: styles.cardTitle,\n          children: mission.challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.badgeContainer,\n          children: [_jsxDEV(Text, {\n            style: [styles.badge, {\n              backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000'\n            }],\n            children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: [styles.timeRemaining, isExpired && styles.expiredTime],\n            children: timeRemaining.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.cardDescription,\n        children: mission.challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.cardFooter,\n        children: [_jsxDEV(Text, {\n          style: styles.difficulty,\n          children: [\"Dificultad: \", mission.challenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.points,\n          children: [mission.challenge.points, \" puntos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), completingMission && _jsxDEV(View, {\n        style: styles.loadingOverlay,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FFFFFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Completando misi\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), _jsxDEV(ImageUploadModal, {\n      visible: showUploadModal,\n      missionId: mission.id,\n      missionTitle: mission.challenge.title,\n      onClose: () => setShowUploadModal(false),\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nconst CityCard = ({\n  cityName,\n  totalMissions,\n  completedMissions,\n  expiredMissions,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: [_jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(View, {\n      style: styles.cityInfo,\n      children: [_jsxDEV(Text, {\n        style: styles.cityName,\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.missionCount,\n        children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), _jsxDEV(Ionicons, {\n      name: \"chevron-forward\",\n      size: 24,\n      color: \"#666\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this), _jsxDEV(View, {\n    style: styles.progressBar,\n    children: _jsxDEV(View, {\n      style: [styles.progressFill, {\n        width: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 184,\n  columnNumber: 3\n}, this);\nconst MissionsScreen = ({\n  route,\n  navigation\n}) => {\n  const {\n    journeyId\n  } = route.params || {};\n  const user = useSelector(state => state.auth.user);\n  const [missions, setMissions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [completingMission, setCompletingMission] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n          id,\n          description,\n          created_at,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `).eq('userId', user.id).order('created_at', {\n        ascending: false\n      });\n      if (journeysError) throw journeysError;\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n      const allMissions = journeys.flatMap(journey => journey.journeys_missions.map(jm => ({\n        id: jm.id,\n        completed: jm.completed,\n        cityName: journey.cities?.name || 'Ciudad Desconocida',\n        end_date: jm.end_date,\n        challenge: {\n          title: jm.challenges.title,\n          description: jm.challenges.description,\n          difficulty: jm.challenges.difficulty,\n          points: jm.challenges.points\n        }\n      })));\n      const missionsByCity = {};\n      allMissions.forEach(mission => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n      setMissions(missionsByCity);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n  const handleCompleteMission = async (missionId, imageUrl) => {\n    try {\n      setCompletingMission(true);\n      console.log('Completando misiÃ³n:', {\n        missionId,\n        imageUrl\n      });\n      if (!user?.id) {\n        throw new Error('Usuario no autenticado');\n      }\n      await createJournalEntry({\n        userId: user.id,\n        missionId: missionId,\n        photos: [imageUrl || ''],\n        title: 'MisiÃ³n completada',\n        content: 'MisiÃ³n completada con Ã©xito',\n        cityId: selectedCity || 'Ciudad Desconocida'\n      });\n      const points = await completeMission(missionId, user.id, imageUrl);\n      console.log('MisiÃ³n completada, puntos:', points);\n      const updatedMissions = Object.assign({}, missions);\n      let missionFound = false;\n      for (const city in updatedMissions) {\n        if (!updatedMissions[city]) {\n          console.warn(`Ciudad ${city} no tiene estructura de misiones`);\n          continue;\n        }\n        if (updatedMissions[city].pending) {\n          const pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\n          if (pendingIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].pending[pendingIndex], {\n              completed: true\n            });\n            updatedMissions[city].pending.splice(pendingIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n        if (!missionFound && updatedMissions[city].expired) {\n          const expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\n          if (expiredIndex !== -1) {\n            const mission = Object.assign({}, updatedMissions[city].expired[expiredIndex], {\n              completed: true\n            });\n            updatedMissions[city].expired.splice(expiredIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n        if (!missionFound && updatedMissions[city].completed) {\n          const completedIndex = updatedMissions[city].completed.findIndex(m => m.id === missionId);\n          if (completedIndex !== -1) {\n            console.log('La misiÃ³n ya estaba completada');\n            missionFound = true;\n            break;\n          }\n        }\n      }\n      if (!missionFound) {\n        console.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\n      }\n      setMissions(updatedMissions);\n      dispatch(dispatchCompleteMission(missionId));\n      Alert.alert('MisiÃ³n Completada', `Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`, [{\n        text: 'Ver Diario',\n        onPress: () => {\n          if (typeof dispatch === 'function') {\n            dispatch(setRefreshJournal(true));\n          }\n          navigation.navigate('Journal', {\n            refresh: true\n          });\n        }\n      }, {\n        text: 'Continuar',\n        style: 'cancel'\n      }]);\n    } catch (error) {\n      console.error('Error completando misiÃ³n:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n');\n    } finally {\n      setCompletingMission(false);\n    }\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this);\n  }\n  if (!selectedCity) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(missions).map(([cityName, missions]) => _jsxDEV(CityCard, {\n          cityName: cityName,\n          totalMissions: missions.completed.length + missions.pending.length,\n          completedMissions: missions.completed.length,\n          expiredMissions: missions.expired.length,\n          onPress: () => setSelectedCity(cityName)\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this);\n  }\n  const cityData = missions[selectedCity];\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => setSelectedCity(null),\n        children: [_jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), cityData.pending.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: imageUrl => handleCompleteMission(mission.id, imageUrl)\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.expired.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), cityData.expired.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.completed.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), cityData.completed.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n};\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","ActivityIndicator","Alert","ScrollView","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","ImageUploadModal","setRefreshJournal","createJournalEntry","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","mission","onComplete","showUploadModal","setShowUploadModal","timeRemaining","end_date","completed","completingMission","setCompletingMission","handleMissionPress","handleUploadSuccess","imageUrl","children","style","card","completedCard","expiredCard","onPress","disabled","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","loadingOverlay","size","color","loadingText","visible","missionId","id","missionTitle","onClose","onSuccess","CityCard","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCount","name","progressBar","progressFill","width","MissionsScreen","route","navigation","journeyId","params","user","state","auth","missions","setMissions","loading","setLoading","error","setError","userPoints","setUserPoints","selectedCity","setSelectedCity","dispatch","theme","fetchMissions","data","journeys","journeysError","from","select","eq","order","ascending","length","allMissions","flatMap","journey","journeys_missions","map","jm","cities","challenges","missionsByCity","forEach","pending","expired","push","console","handleCompleteMission","log","Error","userId","photos","content","cityId","updatedMissions","Object","assign","missionFound","city","warn","pendingIndex","findIndex","m","splice","expiredIndex","completedIndex","alert","navigate","refresh","loadingContainer","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert, ScrollView } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../features/store';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { RouteProp } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport ImageUploadModal from '../../components/ImageUploadModal';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { createJournalEntry } from '../../services/journalService';\nimport styles from '../main/styles';\n\ntype MissionsScreenRouteProp = RouteProp<{\n  Missions: {\n    journeyId: string;\n    challenges: JourneyMission[];\n  };\n}, 'Missions'>;\n\ninterface MissionsScreenProps {\n  route: MissionsScreenRouteProp;\n  navigation: any;\n}\n\ninterface CityMissions {\n  [cityName: string]: {\n    completed: JourneyMission[];\n    pending: JourneyMission[];\n    expired: JourneyMission[];\n  };\n}\n\ninterface JourneyMission {\n  id: string;\n  completed: boolean;\n  cityName: string;\n  end_date: string;\n  challenge: {\n    title: string;\n    description: string;\n    difficulty: string;\n    points: number;\n  };\n}\n\ninterface Journey {\n  id: string;\n  description: string;\n  created_at: string;\n  cities?: {\n    name: string;\n  };\n  journeys_missions: {\n    id: string;\n    completed: boolean;\n    challengeId: string;\n    end_date: string;\n    challenges: {\n      id: string;\n      title: string;\n      description: string;\n      difficulty: string;\n      points: number;\n    };\n  }[];\n}\n\nconst getTimeRemaining = (endDate: string) => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  \n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\n\nconst MissionCard = ({ mission, onComplete }: { mission: JourneyMission; onComplete: (imageUrl?: string) => void }) => {\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  const [completingMission, setCompletingMission] = useState(false);\n\n  const handleMissionPress = () => {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n\n  const handleUploadSuccess = (imageUrl: string) => {\n    // Cerrar el modal\n    setShowUploadModal(false);\n    // Llamar a la funciÃ³n onComplete que manejarÃ¡ el proceso de completar la misiÃ³n\n    onComplete(imageUrl);\n  };\n\n  return (\n    <>\n      <TouchableOpacity\n        style={[\n          styles.card,\n          mission.completed && styles.completedCard,\n          isExpired && styles.expiredCard\n        ]}\n        onPress={handleMissionPress}\n        disabled={mission.completed || isExpired || completingMission}\n      >\n        <View style={styles.cardHeader}>\n          <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\n          <View style={styles.badgeContainer}>\n            <Text style={[\n              styles.badge,\n              { backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000' }\n            ]}>\n              {mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\n            </Text>\n            <Text style={[\n              styles.timeRemaining,\n              isExpired && styles.expiredTime\n            ]}>\n              {timeRemaining.text}\n            </Text>\n          </View>\n        </View>\n        <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\n        <View style={styles.cardFooter}>\n          <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\n          <Text style={styles.points}>{mission.challenge.points} puntos</Text>\n        </View>\n\n        {completingMission && (\n          <View style={styles.loadingOverlay}>\n            <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n            <Text style={styles.loadingText}>Completando misiÃ³n...</Text>\n          </View>\n        )}\n      </TouchableOpacity>\n\n      <ImageUploadModal\n        visible={showUploadModal}\n        missionId={mission.id}\n        missionTitle={mission.challenge.title}\n        onClose={() => setShowUploadModal(false)}\n        onSuccess={handleUploadSuccess}\n      />\n    </>\n  );\n};\n\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \n  cityName: string; \n  totalMissions: number;\n  completedMissions: number;\n  expiredMissions?: number;\n  onPress: () => void;\n}) => (\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\n    <View style={styles.cityCardContent}>\n      <View style={styles.cityInfo}>\n        <Text style={styles.cityName}>{cityName}</Text>\n        <Text style={styles.missionCount}>\n          {completedMissions}/{totalMissions} misiones completadas\n        </Text>\n      </View>\n      <Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\n    </View>\n    <View style={styles.progressBar}>\n      <View \n        style={[\n          styles.progressFill, \n          { width: `${(completedMissions / totalMissions) * 100}%` }\n        ]} \n      />\n    </View>\n  </TouchableOpacity>\n);\n\nconst MissionsScreen = ({ route, navigation }: MissionsScreenProps) => {\n  const { journeyId } = route.params || {};\n  const user = useSelector((state: RootState) => state.auth.user);\n  const [missions, setMissions] = useState<CityMissions>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [completingMission, setCompletingMission] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { data: journeys, error: journeysError } = await supabase\n        .from('journeys')\n        .select(`\n          id,\n          description,\n          created_at,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `)\n        .eq('userId', user.id)\n        .order('created_at', { ascending: false });\n\n      if (journeysError) throw journeysError;\n\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n\n      const allMissions = journeys.flatMap((journey: Journey) => \n        journey.journeys_missions.map((jm) => ({\n          id: jm.id,\n          completed: jm.completed,\n          cityName: journey.cities?.name || 'Ciudad Desconocida',\n          end_date: jm.end_date,\n          challenge: {\n            title: jm.challenges.title,\n            description: jm.challenges.description,\n            difficulty: jm.challenges.difficulty,\n            points: jm.challenges.points\n          }\n        }))\n      );\n\n      // Organizar misiones por ciudad\n      const missionsByCity: CityMissions = {};\n      allMissions.forEach((mission: JourneyMission) => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n\n      setMissions(missionsByCity);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n\n  const handleCompleteMission = async (missionId: string, imageUrl?: string) => {\n    try {\n      setCompletingMission(true);\n\n      console.log('Completando misiÃ³n:', { missionId, imageUrl });\n\n      if (!user?.id) {\n        throw new Error('Usuario no autenticado');\n      }\n\n      // Crear entrada en el diario\n      await createJournalEntry({\n        userId: user.id,\n        missionId: missionId,\n        photos: [imageUrl || ''],\n        title: 'MisiÃ³n completada',\n        content: 'MisiÃ³n completada con Ã©xito',\n        cityId: selectedCity || 'Ciudad Desconocida'\n      });\n\n      // Completar la misiÃ³n\n      const points = await completeMission(missionId, user.id, imageUrl);\n\n      console.log('MisiÃ³n completada, puntos:', points);\n\n      // Actualizar la lista de misiones localmente\n      const updatedMissions = { ...missions };\n\n      // Buscar la misiÃ³n en todas las ciudades\n      let missionFound = false;\n\n      for (const city in updatedMissions) {\n        // Verificar que updatedMissions[city] existe y tiene la estructura esperada\n        if (!updatedMissions[city]) {\n          console.warn(`Ciudad ${city} no tiene estructura de misiones`);\n          continue;\n        }\n\n        // Buscar en misiones pendientes\n        if (updatedMissions[city].pending) {\n          const pendingIndex = updatedMissions[city].pending.findIndex(m => m.id === missionId);\n          if (pendingIndex !== -1) {\n            // Encontramos la misiÃ³n en pendientes, moverla a completadas\n            const mission = { ...updatedMissions[city].pending[pendingIndex], completed: true };\n            updatedMissions[city].pending.splice(pendingIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n\n        // Buscar en misiones expiradas (por si acaso)\n        if (!missionFound && updatedMissions[city].expired) {\n          const expiredIndex = updatedMissions[city].expired.findIndex(m => m.id === missionId);\n          if (expiredIndex !== -1) {\n            // Encontramos la misiÃ³n en expiradas, moverla a completadas\n            const mission = { ...updatedMissions[city].expired[expiredIndex], completed: true };\n            updatedMissions[city].expired.splice(expiredIndex, 1);\n            updatedMissions[city].completed.push(mission);\n            missionFound = true;\n            break;\n          }\n        }\n\n        // No es necesario buscar en completadas, pero por si acaso\n        if (!missionFound && updatedMissions[city].completed) {\n          const completedIndex = updatedMissions[city].completed.findIndex(m => m.id === missionId);\n          if (completedIndex !== -1) {\n            console.log('La misiÃ³n ya estaba completada');\n            missionFound = true;\n            break;\n          }\n        }\n      }\n\n      if (!missionFound) {\n        console.warn('No se encontrÃ³ la misiÃ³n con ID:', missionId);\n      }\n\n      setMissions(updatedMissions);\n      dispatch(dispatchCompleteMission(missionId));\n\n      // Alerta de Ã©xito con puntos\n      Alert.alert(\n        'MisiÃ³n Completada',\n        `Â¡Felicidades! Has completado la misiÃ³n y has ganado ${points} puntos.\\n\\nÂ¿Quieres ver tu entrada en el diario de viaje?`,\n        [\n          {\n            text: 'Ver Diario',\n            onPress: () => {\n              // Para Redux\n              if (typeof dispatch === 'function') {\n                dispatch(setRefreshJournal(true));\n              }\n              navigation.navigate('Journal', { refresh: true });\n            }\n          },\n          {\n            text: 'Continuar',\n            style: 'cancel'\n          }\n        ]\n      );\n\n    } catch (error) {\n      console.error('Error completando misiÃ³n:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n');\n    } finally {\n      setCompletingMission(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\n          <Text style={styles.retryButtonText}>Reintentar</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  if (!selectedCity) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Tus Ciudades</Text>\n          <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\n        </View>\n        <ScrollView style={styles.citiesList}>\n          {Object.entries(missions).map(([cityName, missions]) => (\n            <CityCard\n              key={cityName}\n              cityName={cityName}\n              totalMissions={missions.completed.length + missions.pending.length}\n              completedMissions={missions.completed.length}\n              expiredMissions={missions.expired.length}\n              onPress={() => setSelectedCity(cityName)}\n            />\n          ))}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  const cityData = missions[selectedCity];\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity \n          style={styles.backButton} \n          onPress={() => setSelectedCity(null)}\n        >\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n          <Text style={styles.backButtonText}>Ciudades</Text>\n        </TouchableOpacity>\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\n      </View>\n      \n      <Text style={styles.cityTitle}>{selectedCity}</Text>\n      \n      <ScrollView style={styles.missionsList}>\n        {cityData.pending.length > 0 && (\n          <>\n            <Text style={styles.sectionTitle}>Misiones Pendientes</Text>\n            {cityData.pending.map(mission => (\n              <MissionCard\n                key={mission.id}\n                mission={mission}\n                onComplete={(imageUrl) => handleCompleteMission(mission.id, imageUrl)}\n              />\n            ))}\n          </>\n        )}\n\n        {cityData.expired.length > 0 && (\n          <>\n            <View style={styles.completedDivider}>\n              <View style={styles.dividerLine} />\n              <Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\n              <View style={styles.dividerLine} />\n            </View>\n            {cityData.expired.map(mission => (\n              <MissionCard\n                key={mission.id}\n                mission={mission}\n                onComplete={() => {}}\n              />\n            ))}\n          </>\n        )}\n\n        {cityData.completed.length > 0 && (\n          <>\n            <View style={styles.completedDivider}>\n              <View style={styles.dividerLine} />\n              <Text style={styles.completedText}>Completadas</Text>\n              <View style={styles.dividerLine} />\n            </View>\n            {cityData.completed.map(mission => (\n              <MissionCard\n                key={mission.id}\n                mission={mission}\n                onComplete={() => {}}\n              />\n            ))}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\n\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}