{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\JournalScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JournalEntryCard = ({\n  entry\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.card,\n  children: [_jsxDEV(Text, {\n    style: styles.cardTitle,\n    children: entry.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.cardDate,\n    children: new Date(entry.created_at).toLocaleDateString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), entry.missionId && _jsxDEV(View, {\n    style: styles.missionBadge,\n    children: [_jsxDEV(Ionicons, {\n      name: \"trophy\",\n      size: 16,\n      color: \"#4CAF50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), _jsxDEV(Text, {\n      style: styles.missionBadgeText,\n      children: \"Misi\\xF3n Completada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this), _jsxDEV(Text, {\n    style: styles.cardContent,\n    numberOfLines: 3,\n    children: entry.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), entry.photos && entry.photos.length > 0 && _jsxDEV(View, {\n    style: styles.photoGrid,\n    children: [entry.photos.slice(0, 3).map((photo, index) => _jsxDEV(Image, {\n      source: {\n        uri: photo\n      },\n      style: styles.thumbnail,\n      resizeMode: \"cover\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)), entry.photos.length > 3 && _jsxDEV(View, {\n      style: styles.morePhotos,\n      children: _jsxDEV(Text, {\n        style: styles.morePhotosText,\n        children: [\"+\", entry.photos.length - 3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this), _jsxDEV(View, {\n    style: styles.tags,\n    children: entry.tags && entry.tags.map((tag, index) => _jsxDEV(Text, {\n      style: styles.tag,\n      children: [\"#\", tag]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\nconst EmptyState = ({\n  message\n}) => _jsxDEV(View, {\n  style: styles.emptyContainer,\n  children: [_jsxDEV(Ionicons, {\n    name: \"journal-outline\",\n    size: 64,\n    color: \"#ccc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), _jsxDEV(Text, {\n    style: styles.emptyText,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this);\nconst CityCard = ({\n  city,\n  entries,\n  onPress\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const allPhotos = entries.reduce((photos, entry) => {\n    if (entry.photos && entry.photos.length > 0) {\n      return [...photos, ...entry.photos];\n    }\n    return photos;\n  }, []);\n  useEffect(() => {\n    if (allPhotos.length <= 1) return;\n    const interval = setInterval(() => {\n      setCurrentImageIndex(prevIndex => prevIndex === allPhotos.length - 1 ? 0 : prevIndex + 1);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [allPhotos.length]);\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.cityCard,\n    onPress: onPress,\n    children: [allPhotos.length > 0 ? _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Image, {\n        source: {\n          uri: allPhotos[currentImageIndex]\n        },\n        style: styles.cityCardBackground,\n        resizeMode: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), allPhotos.length > 1 && _jsxDEV(View, {\n        style: styles.carouselDots,\n        children: allPhotos.map((_, index) => _jsxDEV(View, {\n          style: [styles.dot, index === currentImageIndex && styles.activeDot]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : _jsxDEV(View, {\n      style: styles.noImageBackground,\n      children: _jsxDEV(Ionicons, {\n        name: \"image-outline\",\n        size: 32,\n        color: \"#666\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), _jsxDEV(View, {\n      style: styles.cityCardOverlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.cityCardContent,\n      children: _jsxDEV(View, {\n        style: styles.textContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"location\",\n          size: 32,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.cityName,\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.viewMissionsText,\n          children: [\"Ver misiones (\", entries.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\nconst transformEntryToCityJournalEntry = entry => {\n  return {\n    id: entry.id,\n    userId: entry.userid,\n    cityId: entry.cityid,\n    title: entry.title,\n    content: entry.content,\n    photos: entry.photos || [],\n    location: null,\n    created_at: entry.created_at,\n    tags: entry.tags || [],\n    city_name: entry.cities?.name || 'Sin ciudad'\n  };\n};\nconst fetchWithRetry = async (fn, maxRetries = 3) => {\n  for (let i = 0; i < maxRetries; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      if (i === maxRetries - 1) throw error;\n      await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n    }\n  }\n};\nconst JournalScreen = ({\n  route\n}) => {\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [entriesByCity, setEntriesByCity] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('cities');\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    shouldRefresh\n  } = useSelector(state => state.journal);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  useEffect(() => {\n    fetchJournalEntries();\n    const journalSubscription = supabase.channel('journal_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'journal_entries',\n      filter: `userid=eq.${user?.id}`\n    }, payload => {\n      console.log('Cambio detectado en el diario:', payload);\n      fetchJournalEntries();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(journalSubscription);\n    };\n  }, []);\n  useEffect(() => {\n    if (shouldRefresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      dispatch(setRefreshJournal(false));\n    }\n  }, [shouldRefresh]);\n  useEffect(() => {\n    if (route.params?.refresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      if (navigation.setParams) {\n        navigation.setParams({\n          refresh: undefined\n        });\n      }\n    }\n  }, [route.params?.refresh]);\n  const fetchJournalEntries = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      const {\n        data: tableInfo,\n        error: tableError\n      } = await supabase.from('journal_entries').select('*').limit(1);\n      if (tableError) {\n        console.error('Error al verificar la estructura de la tabla:', tableError);\n        throw tableError;\n      }\n      let data;\n      let error;\n      const {\n        data: data1,\n        error: error1\n      } = await supabase.from('journal_entries').select(`\n          *,\n          cities (\n            name\n          )\n        `).eq('userid', user.id).order('created_at', {\n        ascending: false\n      });\n      if (!error1) {\n        data = data1;\n      } else {\n        console.log('Primer intento fallido, probando alternativa:', error1);\n        const {\n          data: data2,\n          error: error2\n        } = await supabase.from('journal_entries').select('*').eq('userid', user.id).order('created_at', {\n          ascending: false\n        });\n        if (!error2) {\n          data = data2;\n        } else {\n          console.log('Segundo intento fallido:', error2);\n          error = error2;\n        }\n      }\n      if (error) throw error;\n      if (!data) throw new Error('No se pudieron obtener los datos');\n      const entriesByCityMap = {};\n      for (const entry of data) {\n        let cityName = 'Sin ciudad';\n        if (entry.cities?.name) {\n          cityName = entry.cities.name;\n        } else if (entry.city_name) {\n          cityName = entry.city_name;\n        } else if (entry.cityName) {\n          cityName = entry.cityName;\n        } else if (entry.cityid) {\n          try {\n            const {\n              data: cityData\n            } = await supabase.from('cities').select('name').eq('id', entry.cityid).single();\n            if (cityData?.name) {\n              cityName = cityData.name;\n            }\n          } catch (e) {\n            console.warn('No se pudo obtener el nombre de la ciudad:', e);\n          }\n        }\n        if (!entriesByCityMap[cityName]) {\n          entriesByCityMap[cityName] = [];\n        }\n        const transformedEntry = transformEntryToCityJournalEntry(Object.assign({}, entry, {\n          cities: {\n            name: cityName\n          }\n        }));\n        entriesByCityMap[cityName].push(transformedEntry);\n      }\n      setEntriesByCity(entriesByCityMap);\n    } catch (error) {\n      console.error('Error al cargar entradas del diario:', error);\n      setError('No se pudieron cargar las entradas del diario');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCityPress = city => {\n    setSelectedCity(city);\n    setViewMode('entries');\n  };\n  const handleBackPress = () => {\n    setSelectedCity(null);\n    setViewMode('cities');\n  };\n  const renderContent = () => {\n    if (loading) {\n      return _jsxDEV(View, {\n        style: styles.loadingContainer,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Cargando diario...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this);\n    }\n    if (error) {\n      return _jsxDEV(View, {\n        style: styles.errorContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.errorText,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.retryButton,\n          onPress: fetchJournalEntries,\n          children: _jsxDEV(Text, {\n            style: styles.retryButtonText,\n            children: \"Reintentar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this);\n    }\n    const cities = Object.keys(entriesByCity);\n    if (viewMode === 'entries' && selectedCity) {\n      return _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          children: [_jsxDEV(TouchableOpacity, {\n            onPress: handleBackPress,\n            style: styles.backButton,\n            children: _jsxDEV(Ionicons, {\n              name: \"arrow-back\",\n              size: 24,\n              color: \"#333\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.title,\n            children: selectedCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), entriesByCity[selectedCity].length === 0 ? _jsxDEV(EmptyState, {\n          message: `No hay entradas de diario para ${selectedCity}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: entriesByCity[selectedCity],\n          renderItem: ({\n            item\n          }) => _jsxDEV(JournalEntryCard, {\n            entry: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 41\n          }, this),\n          keyExtractor: item => item.id,\n          style: styles.entriesList\n        }, \"entries\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Ciudades Disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), cities.length === 0 ? _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"map-outline\",\n          size: 64,\n          color: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"No hay ciudades disponibles todav\\xEDa.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this) : _jsxDEV(FlatList, {\n        data: cities,\n        renderItem: ({\n          item\n        }) => _jsxDEV(CityCard, {\n          city: item,\n          entries: entriesByCity[item],\n          onPress: () => handleCityPress(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }, this),\n        keyExtractor: item => item,\n        numColumns: 4,\n        columnWrapperStyle: styles.cityGrid\n      }, \"cities\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  };\n  return renderContent();\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 15\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center'\n  },\n  cityTabs: {\n    marginBottom: 20\n  },\n  cityTab: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginRight: 10,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  selectedCityTab: {\n    backgroundColor: '#4CAF50'\n  },\n  cityTabText: {\n    color: '#666',\n    fontWeight: 'bold'\n  },\n  selectedCityTabText: {\n    color: 'white'\n  },\n  entriesList: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  cardDate: {\n    color: '#666',\n    fontSize: 12,\n    marginBottom: 10\n  },\n  cardContent: {\n    color: '#333',\n    marginBottom: 10\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  thumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  morePhotos: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  morePhotosText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  tag: {\n    color: '#4CAF50',\n    marginRight: 10,\n    fontSize: 12\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  emptyText: {\n    color: '#666',\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 16\n  },\n  cityCard: {\n    width: '20%',\n    aspectRatio: 1,\n    backgroundColor: '#333',\n    borderRadius: 15,\n    margin: '2.5%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  cityCardBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%'\n  },\n  cityCardOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1\n  },\n  cityCardContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '5%'\n  },\n  textContainer: {\n    backgroundColor: '#000000',\n    padding: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n    width: '90%',\n    borderWidth: 2,\n    borderColor: '#ffffff'\n  },\n  cityName: {\n    fontSize: 18,\n    fontWeight: '900',\n    marginTop: 4,\n    textAlign: 'center',\n    color: '#ffffff',\n    letterSpacing: 1,\n    textTransform: 'uppercase'\n  },\n  viewMissionsText: {\n    color: '#ffffff',\n    marginTop: 8,\n    fontSize: 14,\n    fontWeight: '700',\n    letterSpacing: 0.5,\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n    borderRadius: 8\n  },\n  cityGrid: {\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    paddingHorizontal: '2.5%'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  backButton: {\n    padding: 10,\n    marginRight: 10\n  },\n  carouselDots: {\n    position: 'absolute',\n    bottom: 10,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2\n  },\n  dot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    marginHorizontal: 2\n  },\n  activeDot: {\n    backgroundColor: '#fff',\n    width: 8,\n    height: 8,\n    borderRadius: 4\n  },\n  noImageBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  missionBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n    marginBottom: 8\n  },\n  missionBadgeText: {\n    color: '#4CAF50',\n    fontSize: 12,\n    fontWeight: '600',\n    marginLeft: 4\n  }\n});\nexport default JournalScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","TouchableOpacity","Image","ActivityIndicator","useSelector","useDispatch","Ionicons","setRefreshJournal","useNavigation","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","JournalEntryCard","entry","style","styles","card","children","cardTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","cardDate","Date","created_at","toLocaleDateString","missionId","missionBadge","name","size","color","missionBadgeText","cardContent","numberOfLines","content","photos","length","photoGrid","slice","map","photo","index","source","uri","thumbnail","resizeMode","morePhotos","morePhotosText","tags","tag","EmptyState","message","emptyContainer","emptyText","CityCard","city","entries","onPress","currentImageIndex","setCurrentImageIndex","allPhotos","reduce","interval","setInterval","prevIndex","clearInterval","cityCard","cityCardBackground","carouselDots","_","dot","activeDot","noImageBackground","cityCardOverlay","cityCardContent","textContainer","cityName","viewMissionsText","transformEntryToCityJournalEntry","id","userId","userid","cityId","cityid","location","city_name","cities","fetchWithRetry","fn","maxRetries","i","error","Promise","resolve","setTimeout","JournalScreen","route","selectedCity","setSelectedCity","entriesByCity","setEntriesByCity","loading","setLoading","setError","viewMode","setViewMode","user","state","auth","shouldRefresh","journal","dispatch","navigation","fetchJournalEntries","journalSubscription","channel","on","event","schema","table","filter","payload","console","log","subscribe","removeChannel","params","refresh","setParams","undefined","data","tableInfo","tableError","from","select","limit","data1","error1","eq","order","ascending","data2","error2","Error","entriesByCityMap","cityData","single","e","warn","transformedEntry","Object","assign","push","handleCityPress","handleBackPress","renderContent","loadingContainer","loadingText","errorContainer","errorText","retryButton","retryButtonText","keys","container","header","backButton","renderItem","item","keyExtractor","entriesList","numColumns","columnWrapperStyle","cityGrid","create","flex","backgroundColor","padding","fontSize","fontWeight","textAlign","cityTabs","marginBottom","cityTab","paddingHorizontal","paddingVertical","marginRight","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","selectedCityTab","cityTabText","selectedCityTabText","flexDirection","justifyContent","alignItems","flexWrap","marginTop","aspectRatio","margin","overflow","position","top","left","right","bottom","zIndex","borderWidth","borderColor","letterSpacing","textTransform","marginHorizontal","alignSelf","marginLeft"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/main/JournalScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Image, ActivityIndicator, Alert, Dimensions } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../features/store';\nimport { getUserJournalEntries, CityJournalEntry } from '../../services/journalService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { useNavigation, RouteProp } from '@react-navigation/native';\nimport { supabase } from '../../services/supabase';\nimport { TabParamList } from '../../navigation/AppNavigator';\n\ninterface JournalScreenProps {\n  route: RouteProp<TabParamList, 'Journal'>;\n}\n\ninterface JournalEntryFromDB {\n  id: string;\n  userid: string;\n  title: string;\n  content: string;\n  created_at: string;\n  photos?: string[];\n  tags?: string[];\n  cityid: string;\n  cities?: {\n    name: string;\n  };\n}\n\nconst JournalEntryCard = ({ entry }: { entry: CityJournalEntry }) => (\n  <TouchableOpacity style={styles.card}>\n    <Text style={styles.cardTitle}>{entry.title}</Text>\n    <Text style={styles.cardDate}>{new Date(entry.created_at).toLocaleDateString()}</Text>\n    {entry.missionId && (\n      <View style={styles.missionBadge}>\n        <Ionicons name=\"trophy\" size={16} color=\"#4CAF50\" />\n        <Text style={styles.missionBadgeText}>Misión Completada</Text>\n      </View>\n    )}\n    <Text style={styles.cardContent} numberOfLines={3}>\n      {entry.content}\n    </Text>\n    {entry.photos && entry.photos.length > 0 && (\n      <View style={styles.photoGrid}>\n        {entry.photos.slice(0, 3).map((photo, index) => (\n          <Image\n            key={index}\n            source={{ uri: photo }}\n            style={styles.thumbnail}\n            resizeMode=\"cover\"\n          />\n        ))}\n        {entry.photos.length > 3 && (\n          <View style={styles.morePhotos}>\n            <Text style={styles.morePhotosText}>+{entry.photos.length - 3}</Text>\n          </View>\n        )}\n      </View>\n    )}\n    <View style={styles.tags}>\n      {entry.tags && entry.tags.map((tag, index) => (\n        <Text key={index} style={styles.tag}>\n          #{tag}\n        </Text>\n      ))}\n    </View>\n  </TouchableOpacity>\n);\n\nconst EmptyState = ({ message }: { message: string }) => (\n  <View style={styles.emptyContainer}>\n    <Ionicons name=\"journal-outline\" size={64} color=\"#ccc\" />\n    <Text style={styles.emptyText}>{message}</Text>\n  </View>\n);\n\nconst CityCard = ({ city, entries, onPress }: { city: string; entries: CityJournalEntry[]; onPress: () => void }) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  \n  // Recopilar todas las fotos de las entradas de la ciudad\n  const allPhotos = entries.reduce<string[]>((photos, entry) => {\n    if (entry.photos && entry.photos.length > 0) {\n      return [...photos, ...entry.photos];\n    }\n    return photos;\n  }, []);\n\n  // Efecto para el carrusel automático\n  useEffect(() => {\n    if (allPhotos.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => \n        prevIndex === allPhotos.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 3000); // Cambiar imagen cada 3 segundos\n\n    return () => clearInterval(interval);\n  }, [allPhotos.length]);\n\n  return (\n    <TouchableOpacity style={styles.cityCard} onPress={onPress}>\n      {allPhotos.length > 0 ? (\n        <>\n          <Image\n            source={{ uri: allPhotos[currentImageIndex] }}\n            style={styles.cityCardBackground}\n            resizeMode=\"cover\"\n          />\n          {allPhotos.length > 1 && (\n            <View style={styles.carouselDots}>\n              {allPhotos.map((_, index) => (\n                <View\n                  key={index}\n                  style={[\n                    styles.dot,\n                    index === currentImageIndex && styles.activeDot\n                  ]}\n                />\n              ))}\n            </View>\n          )}\n        </>\n      ) : (\n        <View style={styles.noImageBackground}>\n          <Ionicons name=\"image-outline\" size={32} color=\"#666\" />\n        </View>\n      )}\n      <View style={styles.cityCardOverlay} />\n      <View style={styles.cityCardContent}>\n        <View style={styles.textContainer}>\n          <Ionicons name=\"location\" size={32} color=\"#fff\" />\n          <Text style={styles.cityName}>{city}</Text>\n          <Text style={styles.viewMissionsText}>Ver misiones ({entries.length})</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst transformEntryToCityJournalEntry = (entry: JournalEntryFromDB): CityJournalEntry => {\n  return {\n    id: entry.id,\n    userId: entry.userid,\n    cityId: entry.cityid,\n    title: entry.title,\n    content: entry.content,\n    photos: entry.photos || [],\n    location: null,\n    created_at: entry.created_at,\n    tags: entry.tags || [],\n    city_name: entry.cities?.name || 'Sin ciudad'\n  };\n};\n\nconst fetchWithRetry = async (fn: () => Promise<any>, maxRetries = 3) => {\n  for (let i = 0; i < maxRetries; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      if (i === maxRetries - 1) throw error;\n      await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n    }\n  }\n};\n\nconst JournalScreen = ({ route }: JournalScreenProps) => {\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\n  const [entriesByCity, setEntriesByCity] = useState<{ [cityName: string]: CityJournalEntry[] }>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [viewMode, setViewMode] = useState<'cities' | 'entries'>('cities');\n  \n  const { user } = useSelector((state: RootState) => state.auth);\n  const { shouldRefresh } = useSelector((state: RootState) => state.journal);\n  const dispatch = useDispatch();\n  const navigation = useNavigation<any>();\n  \n  useEffect(() => {\n    fetchJournalEntries();\n    \n    // Suscribirse a cambios en la tabla journal_entries\n    const journalSubscription = supabase\n      .channel('journal_changes')\n      .on('postgres_changes', { \n        event: '*', // Escuchar todos los eventos (INSERT, UPDATE, DELETE)\n        schema: 'public', \n        table: 'journal_entries',\n        filter: `userid=eq.${user?.id}`\n      }, (payload: any) => {\n        console.log('Cambio detectado en el diario:', payload);\n        fetchJournalEntries();\n      })\n      .subscribe();\n      \n    // Limpiar suscripción\n    return () => {\n      supabase.removeChannel(journalSubscription);\n    };\n  }, []);\n  \n  useEffect(() => {\n    if (shouldRefresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      dispatch(setRefreshJournal(false));\n    }\n  }, [shouldRefresh]);\n\n  // Detectar el parámetro refresh\n  useEffect(() => {\n    if (route.params?.refresh) {\n      console.log('Actualizando entradas del diario debido a nueva misión completada');\n      fetchJournalEntries();\n      // Limpiar el parámetro para evitar actualizaciones repetidas\n      if (navigation.setParams) {\n        navigation.setParams({ refresh: undefined });\n      }\n    }\n  }, [route.params?.refresh]);\n\n  const fetchJournalEntries = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Primero, intentar obtener la estructura de la tabla\n      const { data: tableInfo, error: tableError } = await supabase\n        .from('journal_entries')\n        .select('*')\n        .limit(1);\n\n      if (tableError) {\n        console.error('Error al verificar la estructura de la tabla:', tableError);\n        throw tableError;\n      }\n\n      // Intentar diferentes variaciones de la consulta\n      let data;\n      let error;\n\n      // Intento 1: Consulta con relación cities\n      const { data: data1, error: error1 } = await supabase\n        .from('journal_entries')\n        .select(`\n          *,\n          cities (\n            name\n          )\n        `)\n        .eq('userid', user.id)\n        .order('created_at', { ascending: false });\n\n      if (!error1) {\n        data = data1;\n      } else {\n        console.log('Primer intento fallido, probando alternativa:', error1);\n        \n        // Intento 2: Consulta básica sin relación\n        const { data: data2, error: error2 } = await supabase\n          .from('journal_entries')\n          .select('*')\n          .eq('userid', user.id)\n          .order('created_at', { ascending: false });\n\n        if (!error2) {\n          data = data2;\n        } else {\n          console.log('Segundo intento fallido:', error2);\n          error = error2;\n        }\n      }\n\n      if (error) throw error;\n      if (!data) throw new Error('No se pudieron obtener los datos');\n\n      // Organizar entradas por ciudad\n      const entriesByCityMap: { [key: string]: CityJournalEntry[] } = {};\n      \n      for (const entry of data) {\n        let cityName = 'Sin ciudad';\n        \n        // Intentar obtener el nombre de la ciudad de diferentes maneras\n        if (entry.cities?.name) {\n          cityName = entry.cities.name;\n        } else if (entry.city_name) {\n          cityName = entry.city_name;\n        } else if (entry.cityName) {\n          cityName = entry.cityName;\n        } else if (entry.cityid) {\n          // Si tenemos cityid pero no el nombre, intentar obtenerlo\n          try {\n            const { data: cityData } = await supabase\n              .from('cities')\n              .select('name')\n              .eq('id', entry.cityid)\n              .single();\n            \n            if (cityData?.name) {\n              cityName = cityData.name;\n            }\n          } catch (e) {\n            console.warn('No se pudo obtener el nombre de la ciudad:', e);\n          }\n        }\n\n        if (!entriesByCityMap[cityName]) {\n          entriesByCityMap[cityName] = [];\n        }\n\n        // Transformar la entrada\n        const transformedEntry = transformEntryToCityJournalEntry({\n          ...entry,\n          cities: { name: cityName }\n        });\n\n        entriesByCityMap[cityName].push(transformedEntry);\n      }\n\n      setEntriesByCity(entriesByCityMap);\n    } catch (error) {\n      console.error('Error al cargar entradas del diario:', error);\n      setError('No se pudieron cargar las entradas del diario');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCityPress = (city: string) => {\n    setSelectedCity(city);\n    setViewMode('entries');\n  };\n\n  const handleBackPress = () => {\n    setSelectedCity(null);\n    setViewMode('cities');\n  };\n\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\n          <Text style={styles.loadingText}>Cargando diario...</Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity style={styles.retryButton} onPress={fetchJournalEntries}>\n            <Text style={styles.retryButtonText}>Reintentar</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    const cities = Object.keys(entriesByCity);\n\n    if (viewMode === 'entries' && selectedCity) {\n      return (\n        <View style={styles.container}>\n          <View style={styles.header}>\n            <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>\n              <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n            </TouchableOpacity>\n            <Text style={styles.title}>{selectedCity}</Text>\n          </View>\n          \n          {entriesByCity[selectedCity].length === 0 ? (\n            <EmptyState message={`No hay entradas de diario para ${selectedCity}`} />\n          ) : (\n            <FlatList\n              key=\"entries\"\n              data={entriesByCity[selectedCity]}\n              renderItem={({ item }) => <JournalEntryCard entry={item} />}\n              keyExtractor={(item) => item.id}\n              style={styles.entriesList}\n            />\n          )}\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Ciudades Disponibles</Text>\n        {cities.length === 0 ? (\n          <View style={styles.emptyContainer}>\n            <Ionicons name=\"map-outline\" size={64} color=\"#ccc\" />\n            <Text style={styles.emptyText}>\n              No hay ciudades disponibles todavía.\n            </Text>\n          </View>\n        ) : (\n          <FlatList\n            key=\"cities\"\n            data={cities}\n            renderItem={({ item }) => (\n              <CityCard\n                city={item}\n                entries={entriesByCity[item]}\n                onPress={() => handleCityPress(item)}\n              />\n            )}\n            keyExtractor={(item) => item}\n            numColumns={4}\n            columnWrapperStyle={styles.cityGrid}\n          />\n        )}\n      </View>\n    );\n  };\n\n  return renderContent();\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 15,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n  },\n  cityTabs: {\n    marginBottom: 20,\n  },\n  cityTab: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginRight: 10,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  selectedCityTab: {\n    backgroundColor: '#4CAF50',\n  },\n  cityTabText: {\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  selectedCityTabText: {\n    color: 'white',\n  },\n  entriesList: {\n    flex: 1,\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  cardDate: {\n    color: '#666',\n    fontSize: 12,\n    marginBottom: 10,\n  },\n  cardContent: {\n    color: '#333',\n    marginBottom: 10,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  thumbnail: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  morePhotos: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  morePhotosText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  tag: {\n    color: '#4CAF50',\n    marginRight: 10,\n    fontSize: 12,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  emptyText: {\n    color: '#666',\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  cityCard: {\n    width: '20%',\n    aspectRatio: 1,\n    backgroundColor: '#333',\n    borderRadius: 15,\n    margin: '2.5%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  cityCardBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%',\n  },\n  cityCardOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n  cityCardContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '5%',\n  },\n  textContainer: {\n    backgroundColor: '#000000',\n    padding: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n    width: '90%',\n    borderWidth: 2,\n    borderColor: '#ffffff',\n  },\n  cityName: {\n    fontSize: 18,\n    fontWeight: '900',\n    marginTop: 4,\n    textAlign: 'center',\n    color: '#ffffff',\n    letterSpacing: 1,\n    textTransform: 'uppercase',\n  },\n  viewMissionsText: {\n    color: '#ffffff',\n    marginTop: 8,\n    fontSize: 14,\n    fontWeight: '700',\n    letterSpacing: 0.5,\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n    borderRadius: 8,\n  },\n  cityGrid: {\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    paddingHorizontal: '2.5%',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n  backButton: {\n    padding: 10,\n    marginRight: 10,\n  },\n  carouselDots: {\n    position: 'absolute',\n    bottom: 10,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n  },\n  dot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    marginHorizontal: 2,\n  },\n  activeDot: {\n    backgroundColor: '#fff',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  noImageBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  missionBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n    marginBottom: 8,\n  },\n  missionBadgeText: {\n    color: '#4CAF50',\n    fontSize: 12,\n    fontWeight: '600',\n    marginLeft: 4,\n  },\n});\n\nexport default JournalScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}