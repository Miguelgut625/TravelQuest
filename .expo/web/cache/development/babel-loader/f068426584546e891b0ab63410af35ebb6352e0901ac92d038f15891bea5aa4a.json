{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { supabase } from \"./supabase\";\nexport var getUserPoints = function () {\n  var _ref = _asyncToGenerator(function* (userId) {\n    try {\n      var _yield$supabase$from$ = yield supabase.from('users').select('points').eq('id', userId).single(),\n        data = _yield$supabase$from$.data,\n        error = _yield$supabase$from$.error;\n      if (error) throw error;\n      return (data == null ? void 0 : data.points) || 0;\n    } catch (error) {\n      console.error('Error obteniendo puntos del usuario:', error);\n      throw error;\n    }\n  });\n  return function getUserPoints(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addPointsToUser = function () {\n  var _ref2 = _asyncToGenerator(function* (userId, points) {\n    try {\n      var currentPoints = yield getUserPoints(userId);\n      var _yield$supabase$from$2 = yield supabase.from('users').update({\n          points: currentPoints + points,\n          updated_at: new Date().toISOString()\n        }).eq('id', userId),\n        error = _yield$supabase$from$2.error;\n      if (error) throw error;\n      return currentPoints + points;\n    } catch (error) {\n      console.error('Error añadiendo puntos al usuario:', error);\n      throw error;\n    }\n  });\n  return function addPointsToUser(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var completeMission = function () {\n  var _ref3 = _asyncToGenerator(function* (missionId, userId) {\n    try {\n      var _yield$supabase$from$3 = yield supabase.from('journeys_missions').select(`\n        challenge:challenges (\n          points\n        )\n      `).eq('id', missionId).single(),\n        mission = _yield$supabase$from$3.data,\n        missionError = _yield$supabase$from$3.error;\n      if (missionError) throw missionError;\n      var _yield$supabase$from$4 = yield supabase.from('journeys_missions').update({\n          completed: true\n        }).eq('id', missionId),\n        updateError = _yield$supabase$from$4.error;\n      if (updateError) throw updateError;\n      var points = mission.challenge.points;\n      yield addPointsToUser(userId, points);\n      return points;\n    } catch (error) {\n      console.error('Error completando la misión:', error);\n      throw error;\n    }\n  });\n  return function completeMission(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["supabase","getUserPoints","_ref","_asyncToGenerator","userId","_yield$supabase$from$","from","select","eq","single","data","error","points","console","_x","apply","arguments","addPointsToUser","_ref2","currentPoints","_yield$supabase$from$2","update","updated_at","Date","toISOString","_x2","_x3","completeMission","_ref3","missionId","_yield$supabase$from$3","mission","missionError","_yield$supabase$from$4","completed","updateError","challenge","_x4","_x5"],"sources":["C:/Users/migue/TravelQuest/src/services/pointsService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\nexport const getUserPoints = async (userId: string) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('users')\r\n      .select('points')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n\r\n    return data?.points || 0;\r\n  } catch (error) {\r\n    console.error('Error obteniendo puntos del usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addPointsToUser = async (userId: string, points: number) => {\r\n  try {\r\n    // Primero obtenemos los puntos actuales\r\n    const currentPoints = await getUserPoints(userId);\r\n    \r\n    // Actualizamos los puntos\r\n    const { error } = await supabase\r\n      .from('users')\r\n      .update({\r\n        points: currentPoints + points,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', userId);\r\n\r\n    if (error) throw error;\r\n\r\n    return currentPoints + points;\r\n  } catch (error) {\r\n    console.error('Error añadiendo puntos al usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const completeMission = async (missionId: string, userId: string) => {\r\n  try {\r\n    // Primero obtenemos los puntos de la misión\r\n    const { data: mission, error: missionError } = await supabase\r\n      .from('journeys_missions')\r\n      .select(`\r\n        challenge:challenges (\r\n          points\r\n        )\r\n      `)\r\n      .eq('id', missionId)\r\n      .single();\r\n\r\n    if (missionError) throw missionError;\r\n\r\n    // Marcar la misión como completada\r\n    const { error: updateError } = await supabase\r\n      .from('journeys_missions')\r\n      .update({ completed: true })\r\n      .eq('id', missionId);\r\n\r\n    if (updateError) throw updateError;\r\n\r\n    // Añadir los puntos al usuario\r\n    const points = mission.challenge.points;\r\n    await addPointsToUser(userId, points);\r\n\r\n    return points;\r\n  } catch (error) {\r\n    console.error('Error completando la misión:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}