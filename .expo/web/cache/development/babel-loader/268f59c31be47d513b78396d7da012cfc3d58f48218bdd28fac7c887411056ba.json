{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\FriendsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../lib/supabase';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsScreen = () => {\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = useSelector(state => state.auth.userId);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        setLoading(true);\n        const {\n          data,\n          error\n        } = await supabase.from('friends').select('user2Id').eq('user1Id', userId);\n        if (error) throw error;\n        setFriends(data);\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFriends();\n  }, [userId]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      children: \"Lista de Amigos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: friends,\n      keyExtractor: item => item.user2Id.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(Text, {\n        style: styles.friendItem,\n        children: item.user2Id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  friendItem: {\n    padding: 10,\n    fontSize: 18\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","ActivityIndicator","supabase","useSelector","jsxDEV","_jsxDEV","FriendsScreen","friends","setFriends","loading","setLoading","userId","state","auth","fetchFriends","data","error","from","select","eq","console","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","user2Id","toString","renderItem","friendItem","create","flex","justifyContent","alignItems","padding","fontSize"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/FriendsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator } from 'react-native';\r\nimport { supabase } from '../../lib/supabase'; // Asegúrate de que la ruta sea correcta\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\n\r\nconst FriendsScreen = () => {\r\n  const [friends, setFriends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const userId = useSelector((state: RootState) => state.auth.userId); // Asegúrate de que el ID del usuario esté disponible\r\n\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const { data, error } = await supabase\r\n          .from('friends')\r\n          .select('user2Id')\r\n          .eq('user1Id', userId); // Filtra por el ID del usuario actual\r\n\r\n        if (error) throw error;\r\n\r\n        setFriends(data);\r\n      } catch (error) {\r\n        console.error('Error fetching friends:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFriends();\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Lista de Amigos</Text>\r\n      <FlatList\r\n        data={friends}\r\n        keyExtractor={(item) => item.user2Id.toString()} // Asegúrate de que user2Id sea único\r\n        renderItem={({ item }) => (\r\n          <Text style={styles.friendItem}>{item.user2Id}</Text> // Aquí puedes mostrar más información del amigo\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  friendItem: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default FriendsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}