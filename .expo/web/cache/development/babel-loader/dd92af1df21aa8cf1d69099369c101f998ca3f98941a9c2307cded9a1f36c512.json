{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst initialState = {\n  user: null,\n  token: null,\n  authState: 'idle'\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.authState = 'authenticated';\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setAuthState: (state, action) => {\n      state.authState = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.authState = 'unauthenticated';\n    }\n  }\n});\nconst persistConfig = {\n  key: 'auth',\n  storage: AsyncStorage,\n  whitelist: ['user', 'token', 'authState']\n};\nexport const {\n  setUser,\n  setToken,\n  logout,\n  setAuthState\n} = authSlice.actions;\nexport default persistReducer(persistConfig, authSlice.reducer);","map":{"version":3,"names":["createSlice","persistReducer","AsyncStorage","initialState","user","token","authState","authSlice","name","reducers","setUser","state","action","payload","setToken","setAuthState","logout","persistConfig","key","storage","whitelist","actions","reducer"],"sources":["C:/Users/PC/TravelQuest/src/features/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  username: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  authState: 'idle' | 'loading' | 'authenticated' | 'unauthenticated' | 'password_recovery';\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: null,\r\n  authState: 'idle'\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User>) => {\r\n      state.user = action.payload;\r\n      state.authState = 'authenticated';\r\n    },\r\n    setToken: (state, action: PayloadAction<string>) => {\r\n      state.token = action.payload;\r\n    },\r\n    setAuthState: (state, action: PayloadAction<AuthState['authState']>) => {\r\n      state.authState = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.authState = 'unauthenticated';\r\n    },\r\n  },\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage: AsyncStorage,\r\n  whitelist: ['user', 'token', 'authState'],\r\n};\r\n\r\nexport const { setUser, setToken, logout, setAuthState } = authSlice.actions;\r\nexport default persistReducer(persistConfig, authSlice.reducer); "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,YAAY,MAAM,2CAA2C;AAcpE,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA2B,KAAK;MAC/CD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACL,SAAS,GAAG,eAAe;IACnC,CAAC;IACDQ,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,YAAY,EAAEA,CAACJ,KAAK,EAAEC,MAA6C,KAAK;MACtED,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDG,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;MAClBM,KAAK,CAACL,SAAS,GAAG,iBAAiB;IACrC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEjB,YAAY;EACrBkB,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW;AAC1C,CAAC;AAED,OAAO,MAAM;EAAEV,OAAO;EAAEI,QAAQ;EAAEE,MAAM;EAAED;AAAa,CAAC,GAAGR,SAAS,CAACc,OAAO;AAC5E,eAAepB,cAAc,CAACgB,aAAa,EAAEV,SAAS,CAACe,OAAO,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}