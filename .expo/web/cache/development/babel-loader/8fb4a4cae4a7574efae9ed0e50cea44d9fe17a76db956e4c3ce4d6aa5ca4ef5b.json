{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  console.log('Token:', token);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabs\n        })\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","LoginScreen","RegisterScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","Navigator","children","Screen","name","component","AppNavigator","_useSelector","state","auth","token","console","log","screenOptions","headerShown"],"sources":["C:/Users/Guacter/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\n\r\n// Importar pantallas (las crearemos despuÃ©s)\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen name=\"Map\" component={MapScreen} />\r\n      <Tab.Screen name=\"Missions\" component={MissionsScreen} />\r\n      <Tab.Screen name=\"Journal\" component={JournalScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n  console.log('Token:', token);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainTabs} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,WAAW,QAAQ,aAAa;AAIzC,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,SAAS;AAChB,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AAAsC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,IAAMC,KAAK,GAAGf,0BAA0B,CAAC,CAAC;AAC1C,IAAMgB,GAAG,GAAGf,wBAAwB,CAAC,CAAC;AAEtC,IAAMgB,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,OACEL,KAAA,CAACI,GAAG,CAACE,SAAS;IAAAC,QAAA,GACZT,IAAA,CAACM,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,KAAK;MAACC,SAAS,EAAEjB;IAAU,CAAE,CAAC,EAC/CK,IAAA,CAACM,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEhB;IAAe,CAAE,CAAC,EACzDI,IAAA,CAACM,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,SAAS;MAACC,SAAS,EAAEf;IAAc,CAAE,CAAC,EACvDG,IAAA,CAACM,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,SAAS;MAACC,SAAS,EAAEd;IAAc,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEpB,CAAC;AAED,IAAMe,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,YAAA,GAAkBtB,WAAW,CAAC,UAACuB,KAAgB;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAvDC,KAAK,GAAAH,YAAA,CAALG,KAAK;EACbC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;EAE5B,OACEjB,IAAA,CAACX,mBAAmB;IAAAoB,QAAA,EAClBT,IAAA,CAACK,KAAK,CAACG,SAAS;MAACY,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAZ,QAAA,EACpD,CAACQ,KAAK,GACLf,KAAA,CAAAE,SAAA;QAAAK,QAAA,GACET,IAAA,CAACK,KAAK,CAACK,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEnB;QAAY,CAAE,CAAC,EACrDO,IAAA,CAACK,KAAK,CAACK,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAElB;QAAe,CAAE,CAAC;MAAA,CAC3D,CAAC,GAEHM,IAAA,CAAAI,SAAA;QAAAK,QAAA,EACET,IAAA,CAACK,KAAK,CAACK,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEL;QAAS,CAAE;MAAC,CACjD;IACH,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}