{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\miguel\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\VerifyCodeScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from '../../services/supabase';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport styles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VerifyCodeScreen = () => {\n  const [code, setCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const route = useRoute();\n  const {\n    email\n  } = route.params;\n  const handleVerifyCode = async () => {\n    if (!code) {\n      Alert.alert('Error', 'Por favor, ingresa el código de verificación');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.verifyOtp({\n        email,\n        token: code,\n        type: 'email'\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      navigation.navigate('ResetPassword');\n    } catch (error) {\n      console.error('Error al verificar código:', error);\n      Alert.alert('Error', 'Ocurrió un error al verificar el código');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResendCode = async () => {\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          shouldCreateUser: false\n        }\n      });\n      if (error) {\n        Alert.alert('Error', error.message);\n        return;\n      }\n      Alert.alert('Éxito', 'Se ha enviado un nuevo código a tu correo electrónico');\n    } catch (error) {\n      console.error('Error al reenviar código:', error);\n      Alert.alert('Error', 'Ocurrió un error al reenviar el código');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Verificar C\\xF3digo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Por favor, ingresa el c\\xF3digo que hemos enviado a tu correo electr\\xF3nico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"C\\xF3digo de verificaci\\xF3n\",\n      value: code,\n      onChangeText: setCode,\n      keyboardType: \"number-pad\",\n      maxLength: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.buttonDisabled],\n      onPress: handleVerifyCode,\n      disabled: loading,\n      children: loading ? _jsxDEV(ActivityIndicator, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Verificar C\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.resendButton,\n      onPress: handleResendCode,\n      disabled: loading,\n      children: _jsxDEV(Text, {\n        style: styles.resendButtonText,\n        children: \"Reenviar C\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.cancelButton,\n      onPress: () => navigation.navigate('Login'),\n      children: _jsxDEV(Text, {\n        style: styles.cancelButtonText,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\nexport default VerifyCodeScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","supabase","useNavigation","useRoute","styles","jsxDEV","_jsxDEV","VerifyCodeScreen","code","setCode","loading","setLoading","navigation","route","email","params","handleVerifyCode","alert","error","auth","verifyOtp","token","type","message","navigate","console","handleResendCode","signInWithOtp","options","shouldCreateUser","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","input","placeholder","value","onChangeText","keyboardType","maxLength","button","buttonDisabled","onPress","disabled","color","buttonText","resendButton","resendButtonText","cancelButton","cancelButtonText"],"sources":["C:/Users/migue/miguel/TravelQuest/src/screens/auth/VerifyCodeScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    Alert,\n    ActivityIndicator,\n} from 'react-native';\nimport { supabase } from '../../services/supabase';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../navigation/types';\nimport styles from './style'; // Importamos los estilos\n\ntype VerifyCodeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\ntype RouteParams = {\n    email: string;\n};\n\nexport const VerifyCodeScreen = () => {\n    const [code, setCode] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigation = useNavigation<VerifyCodeScreenNavigationProp>();\n    const route = useRoute();\n    const { email } = route.params as RouteParams;\n\n    const handleVerifyCode = async () => {\n        if (!code) {\n            Alert.alert('Error', 'Por favor, ingresa el código de verificación');\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            const { error } = await supabase.auth.verifyOtp({\n                email,\n                token: code,\n                type: 'email'\n            });\n\n            if (error) {\n                Alert.alert('Error', error.message);\n                return;\n            }\n\n            // Si el código es correcto, navegamos a la pantalla de cambio de contraseña\n            navigation.navigate('ResetPassword');\n        } catch (error) {\n            console.error('Error al verificar código:', error);\n            Alert.alert('Error', 'Ocurrió un error al verificar el código');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleResendCode = async () => {\n        setLoading(true);\n\n        try {\n            const { error } = await supabase.auth.signInWithOtp({\n                email,\n                options: {\n                    shouldCreateUser: false\n                }\n            });\n\n            if (error) {\n                Alert.alert('Error', error.message);\n                return;\n            }\n\n            Alert.alert('Éxito', 'Se ha enviado un nuevo código a tu correo electrónico');\n        } catch (error) {\n            console.error('Error al reenviar código:', error);\n            Alert.alert('Error', 'Ocurrió un error al reenviar el código');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Verificar Código</Text>\n            <Text style={styles.subtitle}>\n                Por favor, ingresa el código que hemos enviado a tu correo electrónico\n            </Text>\n\n            <TextInput\n                style={styles.input}\n                placeholder=\"Código de verificación\"\n                value={code}\n                onChangeText={setCode}\n                keyboardType=\"number-pad\"\n                maxLength={6}\n            />\n\n            <TouchableOpacity\n                style={[styles.button, loading && styles.buttonDisabled]}\n                onPress={handleVerifyCode}\n                disabled={loading}\n            >\n                {loading ? (\n                    <ActivityIndicator color=\"white\" />\n                ) : (\n                    <Text style={styles.buttonText}>Verificar Código</Text>\n                )}\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.resendButton}\n                onPress={handleResendCode}\n                disabled={loading}\n            >\n                <Text style={styles.resendButtonText}>Reenviar Código</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.cancelButton}\n                onPress={() => navigation.navigate('Login')}\n            >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default VerifyCodeScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}