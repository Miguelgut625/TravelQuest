{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  user: null,\n  authState: 'idle',\n  error: null\n};\nvar authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    setUser: function setUser(state, action) {\n      state.user = action.payload;\n      state.authState = action.payload ? 'authenticated' : 'unauthenticated';\n    },\n    setAuthState: function setAuthState(state, action) {\n      state.authState = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  setUser = _authSlice$actions.setUser,\n  setAuthState = _authSlice$actions.setAuthState,\n  setError = _authSlice$actions.setError;\nexport { setUser, setAuthState, setError };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","authState","error","authSlice","name","reducers","setUser","state","action","payload","setAuthState","setError","_authSlice$actions","actions","reducer"],"sources":["C:/Users/PC/TravelQuest/src/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type AuthState = 'idle' | 'loading' | 'authenticated' | 'unauthenticated' | 'password_recovery';\r\n\r\ninterface CustomUser {\r\n  id: string;\r\n  email: string | null;\r\n  username?: string;\r\n  profilePicture?: string;\r\n}\r\n\r\ninterface AuthSliceState {\r\n  user: CustomUser | null;\r\n  authState: AuthState;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthSliceState = {\r\n  user: null,\r\n  authState: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<CustomUser | null>) => {\r\n      state.user = action.payload;\r\n      state.authState = action.payload ? 'authenticated' : 'unauthenticated';\r\n    },\r\n    setAuthState: (state, action: PayloadAction<AuthState>) => {\r\n      state.authState = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setAuthState, setError } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAiB7D,IAAMC,YAA4B,GAAG;EACnCC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,MAAM;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY,EAAZA,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAE,SAATA,OAAOA,CAAGC,KAAK,EAAEC,MAAwC,EAAK;MAC5DD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO,GAAG,eAAe,GAAG,iBAAiB;IACxE,CAAC;IACDC,YAAY,EAAE,SAAdA,YAAYA,CAAGH,KAAK,EAAEC,MAAgC,EAAK;MACzDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IAClC,CAAC;IACDE,QAAQ,EAAE,SAAVA,QAAQA,CAAGJ,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEK,IAAAG,kBAAA,GAA4CT,SAAS,CAACU,OAAO;EAArDP,OAAO,GAAAM,kBAAA,CAAPN,OAAO;EAAEI,YAAY,GAAAE,kBAAA,CAAZF,YAAY;EAAEC,QAAQ,GAAAC,kBAAA,CAARD,QAAQ;AAAuB,SAAAL,OAAA,EAAAI,YAAA,EAAAC,QAAA;AACrE,eAAeR,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}