{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Map = function Map(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasError = _useState2[0],\n    setHasError = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mapReady = _useState6[0],\n    setMapReady = _useState6[1];\n  useEffect(function () {\n    console.log('Map props:', JSON.stringify(props, null, 2));\n    if (Platform.OS === 'android') {\n      console.log('Inicializando mapa en Android...');\n      var timeoutId = setTimeout(function () {\n        if (!mapReady) {\n          console.log('El mapa no está listo después del tiempo de espera, intentando refrescar...');\n        }\n      }, 5000);\n      return function () {\n        return clearTimeout(timeoutId);\n      };\n    }\n  }, [props, mapReady]);\n  if (Platform.OS === 'web') {\n    return _jsx(View, {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: _jsx(MapView, _objectSpread(_objectSpread({}, props), {}, {\n        style: [{\n          height: '100%',\n          width: '100%'\n        }, props.style]\n      }))\n    });\n  }\n  try {\n    if (hasError) {\n      return _jsx(View, {\n        style: [styles.container, styles.errorContainer],\n        children: _jsx(Text, {\n          style: styles.errorText,\n          children: errorMessage || 'Error al cargar el mapa. Por favor, verifica tu conexión.'\n        })\n      });\n    }\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(MapView, _objectSpread(_objectSpread({\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        showsMyLocationButton: true,\n        loadingEnabled: true,\n        loadingIndicatorColor: \"#4CAF50\",\n        loadingBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        zoomControlEnabled: true,\n        zoomEnabled: true\n      }, props), {}, {\n        style: [styles.map, props.style],\n        onMapReady: function onMapReady() {\n          console.log('Mapa cargado correctamente');\n          setMapReady(true);\n        },\n        onRegionChangeComplete: function onRegionChangeComplete(region) {\n          console.log('Región cambiada:', region);\n          if (props.onRegionChangeComplete) {\n            props.onRegionChangeComplete(region);\n          }\n        },\n        moveOnMarkerPress: false,\n        pitchEnabled: false,\n        toolbarEnabled: false\n      }))\n    });\n  } catch (error) {\n    console.error('Error renderizando el mapa:', error);\n    return _jsx(View, {\n      style: [styles.container, styles.errorContainer],\n      children: _jsxs(Text, {\n        style: styles.errorText,\n        children: [\"Error en renderizado del mapa: \", error.message || 'Desconocido']\n      })\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%'\n  },\n  map: {\n    height: '100%',\n    width: '100%'\n  },\n  errorContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: '#f44336',\n    textAlign: 'center',\n    padding: 20\n  }\n});\nexport var MapMarker = Marker;\nexport default Map;","map":{"version":3,"names":["React","useState","useEffect","Platform","View","StyleSheet","Text","MapView","Marker","PROVIDER_GOOGLE","jsx","_jsx","jsxs","_jsxs","Map","props","_useState","_useState2","_slicedToArray","hasError","setHasError","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","mapReady","setMapReady","console","log","JSON","stringify","OS","timeoutId","setTimeout","clearTimeout","style","height","width","children","_objectSpread","styles","container","errorContainer","errorText","provider","showsUserLocation","showsMyLocationButton","loadingEnabled","loadingIndicatorColor","loadingBackgroundColor","zoomControlEnabled","zoomEnabled","map","onMapReady","onRegionChangeComplete","region","moveOnMarkerPress","pitchEnabled","toolbarEnabled","error","message","create","justifyContent","alignItems","backgroundColor","color","textAlign","padding","MapMarker"],"sources":["C:/Users/migue/TravelQuest/src/components/maps.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Platform, View, StyleSheet, Text } from 'react-native';\r\nimport MapView, { Marker, MapViewProps, PROVIDER_GOOGLE, Region } from 'react-native-maps';\r\n\r\nconst Map = (props: MapViewProps) => {\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [mapReady, setMapReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Log para verificar qué propiedades se están pasando al mapa\r\n    console.log('Map props:', JSON.stringify(props, null, 2));\r\n    \r\n    // En Android, podemos necesitar inicializar el mapa de una manera específica\r\n    if (Platform.OS === 'android') {\r\n      console.log('Inicializando mapa en Android...');\r\n      \r\n      // Esto puede ayudar a resolver problemas con la visualización del mapa en Android\r\n      const timeoutId = setTimeout(() => {\r\n        if (!mapReady) {\r\n          console.log('El mapa no está listo después del tiempo de espera, intentando refrescar...');\r\n        }\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [props, mapReady]);\r\n\r\n  if (Platform.OS === 'web') {\r\n    return (\r\n      <View style={{ height: '100%', width: '100%' }}>\r\n        <MapView\r\n          {...props}\r\n          style={[{ height: '100%', width: '100%' }, props.style]}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Usamos un componente envoltorio para capturar errores\r\n  try {\r\n    // Si ya tenemos un error, mostramos el fallback\r\n    if (hasError) {\r\n      return (\r\n        <View style={[styles.container, styles.errorContainer]}>\r\n          <Text style={styles.errorText}>\r\n            {errorMessage || 'Error al cargar el mapa. Por favor, verifica tu conexión.'}\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <MapView\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          showsMyLocationButton={true}\r\n          loadingEnabled={true}\r\n          loadingIndicatorColor=\"#4CAF50\"\r\n          loadingBackgroundColor=\"rgba(255, 255, 255, 0.5)\"\r\n          zoomControlEnabled={true}\r\n          zoomEnabled={true}\r\n          {...props}\r\n          style={[styles.map, props.style]}\r\n          onMapReady={() => {\r\n            console.log('Mapa cargado correctamente');\r\n            setMapReady(true);\r\n          }}\r\n          onRegionChangeComplete={(region: Region) => {\r\n            console.log('Región cambiada:', region);\r\n            if (props.onRegionChangeComplete) {\r\n              // @ts-ignore: Manejar la diferencia en la definición de tipo\r\n              props.onRegionChangeComplete(region);\r\n            }\r\n          }}\r\n          // Configuración específica para Android para mejorar rendimiento\r\n          moveOnMarkerPress={false}\r\n          pitchEnabled={false}\r\n          toolbarEnabled={false}\r\n        />\r\n      </View>\r\n    );\r\n  } catch (error: any) {\r\n    console.error('Error renderizando el mapa:', error);\r\n    // Fallback si hay un error con el mapa\r\n    return (\r\n      <View style={[styles.container, styles.errorContainer]}>\r\n        <Text style={styles.errorText}>\r\n          Error en renderizado del mapa: {error.message || 'Desconocido'}\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  map: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  errorContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: '#f44336',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport const MapMarker = Marker;\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}