{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationPresenter from './NotificationPresenterModule';\nlet warningMessageShown = false;\nexport default async function presentNotificationAsync(content, identifier = uuidv4()) {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');\n    warningMessageShown = true;\n  }\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}","map":{"version":3,"names":["UnavailabilityError","v4","uuidv4","NotificationPresenter","warningMessageShown","presentNotificationAsync","content","identifier","__DEV__","console","warn"],"sources":["C:\\Users\\PC\\TravelQuest\\node_modules\\expo-notifications\\src\\presentNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * Schedules a notification for immediate trigger.\n * @param content An object representing the notification content.\n * @param identifier\n * @return It returns a Promise resolving with the notification's identifier once the notification is successfully scheduled for immediate display.\n * @header schedule\n * @deprecated This method has been deprecated in favor of using an explicit `NotificationHandler` and the [`scheduleNotificationAsync`](#notificationsschedulenotificationasyncrequest) method. More information can be found in our [FYI document](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AACvD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAOC,qBAAqB,MAAM,+BAA+B;AAGjE,IAAIC,mBAAmB,GAAG,KAAK;AAU/B,eAAe,eAAeC,wBAAwBA,CACpDC,OAAiC,EACjCC,UAAA,GAAqBL,MAAM,EAAE;EAE7B,IAAIM,OAAO,IAAI,CAACJ,mBAAmB,EAAE;IACnCK,OAAO,CAACC,IAAI,CACV,qMAAqM,CACtM;IACDN,mBAAmB,GAAG,IAAI;;EAG5B,IAAI,CAACD,qBAAqB,CAACE,wBAAwB,EAAE;IACnD,MAAM,IAAIL,mBAAmB,CAAC,eAAe,EAAE,0BAA0B,CAAC;;EAG5E,OAAO,MAAMG,qBAAqB,CAACE,wBAAwB,CAACE,UAAU,EAAED,OAAO,CAAC;AAClF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}