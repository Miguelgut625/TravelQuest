{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTimeRemaining = endDate => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nconst MissionCard = ({\n  mission,\n  onComplete\n}) => {\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  return _jsxDEV(TouchableOpacity, {\n    style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n    onPress: () => !mission.completed && !isExpired && onComplete(),\n    disabled: mission.completed || isExpired,\n    children: [_jsxDEV(View, {\n      style: styles.cardHeader,\n      children: [_jsxDEV(Text, {\n        style: styles.cardTitle,\n        children: mission.challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.badgeContainer,\n        children: [_jsxDEV(Text, {\n          style: [styles.badge, {\n            backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000'\n          }],\n          children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: [styles.timeRemaining, isExpired && styles.expiredTime],\n          children: timeRemaining.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cardDescription,\n      children: mission.challenge.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.cardFooter,\n      children: [_jsxDEV(Text, {\n        style: styles.difficulty,\n        children: [\"Dificultad: \", mission.challenge.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.points,\n        children: [mission.challenge.points, \" puntos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\nconst CityCard = ({\n  cityName,\n  totalMissions,\n  completedMissions,\n  expiredMissions,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: [_jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(View, {\n      style: styles.cityInfo,\n      children: [_jsxDEV(Text, {\n        style: styles.cityName,\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.missionCountContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.missionCount,\n          children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), expiredMissions > 0 && _jsxDEV(Text, {\n          style: styles.expiredCount,\n          children: [expiredMissions, \" misiones expiradas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), _jsxDEV(Ionicons, {\n      name: \"chevron-forward\",\n      size: 24,\n      color: \"#666\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this), _jsxDEV(View, {\n    style: styles.progressBar,\n    children: [_jsxDEV(View, {\n      style: [styles.progressFillCompleted, {\n        width: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: [styles.progressFillExpired, {\n        width: `${expiredMissions / totalMissions * 100}%`,\n        left: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: [styles.progressFillPending, {\n        width: `${(totalMissions - completedMissions - expiredMissions) / totalMissions * 100}%`,\n        left: `${(completedMissions + expiredMissions) / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 3\n}, this);\nconst MissionsScreen = ({\n  route\n}) => {\n  const {\n    journeyId\n  } = route.params || {};\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [missions, setMissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [cityMissions, setCityMissions] = useState({});\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n          id,\n          description,\n          created_at,\n          start_date,\n          end_date,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            start_date,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `).eq('userId', user.id).order('created_at', {\n        ascending: false\n      });\n      if (journeysError) throw journeysError;\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n      const allMissions = journeys.flatMap(journey => journey.journeys_missions.map(jm => ({\n        id: jm.id,\n        completed: jm.completed,\n        cityName: journey.cities?.name || 'Ciudad Desconocida',\n        start_date: jm.start_date || journey.start_date,\n        end_date: jm.end_date || journey.end_date,\n        challenge: {\n          title: jm.challenges.title,\n          description: jm.challenges.description,\n          difficulty: jm.challenges.difficulty,\n          points: jm.challenges.points\n        }\n      })));\n      const missionsByCity = {};\n      allMissions.forEach(mission => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        const timeRemaining = getTimeRemaining(mission.end_date);\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else if (timeRemaining.isExpired) {\n          missionsByCity[mission.cityName].expired.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n      setCityMissions(missionsByCity);\n      setMissions(allMissions);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n  const handleCompleteMission = async missionId => {\n    if (!user?.id) return;\n    try {\n      const points = await completeMission(missionId, user.id);\n      setUserPoints(prev => prev + points);\n      const updatedMissions = missions.map(mission => mission.id === missionId ? Object.assign({}, mission, {\n        completed: true\n      }) : mission);\n      setMissions(updatedMissions);\n      const newCityMissions = Object.assign({}, cityMissions);\n      Object.keys(newCityMissions).forEach(cityName => {\n        const mission = newCityMissions[cityName].pending.find(m => m.id === missionId);\n        if (mission) {\n          newCityMissions[cityName].pending = newCityMissions[cityName].pending.filter(m => m.id !== missionId);\n          newCityMissions[cityName].completed.push(Object.assign({}, mission, {\n            completed: true\n          }));\n        }\n      });\n      setCityMissions(newCityMissions);\n      Alert.alert('Â¡MisiÃ³n Completada!', `Has ganado ${points} puntos por completar esta misiÃ³n.`);\n    } catch (error) {\n      console.error('Error completing mission:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n. Por favor, intenta de nuevo.');\n    }\n  };\n  const handleMissionComplete = missionId => {\n    handleCompleteMission(missionId);\n    dispatch(dispatchCompleteMission(missionId));\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this);\n  }\n  if (!selectedCity) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(cityMissions).map(([cityName, missions]) => _jsxDEV(CityCard, {\n          cityName: cityName,\n          totalMissions: missions.completed.length + missions.pending.length + missions.expired.length,\n          completedMissions: missions.completed.length,\n          expiredMissions: missions.expired.length,\n          onPress: () => setSelectedCity(cityName)\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  }\n  const cityData = cityMissions[selectedCity];\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => setSelectedCity(null),\n        children: [_jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), cityData.pending.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => handleMissionComplete(mission.id)\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.expired.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), cityData.expired.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.completed.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), cityData.completed.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButtonText: {\n    fontSize: 16,\n    marginLeft: 5,\n    color: '#333'\n  },\n  cityTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  citiesList: {\n    flex: 1\n  },\n  cityCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  cityCardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cityInfo: {\n    flex: 1\n  },\n  cityName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  missionCountContainer: {\n    flexDirection: 'column'\n  },\n  missionCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  expiredCount: {\n    fontSize: 14,\n    color: '#f44336',\n    marginTop: 2\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  progressFillCompleted: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n    position: 'absolute',\n    left: 0\n  },\n  progressFillExpired: {\n    height: '100%',\n    backgroundColor: '#f44336',\n    position: 'absolute'\n  },\n  progressFillPending: {\n    height: '100%',\n    backgroundColor: '#FFA000',\n    position: 'absolute'\n  },\n  missionsList: {\n    flex: 1\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 15\n  },\n  completedDivider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#4CAF50'\n  },\n  completedText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    marginHorizontal: 10,\n    fontSize: 16\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badgeContainer: {\n    alignItems: 'flex-end'\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  expiredCard: {\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  timeRemaining: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4\n  },\n  expiredTime: {\n    color: '#f44336'\n  }\n});\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","ScrollView","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","jsxDEV","_jsxDEV","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","mission","onComplete","timeRemaining","end_date","completed","style","styles","card","completedCard","expiredCard","onPress","disabled","children","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","CityCard","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCountContainer","missionCount","expiredCount","name","size","color","progressBar","progressFillCompleted","width","progressFillExpired","left","progressFillPending","MissionsScreen","route","journeyId","params","user","state","auth","missions","setMissions","loading","setLoading","error","setError","userPoints","setUserPoints","selectedCity","setSelectedCity","cityMissions","setCityMissions","dispatch","theme","fetchMissions","id","data","journeys","journeysError","from","select","eq","order","ascending","length","allMissions","flatMap","journey","journeys_missions","map","jm","cities","start_date","challenges","missionsByCity","forEach","pending","expired","push","console","handleCompleteMission","missionId","prev","updatedMissions","Object","assign","newCityMissions","keys","find","m","filter","alert","handleMissionComplete","loadingContainer","loadingText","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","fontSize","marginLeft","fontWeight","marginTop","textAlign","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","position","marginVertical","marginHorizontal","opacity","paddingHorizontal","paddingVertical","borderColor","borderWidth"],"sources":["C:/Users/migue/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert, ScrollView } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\r\nimport { JourneyMission } from '../../types/journey';\r\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: JourneyMission[];\r\n  };\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\n  route: MissionsScreenRouteProp;\r\n}\r\n\r\ninterface CityMissions {\r\n  [cityName: string]: {\r\n    completed: JourneyMission[];\r\n    pending: JourneyMission[];\r\n    expired: JourneyMission[];\r\n  };\r\n}\r\n\r\ninterface Journey {\r\n  id: string;\r\n  description: string;\r\n  created_at: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  cities?: {\r\n    name: string;\r\n  };\r\n  journeys_missions: {\r\n    id: string;\r\n    completed: boolean;\r\n    challengeId: string;\r\n    start_date: string;\r\n    end_date: string;\r\n    challenges: {\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      difficulty: string;\r\n      points: number;\r\n    };\r\n  }[];\r\n}\r\n\r\nconst getTimeRemaining = (endDate: string) => {\r\n  const now = new Date();\r\n  const end = new Date(endDate);\r\n  const diff = end.getTime() - now.getTime();\r\n  \r\n  if (diff <= 0) {\r\n    return {\r\n      isExpired: true,\r\n      text: 'Tiempo expirado'\r\n    };\r\n  }\r\n\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  if (days > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${days} dÃ­as restantes`\r\n    };\r\n  } else if (hours > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${hours} horas restantes`\r\n    };\r\n  } else {\r\n    return {\r\n      isExpired: false,\r\n      text: `${minutes} minutos restantes`\r\n    };\r\n  }\r\n};\r\n\r\nconst MissionCard = ({ mission, onComplete }: { mission: JourneyMission; onComplete: () => void }) => {\r\n  const timeRemaining = getTimeRemaining(mission.end_date);\r\n  const isExpired = timeRemaining.isExpired && !mission.completed;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.card, \r\n        mission.completed && styles.completedCard,\r\n        isExpired && styles.expiredCard\r\n      ]}\r\n      onPress={() => !mission.completed && !isExpired && onComplete()}\r\n      disabled={mission.completed || isExpired}\r\n    >\r\n      <View style={styles.cardHeader}>\r\n        <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n        <View style={styles.badgeContainer}>\r\n          <Text style={[\r\n            styles.badge, \r\n            { backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000' }\r\n          ]}>\r\n            {mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\r\n          </Text>\r\n          <Text style={[\r\n            styles.timeRemaining,\r\n            isExpired && styles.expiredTime\r\n          ]}>\r\n            {timeRemaining.text}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n      <View style={styles.cardFooter}>\r\n        <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n        <Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \r\n  cityName: string; \r\n  totalMissions: number;\r\n  completedMissions: number;\r\n  expiredMissions: number;\r\n  onPress: () => void;\r\n}) => (\r\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\r\n    <View style={styles.cityCardContent}>\r\n      <View style={styles.cityInfo}>\r\n        <Text style={styles.cityName}>{cityName}</Text>\r\n        <View style={styles.missionCountContainer}>\r\n          <Text style={styles.missionCount}>\r\n            {completedMissions}/{totalMissions} misiones completadas\r\n          </Text>\r\n          {expiredMissions > 0 && (\r\n            <Text style={styles.expiredCount}>\r\n              {expiredMissions} misiones expiradas\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n      <Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\r\n    </View>\r\n    <View style={styles.progressBar}>\r\n      <View \r\n        style={[\r\n          styles.progressFillCompleted, \r\n          { width: `${(completedMissions / totalMissions) * 100}%` }\r\n        ]} \r\n      />\r\n      <View \r\n        style={[\r\n          styles.progressFillExpired, \r\n          { \r\n            width: `${(expiredMissions / totalMissions) * 100}%`,\r\n            left: `${(completedMissions / totalMissions) * 100}%`\r\n          }\r\n        ]} \r\n      />\r\n      <View \r\n        style={[\r\n          styles.progressFillPending, \r\n          { \r\n            width: `${((totalMissions - completedMissions - expiredMissions) / totalMissions) * 100}%`,\r\n            left: `${((completedMissions + expiredMissions) / totalMissions) * 100}%`\r\n          }\r\n        ]} \r\n      />\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst MissionsScreen = ({ route }: MissionsScreenProps) => {\r\n  const { journeyId } = route.params || {};\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [missions, setMissions] = useState<JourneyMission[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [userPoints, setUserPoints] = useState(0);\r\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\r\n  const [cityMissions, setCityMissions] = useState<CityMissions>({});\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const fetchMissions = async () => {\r\n    if (!user?.id) {\r\n      setError('Usuario no autenticado');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: journeys, error: journeysError } = await supabase\r\n        .from('journeys')\r\n        .select(`\r\n          id,\r\n          description,\r\n          created_at,\r\n          start_date,\r\n          end_date,\r\n          cities (\r\n            name\r\n          ),\r\n          journeys_missions!inner (\r\n            id,\r\n            completed,\r\n            challengeId,\r\n            start_date,\r\n            end_date,\r\n            challenges!inner (\r\n              id,\r\n              title,\r\n              description,\r\n              difficulty,\r\n              points\r\n            )\r\n          )\r\n        `)\r\n        .eq('userId', user.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (journeysError) throw journeysError;\r\n\r\n      if (!journeys || journeys.length === 0) {\r\n        setError('No hay viajes disponibles');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allMissions = journeys.flatMap((journey: Journey) => \r\n        journey.journeys_missions.map((jm) => ({\r\n          id: jm.id,\r\n          completed: jm.completed,\r\n          cityName: journey.cities?.name || 'Ciudad Desconocida',\r\n          start_date: jm.start_date || journey.start_date,\r\n          end_date: jm.end_date || journey.end_date,\r\n          challenge: {\r\n            title: jm.challenges.title,\r\n            description: jm.challenges.description,\r\n            difficulty: jm.challenges.difficulty,\r\n            points: jm.challenges.points\r\n          }\r\n        }))\r\n      );\r\n\r\n      // Organizar misiones por ciudad\r\n      const missionsByCity: CityMissions = {};\r\n      allMissions.forEach((mission: JourneyMission) => {\r\n        if (!missionsByCity[mission.cityName]) {\r\n          missionsByCity[mission.cityName] = {\r\n            completed: [],\r\n            pending: [],\r\n            expired: []\r\n          };\r\n        }\r\n        const timeRemaining = getTimeRemaining(mission.end_date);\r\n        if (mission.completed) {\r\n          missionsByCity[mission.cityName].completed.push(mission);\r\n        } else if (timeRemaining.isExpired) {\r\n          missionsByCity[mission.cityName].expired.push(mission);\r\n        } else {\r\n          missionsByCity[mission.cityName].pending.push(mission);\r\n        }\r\n      });\r\n\r\n      setCityMissions(missionsByCity);\r\n      setMissions(allMissions);\r\n    } catch (error) {\r\n      console.error('Error fetching missions:', error);\r\n      setError('Error al cargar las misiones');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMissions();\r\n  }, [journeyId]);\r\n\r\n  const handleCompleteMission = async (missionId: string) => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      const points = await completeMission(missionId, user.id);\r\n      setUserPoints(prev => prev + points);\r\n\r\n      // Actualizar el estado local\r\n      const updatedMissions = missions.map(mission =>\r\n        mission.id === missionId ? { ...mission, completed: true } : mission\r\n      );\r\n      setMissions(updatedMissions);\r\n\r\n      // Actualizar cityMissions\r\n      const newCityMissions = { ...cityMissions };\r\n      Object.keys(newCityMissions).forEach(cityName => {\r\n        const mission = newCityMissions[cityName].pending.find(m => m.id === missionId);\r\n        if (mission) {\r\n          newCityMissions[cityName].pending = newCityMissions[cityName].pending.filter(m => m.id !== missionId);\r\n          newCityMissions[cityName].completed.push({ ...mission, completed: true });\r\n        }\r\n      });\r\n      setCityMissions(newCityMissions);\r\n\r\n      Alert.alert(\r\n        'Â¡MisiÃ³n Completada!',\r\n        `Has ganado ${points} puntos por completar esta misiÃ³n.`\r\n      );\r\n    } catch (error) {\r\n      console.error('Error completing mission:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        'No se pudo completar la misiÃ³n. Por favor, intenta de nuevo.'\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMissionComplete = (missionId: string) => {\r\n    handleCompleteMission(missionId);\r\n    dispatch(dispatchCompleteMission(missionId));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\r\n          <Text style={styles.retryButtonText}>Reintentar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!selectedCity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Tus Ciudades</Text>\r\n          <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n        </View>\r\n        <ScrollView style={styles.citiesList}>\r\n          {Object.entries(cityMissions).map(([cityName, missions]) => (\r\n            <CityCard\r\n              key={cityName}\r\n              cityName={cityName}\r\n              totalMissions={missions.completed.length + missions.pending.length + missions.expired.length}\r\n              completedMissions={missions.completed.length}\r\n              expiredMissions={missions.expired.length}\r\n              onPress={() => setSelectedCity(cityName)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const cityData = cityMissions[selectedCity];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => setSelectedCity(null)}\r\n        >\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\r\n          <Text style={styles.backButtonText}>Ciudades</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n      </View>\r\n      \r\n      <Text style={styles.cityTitle}>{selectedCity}</Text>\r\n      \r\n      <ScrollView style={styles.missionsList}>\r\n        {cityData.pending.length > 0 && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Misiones Pendientes</Text>\r\n            {cityData.pending.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => handleMissionComplete(mission.id)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.expired.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.expired.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.completed.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={styles.completedText}>Completadas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.completed.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  backButtonText: {\r\n    fontSize: 16,\r\n    marginLeft: 5,\r\n    color: '#333',\r\n  },\r\n  cityTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  pointsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  citiesList: {\r\n    flex: 1,\r\n  },\r\n  cityCard: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  cityCardContent: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cityInfo: {\r\n    flex: 1,\r\n  },\r\n  cityName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  missionCountContainer: {\r\n    flexDirection: 'column',\r\n  },\r\n  missionCount: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  expiredCount: {\r\n    fontSize: 14,\r\n    color: '#f44336',\r\n    marginTop: 2,\r\n  },\r\n  progressBar: {\r\n    height: 4,\r\n    backgroundColor: '#E0E0E0',\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n  },\r\n  progressFillCompleted: {\r\n    height: '100%',\r\n    backgroundColor: '#4CAF50',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  progressFillExpired: {\r\n    height: '100%',\r\n    backgroundColor: '#f44336',\r\n    position: 'absolute',\r\n  },\r\n  progressFillPending: {\r\n    height: '100%',\r\n    backgroundColor: '#FFA000',\r\n    position: 'absolute',\r\n  },\r\n  missionsList: {\r\n    flex: 1,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 15,\r\n  },\r\n  completedDivider: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  dividerLine: {\r\n    flex: 1,\r\n    height: 1,\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  completedText: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n    marginHorizontal: 10,\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  completedCard: {\r\n    opacity: 0.8,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badgeContainer: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  retryButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  expiredCard: {\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\n  timeRemaining: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n  },\r\n  expiredTime: {\r\n    color: '#f44336',\r\n  },\r\n});\r\n\r\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}