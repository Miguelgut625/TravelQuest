{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  entries: {},\n  isLoading: false,\n  error: null,\n  shouldRefresh: false\n};\nconst journalSlice = createSlice({\n  name: 'journal',\n  initialState,\n  reducers: {\n    addEntry: (state, action) => {\n      const {\n        cityId\n      } = action.payload;\n      if (!state.entries[cityId]) {\n        state.entries[cityId] = [];\n      }\n      state.entries[cityId].push(action.payload);\n    },\n    updateEntry: (state, action) => {\n      const {\n        cityId,\n        id\n      } = action.payload;\n      const cityEntries = state.entries[cityId];\n      if (cityEntries) {\n        const index = cityEntries.findIndex(entry => entry.id === id);\n        if (index !== -1) {\n          cityEntries[index] = action.payload;\n        }\n      }\n    },\n    deleteEntry: (state, action) => {\n      const {\n        cityId,\n        entryId\n      } = action.payload;\n      if (state.entries[cityId]) {\n        state.entries[cityId] = state.entries[cityId].filter(entry => entry.id !== entryId);\n      }\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setJournalEntries: (state, action) => {\n      state.entries = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    setJournalLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setJournalError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    setRefreshJournal: (state, action) => {\n      state.shouldRefresh = action.payload;\n    }\n  }\n});\nexport const {\n  addEntry,\n  updateEntry,\n  deleteEntry,\n  setLoading,\n  setError,\n  setJournalEntries,\n  setJournalLoading,\n  setJournalError,\n  setRefreshJournal\n} = journalSlice.actions;\nexport default journalSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","entries","isLoading","error","shouldRefresh","journalSlice","name","reducers","addEntry","state","action","cityId","payload","push","updateEntry","id","cityEntries","index","findIndex","entry","deleteEntry","entryId","filter","setLoading","setError","setJournalEntries","setJournalLoading","setJournalError","setRefreshJournal","actions","reducer"],"sources":["C:/Users/PC/TravelQuest/src/features/journalSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface JournalEntry {\r\n  id: string;\r\n  cityId: string;\r\n  missionId?: string;\r\n  title: string;\r\n  content: string;\r\n  photos: string[];\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  createdAt: string;\r\n  tags: string[];\r\n}\r\n\r\ninterface JournalState {\r\n  entries: Record<string, any[]>;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  shouldRefresh: boolean;\r\n}\r\n\r\nconst initialState: JournalState = {\r\n  entries: {},\r\n  isLoading: false,\r\n  error: null,\r\n  shouldRefresh: false\r\n};\r\n\r\nconst journalSlice = createSlice({\r\n  name: 'journal',\r\n  initialState,\r\n  reducers: {\r\n    addEntry: (state, action: PayloadAction<JournalEntry>) => {\r\n      const { cityId } = action.payload;\r\n      if (!state.entries[cityId]) {\r\n        state.entries[cityId] = [];\r\n      }\r\n      state.entries[cityId].push(action.payload);\r\n    },\r\n    updateEntry: (state, action: PayloadAction<JournalEntry>) => {\r\n      const { cityId, id } = action.payload;\r\n      const cityEntries = state.entries[cityId];\r\n      if (cityEntries) {\r\n        const index = cityEntries.findIndex(entry => entry.id === id);\r\n        if (index !== -1) {\r\n          cityEntries[index] = action.payload;\r\n        }\r\n      }\r\n    },\r\n    deleteEntry: (state, action: PayloadAction<{ cityId: string; entryId: string }>) => {\r\n      const { cityId, entryId } = action.payload;\r\n      if (state.entries[cityId]) {\r\n        state.entries[cityId] = state.entries[cityId].filter(entry => entry.id !== entryId);\r\n      }\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    setJournalEntries: (state, action: PayloadAction<Record<string, any[]>>) => {\r\n      state.entries = action.payload;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    setJournalLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setJournalError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    setRefreshJournal: (state, action: PayloadAction<boolean>) => {\r\n      state.shouldRefresh = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  addEntry,\r\n  updateEntry,\r\n  deleteEntry,\r\n  setLoading,\r\n  setError,\r\n  setJournalEntries,\r\n  setJournalLoading,\r\n  setJournalError,\r\n  setRefreshJournal\r\n} = journalSlice.actions;\r\n\r\nexport default journalSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}