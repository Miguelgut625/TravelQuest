{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"coordinate\", \"title\", \"description\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var MapMarker = function MapMarker(_ref) {\n  var coordinate = _ref.coordinate,\n    title = _ref.title,\n    description = _ref.description,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(Marker, _objectSpread({\n    coordinate: coordinate,\n    title: title,\n    description: description,\n    pinColor: \"#4CAF50\"\n  }, props));\n};\nvar Map = function Map(_ref2) {\n  var children = _ref2.children,\n    style = _ref2.style,\n    region = _ref2.region,\n    onRegionChangeComplete = _ref2.onRegionChangeComplete,\n    initialRegion = _ref2.initialRegion,\n    showsUserLocation = _ref2.showsUserLocation,\n    showsMyLocationButton = _ref2.showsMyLocationButton,\n    onPress = _ref2.onPress;\n  if (Platform.OS === 'web') {\n    return _jsx(View, {\n      style: [{\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n      }, style],\n      children: _jsx(MapView, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        region: region,\n        onRegionChangeComplete: onRegionChangeComplete,\n        initialRegion: initialRegion,\n        showsUserLocation: showsUserLocation,\n        showsMyLocationButton: showsMyLocationButton,\n        provider: PROVIDER_GOOGLE,\n        mapType: \"standard\",\n        onPress: onPress,\n        children: children\n      })\n    });\n  }\n  return _jsx(MapView, {\n    style: [{\n      width: '100%',\n      height: '100%'\n    }, style],\n    region: region,\n    onRegionChangeComplete: onRegionChangeComplete,\n    initialRegion: initialRegion,\n    showsUserLocation: showsUserLocation,\n    showsMyLocationButton: showsMyLocationButton,\n    onPress: onPress,\n    children: children\n  });\n};\nexport default Map;","map":{"version":3,"names":["React","Platform","View","MapView","Marker","PROVIDER_GOOGLE","jsx","_jsx","MapMarker","_ref","coordinate","title","description","props","_objectWithoutProperties","_excluded","_objectSpread","pinColor","Map","_ref2","children","style","region","onRegionChangeComplete","initialRegion","showsUserLocation","showsMyLocationButton","onPress","OS","width","height","overflow","provider","mapType"],"sources":["C:/Users/Guacter/TravelQuest/src/components/maps/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Platform, View } from 'react-native';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\ninterface MapMarkerProps {\r\n  coordinate: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  title: string;\r\n  description: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport const MapMarker: React.FC<MapMarkerProps> = ({ coordinate, title, description, ...props }) => (\r\n  <Marker\r\n    coordinate={coordinate}\r\n    title={title}\r\n    description={description}\r\n    pinColor=\"#4CAF50\"\r\n    {...props}\r\n  />\r\n);\r\n\r\ninterface MapProps {\r\n  children?: React.ReactNode;\r\n  style?: any;\r\n  region: {\r\n    latitude: number;\r\n    longitude: number;\r\n    latitudeDelta: number;\r\n    longitudeDelta: number;\r\n  };\r\n  onRegionChangeComplete?: (region: any) => void;\r\n  initialRegion?: {\r\n    latitude: number;\r\n    longitude: number;\r\n    latitudeDelta: number;\r\n    longitudeDelta: number;\r\n  };\r\n  showsUserLocation?: boolean;\r\n  showsMyLocationButton?: boolean;\r\n  onPress?: (event: any) => void;\r\n}\r\n\r\nconst Map = ({ \r\n  children, \r\n  style, \r\n  region, \r\n  onRegionChangeComplete, \r\n  initialRegion, \r\n  showsUserLocation, \r\n  showsMyLocationButton,\r\n  onPress \r\n}: MapProps) => {\r\n  if (Platform.OS === 'web') {\r\n    return (\r\n      <View style={[{ width: '100%', height: '100%', overflow: 'hidden' }, style]}>\r\n        <MapView\r\n          style={{ width: '100%', height: '100%' }}\r\n          region={region}\r\n          onRegionChangeComplete={onRegionChangeComplete}\r\n          initialRegion={initialRegion}\r\n          showsUserLocation={showsUserLocation}\r\n          showsMyLocationButton={showsMyLocationButton}\r\n          provider={PROVIDER_GOOGLE}\r\n          mapType=\"standard\"\r\n          onPress={onPress}\r\n        >\r\n          {children}\r\n        </MapView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MapView\r\n      style={[{ width: '100%', height: '100%' }, style]}\r\n      region={region}\r\n      onRegionChangeComplete={onRegionChangeComplete}\r\n      initialRegion={initialRegion}\r\n      showsUserLocation={showsUserLocation}\r\n      showsMyLocationButton={showsMyLocationButton}\r\n      onPress={onPress}\r\n    >\r\n      {children}\r\n    </MapView>\r\n  );\r\n};\r\n\r\nexport default Map; "],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,OAAO,IAAIC,MAAM,EAAEC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAYrE,OAAO,IAAMC,SAAmC,GAAG,SAAtCA,SAAmCA,CAAAC,IAAA;EAAA,IAAMC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IAAKC,KAAK,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAAA,OAC5FR,IAAA,CAACH,MAAM,EAAAY,aAAA;IACLN,UAAU,EAAEA,UAAW;IACvBC,KAAK,EAAEA,KAAM;IACbC,WAAW,EAAEA,WAAY;IACzBK,QAAQ,EAAC;EAAS,GACdJ,KAAK,CACV,CAAC;AAAA,CACH;AAuBD,IAAMK,GAAG,GAAG,SAANA,GAAGA,CAAAC,KAAA,EASO;EAAA,IARdC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IACRC,KAAK,GAAAF,KAAA,CAALE,KAAK;IACLC,MAAM,GAAAH,KAAA,CAANG,MAAM;IACNC,sBAAsB,GAAAJ,KAAA,CAAtBI,sBAAsB;IACtBC,aAAa,GAAAL,KAAA,CAAbK,aAAa;IACbC,iBAAiB,GAAAN,KAAA,CAAjBM,iBAAiB;IACjBC,qBAAqB,GAAAP,KAAA,CAArBO,qBAAqB;IACrBC,OAAO,GAAAR,KAAA,CAAPQ,OAAO;EAEP,IAAI1B,QAAQ,CAAC2B,EAAE,KAAK,KAAK,EAAE;IACzB,OACErB,IAAA,CAACL,IAAI;MAACmB,KAAK,EAAE,CAAC;QAAEQ,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAC,EAAEV,KAAK,CAAE;MAAAD,QAAA,EAC1Eb,IAAA,CAACJ,OAAO;QACNkB,KAAK,EAAE;UAAEQ,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QACzCR,MAAM,EAAEA,MAAO;QACfC,sBAAsB,EAAEA,sBAAuB;QAC/CC,aAAa,EAAEA,aAAc;QAC7BC,iBAAiB,EAAEA,iBAAkB;QACrCC,qBAAqB,EAAEA,qBAAsB;QAC7CM,QAAQ,EAAE3B,eAAgB;QAC1B4B,OAAO,EAAC,UAAU;QAClBN,OAAO,EAAEA,OAAQ;QAAAP,QAAA,EAEhBA;MAAQ,CACF;IAAC,CACN,CAAC;EAEX;EAEA,OACEb,IAAA,CAACJ,OAAO;IACNkB,KAAK,EAAE,CAAC;MAAEQ,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAC,EAAET,KAAK,CAAE;IAClDC,MAAM,EAAEA,MAAO;IACfC,sBAAsB,EAAEA,sBAAuB;IAC/CC,aAAa,EAAEA,aAAc;IAC7BC,iBAAiB,EAAEA,iBAAkB;IACrCC,qBAAqB,EAAEA,qBAAsB;IAC7CC,OAAO,EAAEA,OAAQ;IAAAP,QAAA,EAEhBA;EAAQ,CACF,CAAC;AAEd,CAAC;AAED,eAAeF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}