{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\FriendsScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport NotificationService from '../../services/NotificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsScreen = () => {\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [friendshipRequests, setFriendshipRequests] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingFriends, setLoadingFriends] = useState(true);\n  useEffect(() => {\n    fetchPendingRequests();\n    fetchFriends();\n  }, [user?.id]);\n  const fetchFriends = async () => {\n    try {\n      setLoadingFriends(true);\n      const {\n        data,\n        error\n      } = await supabase.from('friends').select(`\n          user1Id,\n          user2Id,\n          user1:user1Id (id, username, points),\n          user2:user2Id (id, username, points)\n        `).or(`user1Id.eq.${user?.id},user2Id.eq.${user?.id}`);\n      if (error) throw error;\n      const uniqueFriends = new Set();\n      const friendsList = data?.reduce((acc, friendship) => {\n        const friend = friendship.user1Id === user?.id ? friendship.user2 : friendship.user1;\n        if (!uniqueFriends.has(friend.id)) {\n          uniqueFriends.add(friend.id);\n          acc.push({\n            id: friend.id,\n            username: friend.username,\n            points: friend.points\n          });\n        }\n        return acc;\n      }, []) || [];\n      setFriends(friendsList);\n    } catch (error) {\n      console.error('Error al obtener amigos:', error.message);\n      Alert.alert('Error', 'No se pudieron cargar los amigos');\n    } finally {\n      setLoadingFriends(false);\n    }\n  };\n  const fetchPendingRequests = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('friendship_invitations').select(`\n          id, senderId, created_at, receiverId, status,\n          users:senderId (username)\n        `).eq('receiverId', user?.id).eq('status', 'Pending');\n      if (error) throw error;\n      setFriendshipRequests(data || []);\n    } catch (error) {\n      console.error('Error al obtener solicitudes pendientes:', error.message);\n      Alert.alert('Error', 'No se pudieron cargar las solicitudes de amistad');\n    }\n  };\n  const handleAcceptRequest = async id => {\n    try {\n      const {\n        data: invitation,\n        error: invitationError\n      } = await supabase.from('friendship_invitations').select('senderId, receiverId').eq('id', id).single();\n      if (invitationError) throw invitationError;\n      const {\n        error: insertError\n      } = await supabase.rpc('insert_reciprocal_friendship', {\n        user1: invitation.senderId,\n        user2: invitation.receiverId\n      });\n      if (insertError) throw insertError;\n      const {\n        error: updateError\n      } = await supabase.from('friendship_invitations').update({\n        status: 'Accepted'\n      }).eq('id', id);\n      if (updateError) throw updateError;\n      setFriendshipRequests(prevRequests => prevRequests.filter(request => request.id !== id));\n      fetchFriends();\n      Alert.alert('Éxito', 'Solicitud aceptada con éxito');\n    } catch (error) {\n      console.error('Error al aceptar la solicitud:', error.message);\n      Alert.alert('Error', 'No se pudo aceptar la solicitud');\n    }\n  };\n  const handleRejectRequest = async id => {\n    try {\n      const {\n        error: updateError\n      } = await supabase.from('friendship_invitations').update({\n        status: 'Rejected'\n      }).eq('id', id);\n      if (updateError) throw updateError;\n      setFriendshipRequests(prevRequests => prevRequests.filter(request => request.id !== id));\n      Alert.alert('Éxito', 'Solicitud rechazada con éxito');\n    } catch (error) {\n      console.error('Error al rechazar la solicitud:', error.message);\n      Alert.alert('Error', 'No se pudo rechazar la solicitud');\n    }\n  };\n  const handleSendRequest = async () => {\n    if (!username.trim()) {\n      Alert.alert('Error', 'Por favor ingresa un nombre de usuario');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        data: users,\n        error: userError\n      } = await supabase.from('users').select('id, username').eq('username', username);\n      if (userError) throw userError;\n      if (!users || users.length === 0) {\n        Alert.alert('Error', 'No se encontró ningún usuario con ese nombre');\n        setLoading(false);\n        return;\n      }\n      if (users.length > 1) {\n        Alert.alert('Error', 'Hay múltiples usuarios con ese nombre. Por favor, contacta al administrador para obtener el ID único del usuario.');\n        setLoading(false);\n        return;\n      }\n      const receiverId = users[0].id;\n      if (user?.id === receiverId) {\n        Alert.alert('Error', 'No puedes enviarte una solicitud a ti mismo');\n        setLoading(false);\n        return;\n      }\n      const {\n        data: existingFriendships,\n        error: friendsError\n      } = await supabase.from('friends').select('*').or(`user1Id.eq.${user?.id},user2Id.eq.${user?.id}`).filter('user1Id', 'in', `(${user?.id},${receiverId})`).filter('user2Id', 'in', `(${user?.id},${receiverId})`);\n      if (friendsError) throw friendsError;\n      if (existingFriendships && existingFriendships.length > 0) {\n        Alert.alert('Error', 'Ya son amigos');\n        setLoading(false);\n        return;\n      }\n      const {\n        data: existingRequests,\n        error: requestError\n      } = await supabase.from('friendship_invitations').select('*').eq('status', 'Pending').or(`and(senderId.eq.${user?.id},receiverId.eq.${receiverId}),and(senderId.eq.${receiverId},receiverId.eq.${user?.id})`);\n      if (requestError) throw requestError;\n      if (existingRequests && existingRequests.length > 0) {\n        Alert.alert('Error', 'Ya existe una solicitud pendiente entre estos usuarios');\n        setLoading(false);\n        return;\n      }\n      const {\n        error\n      } = await supabase.from('friendship_invitations').insert([{\n        senderId: user?.id,\n        receiverId\n      }]);\n      if (error) throw error;\n      await NotificationService.getInstance().notifyFriendRequest(receiverId, user?.username || 'Alguien');\n      Alert.alert('Éxito', 'Solicitud enviada con éxito');\n      setUsername('');\n    } catch (error) {\n      console.error('Error al enviar la solicitud:', error.message);\n      Alert.alert('Error', 'No se pudo enviar la solicitud');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.sendRequestContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Nombre de usuario\",\n        value: username,\n        onChangeText: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: [styles.sendButton, loading && styles.disabledButton],\n        onPress: handleSendRequest,\n        disabled: loading,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: styles.sendButtonText,\n          children: \"Enviar Solicitud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Mis Amigos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), loadingFriends ? _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this) : friends.length === 0 ? _jsxDEV(Text, {\n        style: styles.noFriendsText,\n        children: \"No tienes amigos a\\xFAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this) : _jsxDEV(FlatList, {\n        data: friends,\n        keyExtractor: item => item.id,\n        renderItem: ({\n          item\n        }) => _jsxDEV(View, {\n          style: styles.friendItem,\n          children: _jsxDEV(View, {\n            style: styles.friendInfo,\n            children: [_jsxDEV(Text, {\n              style: styles.friendUsername,\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.friendPoints,\n              children: [item.points, \" puntos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Solicitudes Pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), friendshipRequests.length === 0 ? _jsxDEV(Text, {\n        style: styles.noRequestsText,\n        children: \"No hay solicitudes pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this) : _jsxDEV(FlatList, {\n        data: friendshipRequests,\n        keyExtractor: item => item.id,\n        renderItem: ({\n          item\n        }) => _jsxDEV(View, {\n          style: styles.requestItem,\n          children: [_jsxDEV(Text, {\n            style: styles.requestText,\n            children: [item.users.username || 'Usuario desconocido', \" te ha enviado una solicitud.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: styles.requestButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.requestButton, styles.acceptButton],\n              onPress: () => handleAcceptRequest(item.id),\n              children: _jsxDEV(Text, {\n                style: styles.requestButtonText,\n                children: \"Aceptar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: [styles.requestButton, styles.rejectButton],\n              onPress: () => handleRejectRequest(item.id),\n              children: _jsxDEV(Text, {\n                style: styles.requestButtonText,\n                children: \"Rechazar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  sendRequestContainer: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  sendButton: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  sendButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  disabledButton: {\n    opacity: 0.7\n  },\n  section: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333'\n  },\n  friendItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  friendInfo: {\n    flex: 1\n  },\n  friendUsername: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  friendPoints: {\n    fontSize: 14,\n    color: '#666'\n  },\n  noFriendsText: {\n    textAlign: 'center',\n    color: '#666',\n    marginVertical: 20\n  },\n  requestItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  requestText: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: '#333'\n  },\n  requestButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  requestButton: {\n    flex: 1,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginHorizontal: 5\n  },\n  acceptButton: {\n    backgroundColor: '#4CAF50'\n  },\n  rejectButton: {\n    backgroundColor: '#f44336'\n  },\n  requestButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  noRequestsText: {\n    textAlign: 'center',\n    color: '#666',\n    marginVertical: 20\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","Alert","FlatList","ActivityIndicator","useSelector","supabase","NotificationService","jsxDEV","_jsxDEV","FriendsScreen","user","state","auth","friendshipRequests","setFriendshipRequests","friends","setFriends","username","setUsername","loading","setLoading","loadingFriends","setLoadingFriends","fetchPendingRequests","fetchFriends","id","data","error","from","select","or","uniqueFriends","Set","friendsList","reduce","acc","friendship","friend","user1Id","user2","user1","has","add","push","points","console","message","alert","eq","handleAcceptRequest","invitation","invitationError","single","insertError","rpc","senderId","receiverId","updateError","update","status","prevRequests","filter","request","handleRejectRequest","handleSendRequest","trim","users","userError","length","existingFriendships","friendsError","existingRequests","requestError","insert","getInstance","notifyFriendRequest","style","styles","container","children","sendRequestContainer","input","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","sendButton","disabledButton","onPress","disabled","color","sendButtonText","section","sectionTitle","size","noFriendsText","keyExtractor","item","renderItem","friendItem","friendInfo","friendUsername","friendPoints","noRequestsText","requestItem","requestText","requestButtons","requestButton","acceptButton","requestButtonText","rejectButton","create","flex","padding","backgroundColor","borderRadius","marginBottom","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","alignItems","fontWeight","opacity","fontSize","flexDirection","justifyContent","borderBottomWidth","borderBottomColor","textAlign","marginVertical","marginHorizontal"],"sources":["C:/Users/PC/TravelQuest/src/screens/main/FriendsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, Alert, FlatList, ActivityIndicator } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport NotificationService from '../../services/NotificationService';\r\n\r\ninterface FriendshipRequest {\r\n  id: string;\r\n  senderId: string;\r\n  receiverId: string;\r\n  status: string;\r\n  users: {\r\n    username: string;\r\n  };\r\n}\r\n\r\ninterface Friend {\r\n  id: string;\r\n  username: string;\r\n  points: number;\r\n}\r\n\r\ninterface FriendshipData {\r\n  user1Id: string;\r\n  user2Id: string;\r\n  user1: {\r\n    id: string;\r\n    username: string;\r\n    points: number;\r\n  };\r\n  user2: {\r\n    id: string;\r\n    username: string;\r\n    points: number;\r\n  };\r\n}\r\n\r\nconst FriendsScreen = () => {\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [friendshipRequests, setFriendshipRequests] = useState<FriendshipRequest[]>([]);\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [username, setUsername] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingFriends, setLoadingFriends] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchPendingRequests();\r\n    fetchFriends();\r\n  }, [user?.id]);\r\n\r\n  const fetchFriends = async () => {\r\n    try {\r\n      setLoadingFriends(true);\r\n      const { data, error } = await supabase\r\n        .from('friends')\r\n        .select(`\r\n          user1Id,\r\n          user2Id,\r\n          user1:user1Id (id, username, points),\r\n          user2:user2Id (id, username, points)\r\n        `)\r\n        .or(`user1Id.eq.${user?.id},user2Id.eq.${user?.id}`);\r\n\r\n      if (error) throw error;\r\n\r\n      // Usar un Set para eliminar duplicados basados en el ID del amigo\r\n      const uniqueFriends = new Set();\r\n      const friendsList = data?.reduce((acc: Friend[], friendship: FriendshipData) => {\r\n        const friend = friendship.user1Id === user?.id ? friendship.user2 : friendship.user1;\r\n        if (!uniqueFriends.has(friend.id)) {\r\n          uniqueFriends.add(friend.id);\r\n          acc.push({\r\n            id: friend.id,\r\n            username: friend.username,\r\n            points: friend.points\r\n          });\r\n        }\r\n        return acc;\r\n      }, []) || [];\r\n\r\n      setFriends(friendsList);\r\n    } catch (error: any) {\r\n      console.error('Error al obtener amigos:', error.message);\r\n      Alert.alert('Error', 'No se pudieron cargar los amigos');\r\n    } finally {\r\n      setLoadingFriends(false);\r\n    }\r\n  };\r\n\r\n  const fetchPendingRequests = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('friendship_invitations')\r\n        .select(`\r\n          id, senderId, created_at, receiverId, status,\r\n          users:senderId (username)\r\n        `)\r\n        .eq('receiverId', user?.id)\r\n        .eq('status', 'Pending');\r\n\r\n      if (error) throw error;\r\n      setFriendshipRequests(data || []);\r\n    } catch (error: any) {\r\n      console.error('Error al obtener solicitudes pendientes:', error.message);\r\n      Alert.alert('Error', 'No se pudieron cargar las solicitudes de amistad');\r\n    }\r\n  };\r\n\r\n  const handleAcceptRequest = async (id: string) => {\r\n    try {\r\n      // Primero obtenemos los detalles de la invitación\r\n      const { data: invitation, error: invitationError } = await supabase\r\n        .from('friendship_invitations')\r\n        .select('senderId, receiverId')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      if (invitationError) throw invitationError;\r\n\r\n      // Insertamos la amistad usando la función RPC\r\n      const { error: insertError } = await supabase\r\n        .rpc('insert_reciprocal_friendship', {\r\n          user1: invitation.senderId,\r\n          user2: invitation.receiverId\r\n        });\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      // Actualizamos el estado de la invitación\r\n      const { error: updateError } = await supabase\r\n        .from('friendship_invitations')\r\n        .update({ status: 'Accepted' })\r\n        .eq('id', id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      // Actualizamos la UI\r\n      setFriendshipRequests((prevRequests) =>\r\n        prevRequests.filter(request => request.id !== id)\r\n      );\r\n\r\n      // Actualizamos la lista de amigos\r\n      fetchFriends();\r\n\r\n      Alert.alert('Éxito', 'Solicitud aceptada con éxito');\r\n    } catch (error: any) {\r\n      console.error('Error al aceptar la solicitud:', error.message);\r\n      Alert.alert('Error', 'No se pudo aceptar la solicitud');\r\n    }\r\n  };\r\n\r\n  const handleRejectRequest = async (id: string) => {\r\n    try {\r\n      const { error: updateError } = await supabase\r\n        .from('friendship_invitations')\r\n        .update({ status: 'Rejected' })\r\n        .eq('id', id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      setFriendshipRequests((prevRequests) => prevRequests.filter(request => request.id !== id));\r\n      Alert.alert('Éxito', 'Solicitud rechazada con éxito');\r\n    } catch (error: any) {\r\n      console.error('Error al rechazar la solicitud:', error.message);\r\n      Alert.alert('Error', 'No se pudo rechazar la solicitud');\r\n    }\r\n  };\r\n\r\n  const handleSendRequest = async () => {\r\n    if (!username.trim()) {\r\n      Alert.alert('Error', 'Por favor ingresa un nombre de usuario');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Buscar todos los usuarios con ese nombre\r\n      const { data: users, error: userError } = await supabase\r\n        .from('users')\r\n        .select('id, username')\r\n        .eq('username', username);\r\n\r\n      if (userError) throw userError;\r\n\r\n      if (!users || users.length === 0) {\r\n        Alert.alert('Error', 'No se encontró ningún usuario con ese nombre');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (users.length > 1) {\r\n        Alert.alert('Error', 'Hay múltiples usuarios con ese nombre. Por favor, contacta al administrador para obtener el ID único del usuario.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const receiverId = users[0].id;\r\n\r\n      if (user?.id === receiverId) {\r\n        Alert.alert('Error', 'No puedes enviarte una solicitud a ti mismo');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Verificar si ya son amigos (en cualquier dirección)\r\n      const { data: existingFriendships, error: friendsError } = await supabase\r\n        .from('friends')\r\n        .select('*')\r\n        .or(`user1Id.eq.${user?.id},user2Id.eq.${user?.id}`)\r\n        .filter('user1Id', 'in', `(${user?.id},${receiverId})`)\r\n        .filter('user2Id', 'in', `(${user?.id},${receiverId})`);\r\n\r\n      if (friendsError) throw friendsError;\r\n\r\n      if (existingFriendships && existingFriendships.length > 0) {\r\n        Alert.alert('Error', 'Ya son amigos');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Verificar si ya existe una solicitud pendiente\r\n      const { data: existingRequests, error: requestError } = await supabase\r\n        .from('friendship_invitations')\r\n        .select('*')\r\n        .eq('status', 'Pending')\r\n        .or(`and(senderId.eq.${user?.id},receiverId.eq.${receiverId}),and(senderId.eq.${receiverId},receiverId.eq.${user?.id})`);\r\n\r\n      if (requestError) throw requestError;\r\n\r\n      if (existingRequests && existingRequests.length > 0) {\r\n        Alert.alert('Error', 'Ya existe una solicitud pendiente entre estos usuarios');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from('friendship_invitations')\r\n        .insert([{ senderId: user?.id, receiverId }]);\r\n\r\n      if (error) throw error;\r\n\r\n      // Enviar notificación al receptor\r\n      await NotificationService.getInstance().notifyFriendRequest(receiverId, user?.username || 'Alguien');\r\n\r\n      Alert.alert('Éxito', 'Solicitud enviada con éxito');\r\n      setUsername('');\r\n    } catch (error: any) {\r\n      console.error('Error al enviar la solicitud:', error.message);\r\n      Alert.alert('Error', 'No se pudo enviar la solicitud');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.sendRequestContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Nombre de usuario\"\r\n          value={username}\r\n          onChangeText={setUsername}\r\n        />\r\n        <TouchableOpacity\r\n          style={[styles.sendButton, loading && styles.disabledButton]}\r\n          onPress={handleSendRequest}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.sendButtonText}>Enviar Solicitud</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Mis Amigos</Text>\r\n        {loadingFriends ? (\r\n          <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        ) : friends.length === 0 ? (\r\n          <Text style={styles.noFriendsText}>No tienes amigos aún</Text>\r\n        ) : (\r\n          <FlatList\r\n            data={friends}\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.friendItem}>\r\n                <View style={styles.friendInfo}>\r\n                  <Text style={styles.friendUsername}>{item.username}</Text>\r\n                  <Text style={styles.friendPoints}>{item.points} puntos</Text>\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Solicitudes Pendientes</Text>\r\n        {friendshipRequests.length === 0 ? (\r\n          <Text style={styles.noRequestsText}>No hay solicitudes pendientes</Text>\r\n        ) : (\r\n          <FlatList\r\n            data={friendshipRequests}\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.requestItem}>\r\n                <Text style={styles.requestText}>\r\n                  {item.users.username || 'Usuario desconocido'} te ha enviado una solicitud.\r\n                </Text>\r\n                <View style={styles.requestButtons}>\r\n                  <TouchableOpacity\r\n                    style={[styles.requestButton, styles.acceptButton]}\r\n                    onPress={() => handleAcceptRequest(item.id)}\r\n                  >\r\n                    <Text style={styles.requestButtonText}>Aceptar</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={[styles.requestButton, styles.rejectButton]}\r\n                    onPress={() => handleRejectRequest(item.id)}\r\n                  >\r\n                    <Text style={styles.requestButtonText}>Rechazar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  sendRequestContainer: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 3,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  sendButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  disabledButton: {\r\n    opacity: 0.7,\r\n  },\r\n  section: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 3,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#333',\r\n  },\r\n  friendItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  friendInfo: {\r\n    flex: 1,\r\n  },\r\n  friendUsername: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  friendPoints: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  noFriendsText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    marginVertical: 20,\r\n  },\r\n  requestItem: {\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  requestText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    color: '#333',\r\n  },\r\n  requestButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  requestButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n  },\r\n  acceptButton: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  rejectButton: {\r\n    backgroundColor: '#f44336',\r\n  },\r\n  requestButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  noRequestsText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    marginVertical: 20,\r\n  },\r\n});\r\n\r\nexport default FriendsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}