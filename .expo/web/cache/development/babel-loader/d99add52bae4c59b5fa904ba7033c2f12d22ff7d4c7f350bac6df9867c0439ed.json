{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\App.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './src/features/store';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { getCloudinaryConfigInfo } from './src/services/cloudinaryService';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Notifications from 'expo-notifications';\nimport NotificationService from './src/services/NotificationService';\nimport { navigationRef } from './src/navigation/RootNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = Object.assign({}, DefaultTheme, {\n  colors: Object.assign({}, DefaultTheme.colors, {\n    primary: '#4CAF50',\n    accent: '#03A9F4'\n  })\n});\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true\n  })\n});\nconst App = () => {\n  const [isReady, setIsReady] = useState(false);\n  const [error, setError] = useState(null);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n          console.log('Notificación recibida:', notification);\n        });\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n          console.log('Usuario interactuó con la notificación:', response);\n        });\n        await getCloudinaryConfigInfo();\n        setIsReady(true);\n      } catch (err) {\n        console.error('Error inicializando la app:', err);\n        setError('Error al inicializar la aplicación');\n      }\n    };\n    initializeApp();\n    return () => {\n      if (notificationListener.current) {\n        notificationListener.current.remove();\n      }\n      if (responseListener.current) {\n        responseListener.current.remove();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const foregroundSubscription = Notifications.addNotificationReceivedListener(notification => {\n      console.log('Notificación recibida en primer plano:', notification);\n    });\n    const backgroundSubscription = Notifications.addNotificationResponseReceivedListener(response => {\n      const data = response.notification.request.content.data;\n      if (data?.screen) {\n        navigationRef.current?.navigate(data.screen);\n      }\n      if (response.notification.request.identifier) {\n        NotificationService.getInstance().markNotificationAsRead(response.notification.request.identifier);\n      }\n    });\n    return () => {\n      foregroundSubscription.remove();\n      backgroundSubscription.remove();\n    };\n  }, []);\n  if (error) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isReady) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(PersistGate, {\n      loading: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }, this),\n      persistor: persistor,\n      children: _jsxDEV(PaperProvider, {\n        theme: theme,\n        children: _jsxDEV(SafeAreaProvider, {\n          children: [_jsxDEV(StatusBar, {\n            style: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), _jsxDEV(NavigationContainer, {\n            ref: navigationRef,\n            children: _jsxDEV(AppNavigator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","PersistGate","Provider","store","persistor","NavigationContainer","AppNavigator","ActivityIndicator","View","Text","PaperProvider","DefaultTheme","SafeAreaProvider","getCloudinaryConfigInfo","StatusBar","Notifications","NotificationService","navigationRef","jsxDEV","_jsxDEV","theme","Object","assign","colors","primary","accent","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","isReady","setIsReady","error","setError","notificationListener","responseListener","initializeApp","current","addNotificationReceivedListener","notification","console","log","addNotificationResponseReceivedListener","response","err","remove","foregroundSubscription","backgroundSubscription","data","request","content","screen","navigate","identifier","getInstance","markNotificationAsRead","style","flex","justifyContent","alignItems","children","color","fileName","_jsxFileName","lineNumber","columnNumber","size","loading","ref"],"sources":["C:/Users/PC/TravelQuest/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './src/features/store';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { ActivityIndicator, View, Text } from 'react-native';\nimport { supabase } from './src/services/supabase';\nimport { setAuthState, setUser, logout } from './src/features/authSlice';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { getCloudinaryConfigInfo } from './src/services/cloudinaryService';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Notifications from 'expo-notifications';\nimport NotificationService from './src/services/NotificationService';\nimport { navigationRef } from './src/navigation/RootNavigation';\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#4CAF50',\n    accent: '#03A9F4',\n  },\n};\n\n// Configurar el comportamiento de las notificaciones\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const notificationListener = useRef<any>();\n  const responseListener = useRef<any>();\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Configurar listeners de notificaciones\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n          console.log('Notificación recibida:', notification);\n        });\n\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n          console.log('Usuario interactuó con la notificación:', response);\n        });\n\n        // Inicializar otros servicios\n        await getCloudinaryConfigInfo();\n        setIsReady(true);\n      } catch (err) {\n        console.error('Error inicializando la app:', err);\n        setError('Error al inicializar la aplicación');\n      }\n    };\n\n    initializeApp();\n\n    return () => {\n      if (notificationListener.current) {\n        notificationListener.current.remove();\n      }\n      if (responseListener.current) {\n        responseListener.current.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Configurar el manejo de notificaciones cuando la app está en primer plano\n    const foregroundSubscription = Notifications.addNotificationReceivedListener(notification => {\n      console.log('Notificación recibida en primer plano:', notification);\n    });\n\n    // Configurar el manejo de notificaciones cuando se presionan\n    const backgroundSubscription = Notifications.addNotificationResponseReceivedListener(response => {\n      const data = response.notification.request.content.data;\n\n      // Si la notificación tiene un screen definido, navegar a él\n      if (data?.screen) {\n        navigationRef.current?.navigate(data.screen);\n      }\n\n      // Si la notificación tiene un ID, marcarla como leída\n      if (response.notification.request.identifier) {\n        NotificationService.getInstance().markNotificationAsRead(response.notification.request.identifier);\n      }\n    });\n\n    return () => {\n      foregroundSubscription.remove();\n      backgroundSubscription.remove();\n    };\n  }, []);\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text style={{ color: 'red' }}>{error}</Text>\n      </View>\n    );\n  }\n\n  if (!isReady) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<ActivityIndicator size=\"large\" color={theme.colors.primary} />} persistor={persistor}>\n        <PaperProvider theme={theme}>\n          <SafeAreaProvider>\n            <StatusBar style=\"auto\" />\n            <NavigationContainer ref={navigationRef}>\n              <AppNavigator />\n            </NavigationContainer>\n          </SafeAreaProvider>\n        </PaperProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,EAAEC,SAAS,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,YAAY,MAAM,+BAA+B;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAIzD,SAASP,QAAQ,IAAIQ,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAC5E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,uBAAuB,QAAQ,kCAAkC;AAC1E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAAC,MAAA,CAAAC,MAAA,KACNX,YAAY;EACfY,MAAM,EAAAF,MAAA,CAAAC,MAAA,KACDX,YAAY,CAACY,MAAM;IACtBC,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE;EAAS;AAClB,EACF;AAGDV,aAAa,CAACW,sBAAsB,CAAC;EACnCC,kBAAkB,EAAE,MAAAA,CAAA,MAAa;IAC/BC,eAAe,EAAE,IAAI;IACrBC,eAAe,EAAE,IAAI;IACrBC,cAAc,EAAE;EAClB,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMqC,oBAAoB,GAAGpC,MAAM,CAAM,CAAC;EAC1C,MAAMqC,gBAAgB,GAAGrC,MAAM,CAAM,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACd,MAAMwC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAEFF,oBAAoB,CAACG,OAAO,GAAGxB,aAAa,CAACyB,+BAA+B,CAACC,YAAY,IAAI;UAC3FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,YAAY,CAAC;QACrD,CAAC,CAAC;QAEFJ,gBAAgB,CAACE,OAAO,GAAGxB,aAAa,CAAC6B,uCAAuC,CAACC,QAAQ,IAAI;UAC3FH,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEE,QAAQ,CAAC;QAClE,CAAC,CAAC;QAGF,MAAMhC,uBAAuB,CAAC,CAAC;QAC/BoB,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZJ,OAAO,CAACR,KAAK,CAAC,6BAA6B,EAAEY,GAAG,CAAC;QACjDX,QAAQ,CAAC,oCAAoC,CAAC;MAChD;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;IAEf,OAAO,MAAM;MACX,IAAIF,oBAAoB,CAACG,OAAO,EAAE;QAChCH,oBAAoB,CAACG,OAAO,CAACQ,MAAM,CAAC,CAAC;MACvC;MACA,IAAIV,gBAAgB,CAACE,OAAO,EAAE;QAC5BF,gBAAgB,CAACE,OAAO,CAACQ,MAAM,CAAC,CAAC;MACnC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENjD,SAAS,CAAC,MAAM;IAEd,MAAMkD,sBAAsB,GAAGjC,aAAa,CAACyB,+BAA+B,CAACC,YAAY,IAAI;MAC3FC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,YAAY,CAAC;IACrE,CAAC,CAAC;IAGF,MAAMQ,sBAAsB,GAAGlC,aAAa,CAAC6B,uCAAuC,CAACC,QAAQ,IAAI;MAC/F,MAAMK,IAAI,GAAGL,QAAQ,CAACJ,YAAY,CAACU,OAAO,CAACC,OAAO,CAACF,IAAI;MAGvD,IAAIA,IAAI,EAAEG,MAAM,EAAE;QAChBpC,aAAa,CAACsB,OAAO,EAAEe,QAAQ,CAACJ,IAAI,CAACG,MAAM,CAAC;MAC9C;MAGA,IAAIR,QAAQ,CAACJ,YAAY,CAACU,OAAO,CAACI,UAAU,EAAE;QAC5CvC,mBAAmB,CAACwC,WAAW,CAAC,CAAC,CAACC,sBAAsB,CAACZ,QAAQ,CAACJ,YAAY,CAACU,OAAO,CAACI,UAAU,CAAC;MACpG;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXP,sBAAsB,CAACD,MAAM,CAAC,CAAC;MAC/BE,sBAAsB,CAACF,MAAM,CAAC,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIb,KAAK,EAAE;IACT,OACEf,OAAA,CAACX,IAAI;MAACkD,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvE3C,OAAA,CAACV,IAAI;QAACiD,KAAK,EAAE;UAAEK,KAAK,EAAE;QAAM,CAAE;QAAAD,QAAA,EAAE5B;MAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAEX;EAEA,IAAI,CAACnC,OAAO,EAAE;IACZ,OACEb,OAAA,CAACX,IAAI;MAACkD,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvE3C,OAAA,CAACZ,iBAAiB;QAAC6D,IAAI,EAAC,OAAO;QAACL,KAAK,EAAE3C,KAAK,CAACG,MAAM,CAACC;MAAQ;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAEX;EAEA,OACEhD,OAAA,CAACjB,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAA2D,QAAA,EACrB3C,OAAA,CAAClB,WAAW;MAACoE,OAAO,EAAElD,OAAA,CAACZ,iBAAiB;QAAC6D,IAAI,EAAC,OAAO;QAACL,KAAK,EAAE3C,KAAK,CAACG,MAAM,CAACC;MAAQ;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAC/D,SAAS,EAAEA,SAAU;MAAA0D,QAAA,EAC1G3C,OAAA,CAACT,aAAa;QAACU,KAAK,EAAEA,KAAM;QAAA0C,QAAA,EAC1B3C,OAAA,CAACP,gBAAgB;UAAAkD,QAAA,GACf3C,OAAA,CAACL,SAAS;YAAC4C,KAAK,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC1BhD,OAAA,CAACd,mBAAmB;YAACiE,GAAG,EAAErD,aAAc;YAAA6C,QAAA,EACtC3C,OAAA,CAACb,YAAY;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEf,CAAC;AAED,eAAepC,GAAG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}