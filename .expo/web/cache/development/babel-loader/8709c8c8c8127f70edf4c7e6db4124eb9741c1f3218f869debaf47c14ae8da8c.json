{"ast":null,"code":"import { supabase } from './supabase';\nimport { store } from '../features/store';\nimport { setUser, setAuthState } from '../features/auth/authSlice';\nexport const logout = async () => {\n  try {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n    store.dispatch(setUser(null));\n    store.dispatch(setAuthState('unauthenticated'));\n    return true;\n  } catch (error) {\n    console.error('Error al cerrar sesi贸n:', error);\n    return false;\n  }\n};\nexport const ensureValidSession = async () => {\n  try {\n    const {\n      data: {\n        session\n      },\n      error\n    } = await supabase.auth.getSession();\n    if (error) throw error;\n    if (session) {\n      store.dispatch(setUser({\n        id: session.user.id,\n        email: session.user.email\n      }));\n      store.dispatch(setAuthState('authenticated'));\n      return true;\n    }\n    store.dispatch(setUser(null));\n    store.dispatch(setAuthState('unauthenticated'));\n    return false;\n  } catch (error) {\n    console.error('Error al verificar la sesi贸n:', error);\n    store.dispatch(setUser(null));\n    store.dispatch(setAuthState('unauthenticated'));\n    return false;\n  }\n};","map":{"version":3,"names":["supabase","store","setUser","setAuthState","logout","error","auth","signOut","dispatch","console","ensureValidSession","data","session","getSession","id","user","email"],"sources":["C:/Users/Admin/TravelQuest/src/services/auth.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport { store } from '../features/store';\r\nimport { setUser, setAuthState } from '../features/auth/authSlice';\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) throw error;\r\n    \r\n    store.dispatch(setUser(null));\r\n    store.dispatch(setAuthState('unauthenticated'));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al cerrar sesi贸n:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const ensureValidSession = async () => {\r\n  try {\r\n    const { data: { session }, error } = await supabase.auth.getSession();\r\n    \r\n    if (error) throw error;\r\n    \r\n    if (session) {\r\n      store.dispatch(setUser({\r\n        id: session.user.id,\r\n        email: session.user.email,\r\n      }));\r\n      store.dispatch(setAuthState('authenticated'));\r\n      return true;\r\n    }\r\n    \r\n    store.dispatch(setUser(null));\r\n    store.dispatch(setAuthState('unauthenticated'));\r\n    return false;\r\n  } catch (error) {\r\n    console.error('Error al verificar la sesi贸n:', error);\r\n    store.dispatch(setUser(null));\r\n    store.dispatch(setAuthState('unauthenticated'));\r\n    return false;\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,OAAO,EAAEC,YAAY,QAAQ,4BAA4B;AAElE,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC;IAC/C,IAAIF,KAAK,EAAE,MAAMA,KAAK;IAEtBJ,KAAK,CAACO,QAAQ,CAACN,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7BD,KAAK,CAACO,QAAQ,CAACL,YAAY,CAAC,iBAAiB,CAAC,CAAC;IAC/C,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAM;MAAEC,IAAI,EAAE;QAAEC;MAAQ,CAAC;MAAEP;IAAM,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,CAACO,UAAU,CAAC,CAAC;IAErE,IAAIR,KAAK,EAAE,MAAMA,KAAK;IAEtB,IAAIO,OAAO,EAAE;MACXX,KAAK,CAACO,QAAQ,CAACN,OAAO,CAAC;QACrBY,EAAE,EAAEF,OAAO,CAACG,IAAI,CAACD,EAAE;QACnBE,KAAK,EAAEJ,OAAO,CAACG,IAAI,CAACC;MACtB,CAAC,CAAC,CAAC;MACHf,KAAK,CAACO,QAAQ,CAACL,YAAY,CAAC,eAAe,CAAC,CAAC;MAC7C,OAAO,IAAI;IACb;IAEAF,KAAK,CAACO,QAAQ,CAACN,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7BD,KAAK,CAACO,QAAQ,CAACL,YAAY,CAAC,iBAAiB,CAAC,CAAC;IAC/C,OAAO,KAAK;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrDJ,KAAK,CAACO,QAAQ,CAACN,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7BD,KAAK,CAACO,QAAQ,CAACL,YAAY,CAAC,iBAAiB,CAAC,CAAC;IAC/C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}