{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        title: 'Mapa',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(Ionicons, {\n            name: focused ? 'map' : 'map-outline',\n            size: 24,\n            color: focused ? 'green' : 'gray'\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Missions\",\n      component: MissionsScreen,\n      options: {\n        title: 'Misiones',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(Ionicons, {\n            name: focused ? 'flag' : 'flag-outline',\n            size: 24,\n            color: focused ? 'green' : 'gray'\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        title: 'Diario',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(Ionicons, {\n            name: focused ? 'book' : 'book-outline',\n            size: 24,\n            color: focused ? 'green' : 'gray'\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(Ionicons, {\n            name: focused ? 'person' : 'person-outline',\n            size: 24,\n            color: focused ? 'green' : 'gray'\n          });\n        }\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  console.log('Token:', token);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabs\n        })\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","Ionicons","LoginScreen","RegisterScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","Navigator","children","Screen","name","component","options","title","tabBarIcon","_ref","focused","size","color","_ref2","_ref3","_ref4","AppNavigator","_useSelector","state","auth","token","console","log","screenOptions","headerShown"],"sources":["C:/Users/Guacter/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Importar pantallas (las crearemos despuÃ©s)\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen \r\n        name=\"Map\" \r\n        component={MapScreen}\r\n        options={{\r\n          title: 'Mapa',\r\n          tabBarIcon: ({ focused}) => (\r\n            <Ionicons name={focused ? 'map' : 'map-outline'} size={24} color={focused ? 'green' : 'gray'} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Missions\" \r\n        component={MissionsScreen}\r\n        options={{\r\n          title: 'Misiones',\r\n          tabBarIcon: ({ focused}) => (\r\n            <Ionicons name={focused ? 'flag' : 'flag-outline'}  size={24} color={focused ? 'green' : 'gray'} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Journal\" \r\n        component={JournalScreen}\r\n        options={{\r\n          title: 'Diario',\r\n          tabBarIcon: ({ focused}) => (\r\n            <Ionicons name={focused ? 'book' : 'book-outline'}  size={24} color={focused ? 'green' : 'gray'} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Perfil',\r\n          tabBarIcon: ({ focused}) => (\r\n            <Ionicons name={focused ? 'person' : 'person-outline'}  size={24} color={focused ? 'green' : 'gray'} />\r\n          )\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n  console.log('Token:', token);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainTabs} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}