{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { supabase } from \"./supabase\";\nexport var getMissionsByCityAndDuration = function () {\n  var _ref = _asyncToGenerator(function* (city, duration) {\n    try {\n      var _yield$supabase$from$ = yield supabase.from('missions').select('*').eq('city', city).lte('duration', duration),\n        data = _yield$supabase$from$.data,\n        error = _yield$supabase$from$.error;\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      throw error;\n    }\n  });\n  return function getMissionsByCityAndDuration(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["supabase","getMissionsByCityAndDuration","_ref","_asyncToGenerator","city","duration","_yield$supabase$from$","from","select","eq","lte","data","error","console","_x","_x2","apply","arguments"],"sources":["C:/Users/migue/TravelQuest/src/services/missionService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\nexport const getMissionsByCityAndDuration = async (city: string, duration: number) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('missions')\r\n      .select('*')\r\n      .eq('city', city)\r\n      .lte('duration', duration);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching missions:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ;AAEjB,OAAO,IAAMC,4BAA4B;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAY,EAAEC,QAAgB,EAAK;IACpF,IAAI;MACF,IAAAC,qBAAA,SAA8BN,QAAQ,CACnCO,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,MAAM,EAAEL,IAAI,CAAC,CAChBM,GAAG,CAAC,UAAU,EAAEL,QAAQ,CAAC;QAJpBM,IAAI,GAAAL,qBAAA,CAAJK,IAAI;QAAEC,KAAK,GAAAN,qBAAA,CAALM,KAAK;MAMnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAdYX,4BAA4BA,CAAAa,EAAA,EAAAC,GAAA;IAAA,OAAAb,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GAcxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}