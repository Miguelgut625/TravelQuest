{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  missions: [],\n  loading: false,\n  error: null\n};\nconst journeySlice = createSlice({\n  name: 'journey',\n  initialState,\n  reducers: {\n    setMissions: (state, action) => {\n      state.missions = action.payload;\n    },\n    completeMission: (state, action) => {\n      const mission = state.missions.find(m => m.id === action.payload);\n      if (mission) {\n        mission.completed = true;\n      }\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setMissions,\n  completeMission,\n  setLoading,\n  setError\n} = journeySlice.actions;\nexport default journeySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","missions","loading","error","journeySlice","name","reducers","setMissions","state","action","payload","completeMission","mission","find","m","id","completed","setLoading","setError","actions","reducer"],"sources":["C:/Users/migue/miguel/TravelQuest/src/features/journey/journeySlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { JourneyMission } from '../../types/journey';\n\ninterface JourneyState {\n  missions: JourneyMission[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: JourneyState = {\n  missions: [],\n  loading: false,\n  error: null,\n};\n\nconst journeySlice = createSlice({\n  name: 'journey',\n  initialState,\n  reducers: {\n    setMissions: (state, action: PayloadAction<JourneyMission[]>) => {\n      state.missions = action.payload;\n    },\n    completeMission: (state, action: PayloadAction<string>) => {\n      const mission = state.missions.find(m => m.id === action.payload);\n      if (mission) {\n        mission.completed = true;\n      }\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action: PayloadAction<string | null>) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { setMissions, completeMission, setLoading, setError } = journeySlice.actions;\nexport default journeySlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,MAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAuC,KAAK;MAC/DD,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,eAAe,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MACzD,MAAMG,OAAO,GAAGJ,KAAK,CAACP,QAAQ,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;MACjE,IAAIE,OAAO,EAAE;QACXA,OAAO,CAACI,SAAS,GAAG,IAAI;MAC1B;IACF,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDQ,QAAQ,EAAEA,CAACV,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI,eAAe;EAAEM,UAAU;EAAEC;AAAS,CAAC,GAAGd,YAAY,CAACe,OAAO;AAC1F,eAAef,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}