{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { supabase } from \"../../services/supabase\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FriendsScreen = function FriendsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    friends = _useState2[0],\n    setFriends = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  useEffect(function () {\n    var fetchFriends = function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (!user) {\n          setLoading(false);\n          return;\n        }\n        try {\n          setLoading(true);\n          var _yield$supabase$from$ = yield supabase.from('friends').select('user2Id').eq('user1Id', user.id),\n            friendData = _yield$supabase$from$.data,\n            friendError = _yield$supabase$from$.error;\n          if (friendError) throw friendError;\n          var friendsDetails = yield Promise.all(friendData.map(function () {\n            var _ref2 = _asyncToGenerator(function* (friend) {\n              var _yield$supabase$from$2 = yield supabase.from('users').select('username, points').eq('id', friend.user2Id).single(),\n                userData = _yield$supabase$from$2.data,\n                userError = _yield$supabase$from$2.error;\n              if (userError) {\n                console.error('Error fetching user data:', userError);\n                return null;\n              }\n              return {\n                user2Id: friend.user2Id,\n                username: userData.username,\n                points: userData.points\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n          setFriends(friendsDetails.filter(function (friend) {\n            return friend !== null;\n          }));\n        } catch (error) {\n          console.error('Error fetching friends:', error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchFriends() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchFriends();\n  }, [user]);\n  if (loading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lista de Amigos\"\n    }), _jsx(FlatList, {\n      data: friends,\n      keyExtractor: function keyExtractor(item) {\n        return item.user2Id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxs(View, {\n          style: styles.friendItem,\n          children: [_jsx(Text, {\n            style: styles.friendName,\n            children: item.username\n          }), _jsxs(Text, {\n            style: styles.friendPoints,\n            children: [\"Puntos: \", item.points]\n          })]\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  friendItem: {\n    padding: 15,\n    marginVertical: 8,\n    borderRadius: 8,\n    backgroundColor: '#ffffff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  friendName: {\n    fontSize: 18,\n    fontWeight: '600'\n  },\n  friendPoints: {\n    fontSize: 16,\n    color: '#666'\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","ActivityIndicator","supabase","useSelector","jsx","_jsx","jsxs","_jsxs","FriendsScreen","_useState","_useState2","_slicedToArray","friends","setFriends","_useState3","_useState4","loading","setLoading","user","state","auth","fetchFriends","_ref","_asyncToGenerator","_yield$supabase$from$","from","select","eq","id","friendData","data","friendError","error","friendsDetails","Promise","all","map","_ref2","friend","_yield$supabase$from$2","user2Id","single","userData","userError","console","username","points","_x","apply","arguments","filter","style","styles","container","children","size","color","title","keyExtractor","item","toString","renderItem","_ref3","friendItem","friendName","friendPoints","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","marginVertical","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/migue/TravelQuest/src/screens/main/FriendsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator } from 'react-native';\r\nimport { supabase } from '../../services/supabase'; // Asegúrate de que la ruta sea correcta\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\n\r\ninterface Friend {\r\n  user2Id: string; // ID del amigo\r\n  username: string; // Nombre del amigo\r\n  points: number; // Puntos del amigo\r\n}\r\n\r\nconst FriendsScreen = () => {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state: RootState) => state.auth.user); // Obtener el usuario completo\r\n\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      if (!user) {\r\n        setLoading(false);\r\n        return; // Si no hay usuario, no hacemos nada\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const { data: friendData, error: friendError } = await supabase\r\n          .from('friends')\r\n          .select('user2Id')\r\n          .eq('user1Id', user.id); // Usar el ID del usuario\r\n\r\n        if (friendError) throw friendError;\r\n\r\n        // Obtener detalles de cada amigo\r\n        const friendsDetails = await Promise.all(\r\n          friendData.map(async (friend: { user2Id: string }) => { // Definir el tipo de friend\r\n            const { data: userData, error: userError } = await supabase\r\n              .from('users')\r\n              .select('username, points')\r\n              .eq('id', friend.user2Id) // Asegúrate de que el ID sea correcto\r\n              .single();\r\n\r\n            if (userError) {\r\n              console.error('Error fetching user data:', userError);\r\n              return null; // Manejar el error\r\n            }\r\n\r\n            return {\r\n              user2Id: friend.user2Id,\r\n              username: userData.username,\r\n              points: userData.points,\r\n            };\r\n          })\r\n        );\r\n\r\n        // Filtrar los amigos que no se pudieron obtener\r\n        setFriends(friendsDetails.filter((friend) => friend !== null));\r\n      } catch (error) {\r\n        console.error('Error fetching friends:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFriends();\r\n  }, [user]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Lista de Amigos</Text>\r\n      <FlatList\r\n        data={friends}\r\n        keyExtractor={(item) => item.user2Id.toString()} // Asegúrate de que user2Id sea único\r\n        renderItem={({ item }) => (\r\n          <View style={styles.friendItem}>\r\n            <Text style={styles.friendName}>{item.username}</Text>\r\n            <Text style={styles.friendPoints}>Puntos: {item.points}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f9f9f9', // Color de fondo\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  friendItem: {\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    borderRadius: 8,\r\n    backgroundColor: '#ffffff', // Color de fondo de cada amigo\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.41,\r\n    elevation: 2, // Sombra para Android\r\n  },\r\n  friendName: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  friendPoints: {\r\n    fontSize: 16,\r\n    color: '#666', // Color gris para los puntos\r\n  },\r\n});\r\n\r\nexport default FriendsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}