{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TravelQuest\\\\src\\\\screens\\\\main\\\\MissionsScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from '../../services/supabase';\nimport { completeMission } from '../../services/pointsService';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"react-native-paper/lib/module/core/theming\";\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\nimport ImageUploadModal from '../../components/ImageUploadModal';\nimport { setRefreshJournal } from '../../features/journalSlice';\nimport { createJournalEntry } from '../../services/journalService';\nimport MissionCompletedModal from '../../components/MissionCompletedModal';\nimport CompletingMissionModal from '../../components/CompletingMissionModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTimeRemaining = endDate => {\n  const now = new Date();\n  const end = new Date(endDate);\n  const diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nconst MissionCard = ({\n  mission,\n  onComplete,\n  onShare\n}) => {\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const timeRemaining = getTimeRemaining(mission.end_date);\n  const isExpired = timeRemaining.isExpired && !mission.completed;\n  const [completingMission, setCompletingMission] = useState(false);\n  const handleMissionPress = () => {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n  const handleUploadSuccess = imageUrl => {\n    setShowUploadModal(false);\n    onComplete(imageUrl);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TouchableOpacity, {\n      style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n      onPress: handleMissionPress,\n      disabled: mission.completed || isExpired || completingMission,\n      children: [_jsxDEV(View, {\n        style: styles.cardHeader,\n        children: [_jsxDEV(Text, {\n          style: styles.cardTitle,\n          children: mission.challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.badgeContainer,\n          children: [_jsxDEV(Text, {\n            style: [styles.badge, {\n              backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000'\n            }],\n            children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: [styles.timeRemaining, isExpired && styles.expiredTime],\n            children: timeRemaining.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.cardDescription,\n        children: mission.challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.cardFooter,\n        children: [_jsxDEV(Text, {\n          style: styles.difficulty,\n          children: [\"Dificultad: \", mission.challenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.points,\n          children: [mission.challenge.points, \" puntos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), !mission.completed && !timeRemaining.isExpired && _jsxDEV(TouchableOpacity, {\n          onPress: onShare,\n          style: styles.shareIcon,\n          children: _jsxDEV(Ionicons, {\n            name: \"share-social\",\n            size: 20,\n            color: \"#4CAF50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), completingMission && _jsxDEV(View, {\n        style: styles.loadingOverlay,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FFFFFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: \"Completando misi\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), _jsxDEV(ImageUploadModal, {\n      visible: showUploadModal,\n      missionId: mission.id,\n      missionTitle: mission.challenge.title,\n      onClose: () => setShowUploadModal(false),\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nconst CityCard = ({\n  cityName,\n  totalMissions,\n  completedMissions,\n  expiredMissions,\n  onPress\n}) => _jsxDEV(TouchableOpacity, {\n  style: styles.cityCard,\n  onPress: onPress,\n  children: [_jsxDEV(View, {\n    style: styles.cityCardContent,\n    children: [_jsxDEV(View, {\n      style: styles.cityInfo,\n      children: [_jsxDEV(Text, {\n        style: styles.cityName,\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.missionCount,\n        children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), _jsxDEV(Ionicons, {\n      name: \"chevron-forward\",\n      size: 24,\n      color: \"#666\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this), _jsxDEV(View, {\n    style: styles.progressBar,\n    children: _jsxDEV(View, {\n      style: [styles.progressFill, {\n        width: `${completedMissions / totalMissions * 100}%`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 210,\n  columnNumber: 3\n}, this);\nconst FriendSelectionModal = ({\n  visible,\n  onClose,\n  onSelect\n}) => {\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    if (visible) {\n      const fetchFriends = async () => {\n        if (!user) {\n          setLoading(false);\n          return;\n        }\n        try {\n          setLoading(true);\n          const {\n            data: friendData,\n            error\n          } = await supabase.from('friends').select('user2Id').eq('user1Id', user.id);\n          if (error) throw error;\n          const friendDetails = await Promise.all(friendData.map(async friend => {\n            const {\n              data: userData,\n              error: userError\n            } = await supabase.from('users').select('username, points').eq('id', friend.user2Id).single();\n            if (userError) return null;\n            return {\n              user2Id: friend.user2Id,\n              username: userData.username,\n              points: userData.points\n            };\n          }));\n          setFriends(friendDetails.filter(f => f !== null));\n        } catch (error) {\n          console.error('Error fetching friends:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchFriends();\n    }\n  }, [visible, user]);\n  return _jsxDEV(Modal, {\n    visible: visible,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    transparent: true,\n    children: _jsxDEV(View, {\n      style: modalStyles.modalOverlay,\n      children: _jsxDEV(View, {\n        style: modalStyles.modalContent,\n        children: [_jsxDEV(Text, {\n          style: modalStyles.modalTitle,\n          children: \"Selecciona un amigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), loading ? _jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this) : _jsxDEV(FlatList, {\n          data: friends,\n          keyExtractor: item => item.user2Id,\n          renderItem: ({\n            item\n          }) => _jsxDEV(TouchableOpacity, {\n            style: modalStyles.friendItem,\n            onPress: () => onSelect(item),\n            children: [_jsxDEV(Text, {\n              style: modalStyles.friendName,\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: modalStyles.friendPoints,\n              children: [\"Puntos: \", item.points]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: modalStyles.cancelButton,\n          onPress: onClose,\n          children: _jsxDEV(Text, {\n            style: modalStyles.cancelButtonText,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  friendItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  friendName: {\n    fontSize: 16\n  },\n  friendPoints: {\n    fontSize: 14,\n    color: '#666'\n  },\n  cancelButton: {\n    marginTop: 10,\n    backgroundColor: '#f44336',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nconst MissionsScreenComponent = ({\n  route,\n  navigation\n}) => {\n  const {\n    journeyId\n  } = route.params || {};\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [missions, setMissions] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [completingMission, setCompletingMission] = useState(false);\n  const [missionCompleted, setMissionCompleted] = useState(false);\n  const [completedMissionInfo, setCompletedMissionInfo] = useState(null);\n  const [userPoints, setUserPoints] = useState(0);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [showShareModal, setShowShareModal] = useState(false);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const fetchMissions = async () => {\n    if (!user?.id) {\n      setError('Usuario no autenticado');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data: journeys,\n        error: journeysError\n      } = await supabase.from('journeys').select(`\n          id,\n          description,\n          created_at,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `).eq('userId', user.id).order('created_at', {\n        ascending: false\n      });\n      if (journeysError) throw journeysError;\n      if (!journeys || journeys.length === 0) {\n        setError('No hay viajes disponibles');\n        setLoading(false);\n        return;\n      }\n      const allMissions = journeys.flatMap(journey => journey.journeys_missions.map(jm => ({\n        id: jm.id,\n        completed: jm.completed,\n        cityName: journey.cities?.name || 'Ciudad Desconocida',\n        end_date: jm.end_date,\n        challenge: {\n          title: jm.challenges.title,\n          description: jm.challenges.description,\n          difficulty: jm.challenges.difficulty,\n          points: jm.challenges.points\n        }\n      })));\n      const missionsByCity = {};\n      allMissions.forEach(mission => {\n        if (!missionsByCity[mission.cityName]) {\n          missionsByCity[mission.cityName] = {\n            completed: [],\n            pending: [],\n            expired: []\n          };\n        }\n        if (mission.completed) {\n          missionsByCity[mission.cityName].completed.push(mission);\n        } else {\n          missionsByCity[mission.cityName].pending.push(mission);\n        }\n      });\n      setMissions(missionsByCity);\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      setError('Error al cargar las misiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMissions();\n  }, [journeyId]);\n  const handleCompleteMission = async (missionId, imageUrl) => {\n    try {\n      setCompletingMission(true);\n      let foundMissionTitle = '';\n      let foundMissionPoints = 0;\n      let foundCityName = '';\n      Object.keys(missions).forEach(cityName => {\n        const pending = missions[cityName].pending;\n        const foundMission = pending.find(m => m.id === missionId);\n        if (foundMission) {\n          foundMissionTitle = foundMission.challenge.title;\n          foundMissionPoints = foundMission.challenge.points;\n          foundCityName = cityName;\n        }\n      });\n      if (!foundMissionTitle || !foundCityName) {\n        throw new Error('MisiÃ³n no encontrada');\n      }\n      setCompletedMissionInfo({\n        title: foundMissionTitle,\n        points: foundMissionPoints,\n        cityName: foundCityName\n      });\n      await completeMission(missionId, user?.id || '', imageUrl);\n      if (imageUrl) {\n        await createJournalEntry({\n          userId: user?.id || '',\n          cityId: foundCityName,\n          missionId: missionId,\n          title: `MisiÃ³n completada: ${foundMissionTitle}`,\n          content: `He completado la misiÃ³n \"${foundMissionTitle}\" en ${foundCityName}. Â¡ConseguÃ­ ${foundMissionPoints} puntos!`,\n          photos: [imageUrl],\n          tags: [foundCityName, 'MisiÃ³n completada']\n        });\n      }\n      setMissions(prev => {\n        const updatedMissions = Object.assign({}, prev);\n        const city = updatedMissions[foundCityName];\n        const index = city.pending.findIndex(m => m.id === missionId);\n        if (index !== -1) {\n          const mission = Object.assign({}, city.pending[index], {\n            completed: true\n          });\n          city.pending.splice(index, 1);\n          city.completed.push(mission);\n        }\n        return updatedMissions;\n      });\n      setUserPoints(prev => prev + foundMissionPoints);\n      dispatch(dispatchCompleteMission(missionId));\n      dispatch(setRefreshJournal(true));\n      setMissionCompleted(true);\n    } catch (error) {\n      console.error('Error al completar la misiÃ³n:', error);\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n. IntÃ©ntalo de nuevo.');\n      setMissionCompleted(false);\n    } finally {\n      setCompletingMission(false);\n    }\n  };\n  const handleShareJourney = async friend => {\n    try {\n      const {\n        error\n      } = await supabase.from('journeys_shared').insert({\n        journeyId: journeyId,\n        ownerId: user?.id,\n        sharedWithUserId: friend.user2Id\n      });\n      if (error) throw error;\n      Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\n    } catch (err) {\n      console.error(err);\n      Alert.alert('Error', 'No se pudo compartir el journey');\n    } finally {\n      setShowShareModal(false);\n    }\n  };\n  useEffect(() => {\n    if (missionCompleted) {\n      const timer = setTimeout(() => {\n        setMissionCompleted(false);\n        navigation.navigate('Journal', {\n          refresh: true\n        });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [missionCompleted, navigation]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsxDEV(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this);\n  }\n  if (!selectedCity) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(missions).map(([cityName, missions]) => _jsxDEV(CityCard, {\n          cityName: cityName,\n          totalMissions: missions.completed.length + missions.pending.length,\n          completedMissions: missions.completed.length,\n          expiredMissions: missions.expired.length,\n          onPress: () => setSelectedCity(cityName)\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, this);\n  }\n  const cityData = missions[selectedCity];\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => setSelectedCity(null),\n        children: [_jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), cityData.pending.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: imageUrl => handleCompleteMission(mission.id, imageUrl),\n          onShare: () => setShowShareModal(true)\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.expired.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this), cityData.expired.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {},\n          onShare: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), cityData.completed.length > 0 && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          style: styles.completedDivider,\n          children: [_jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.dividerLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this), cityData.completed.map(mission => _jsxDEV(MissionCard, {\n          mission: mission,\n          onComplete: () => {},\n          onShare: () => {}\n        }, mission.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), _jsxDEV(FriendSelectionModal, {\n      visible: showShareModal,\n      onClose: () => setShowShareModal(false),\n      onSelect: handleShareJourney\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this), _jsxDEV(MissionCompletedModal, {\n      visible: missionCompleted,\n      missionInfo: completedMissionInfo,\n      onFinished: () => {\n        setMissionCompleted(false);\n        navigation.navigate('Journal', {\n          refresh: true\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this), _jsxDEV(CompletingMissionModal, {\n      visible: completingMission && !missionCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 603,\n    columnNumber: 5\n  }, this);\n};\nconst MissionsScreen = props => {\n  return _jsxDEV(MissionsScreenComponent, Object.assign({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 688,\n    columnNumber: 10\n  }, this);\n};\nexport default MissionsScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    flexWrap: 'wrap'\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButtonText: {\n    fontSize: 16,\n    marginLeft: 5,\n    color: '#333'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    flex: 1\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    marginRight: 10\n  },\n  citiesList: {\n    flex: 1\n  },\n  cityCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  cityCardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cityInfo: {\n    flex: 1\n  },\n  cityName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  missionCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 2,\n    overflow: 'hidden'\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50'\n  },\n  missionsList: {\n    flex: 1\n  },\n  cityTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 15\n  },\n  completedDivider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#4CAF50'\n  },\n  completedText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    marginHorizontal: 10,\n    fontSize: 16\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  expiredCard: {\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  badgeContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  shareIcon: {\n    marginLeft: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  retryButton: {\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","ScrollView","Modal","FlatList","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","ImageUploadModal","setRefreshJournal","createJournalEntry","MissionCompletedModal","CompletingMissionModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","mission","onComplete","onShare","showUploadModal","setShowUploadModal","timeRemaining","end_date","completed","completingMission","setCompletingMission","handleMissionPress","handleUploadSuccess","imageUrl","children","style","styles","card","completedCard","expiredCard","onPress","disabled","cardHeader","cardTitle","challenge","title","fileName","_jsxFileName","lineNumber","columnNumber","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","shareIcon","name","size","color","loadingOverlay","loadingText","visible","missionId","id","missionTitle","onClose","onSuccess","CityCard","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCount","progressBar","progressFill","width","FriendSelectionModal","onSelect","friends","setFriends","loading","setLoading","user","state","auth","fetchFriends","data","friendData","error","from","select","eq","friendDetails","Promise","all","map","friend","userData","userError","user2Id","single","username","filter","f","console","animationType","onRequestClose","transparent","modalStyles","modalOverlay","modalContent","modalTitle","keyExtractor","item","renderItem","friendItem","friendName","friendPoints","cancelButton","cancelButtonText","create","flex","justifyContent","alignItems","borderRadius","padding","maxHeight","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","marginTop","MissionsScreenComponent","route","navigation","journeyId","params","missions","setMissions","setError","missionCompleted","setMissionCompleted","completedMissionInfo","setCompletedMissionInfo","userPoints","setUserPoints","selectedCity","setSelectedCity","showShareModal","setShowShareModal","dispatch","theme","fetchMissions","journeys","journeysError","order","ascending","length","allMissions","flatMap","journey","journeys_missions","jm","cities","challenges","missionsByCity","forEach","pending","expired","push","handleCompleteMission","foundMissionTitle","foundMissionPoints","foundCityName","Object","keys","foundMission","find","m","Error","userId","cityId","content","photos","tags","prev","updatedMissions","assign","city","index","findIndex","splice","alert","handleShareJourney","insert","ownerId","sharedWithUserId","err","timer","setTimeout","navigate","refresh","clearTimeout","loadingContainer","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText","missionInfo","onFinished","MissionsScreen","props","flexDirection","flexWrap","marginLeft","marginRight","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","marginVertical","marginHorizontal","opacity","borderColor","borderWidth","paddingHorizontal","paddingVertical","textAlign"],"sources":["C:/Users/Admin/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["// MissionsScreen.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  StyleSheet, \r\n  TouchableOpacity, \r\n  ActivityIndicator, \r\n  Alert, \r\n  ScrollView, \r\n  Modal, \r\n  FlatList \r\n} from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\r\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\r\nimport ImageUploadModal from '../../components/ImageUploadModal';\r\nimport { setRefreshJournal } from '../../features/journalSlice';\r\nimport { createJournalEntry } from '../../services/journalService';\r\nimport MissionCompletedModal from '../../components/MissionCompletedModal';\r\nimport CompletingMissionModal from '../../components/CompletingMissionModal';\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: JourneyMission[];\r\n  };\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\n  route: MissionsScreenRouteProp;\r\n  navigation: any;\r\n}\r\n\r\ninterface CityMissions {\r\n  [cityName: string]: {\r\n    completed: JourneyMission[];\r\n    pending: JourneyMission[];\r\n    expired: JourneyMission[];\r\n  };\r\n}\r\n\r\ninterface JourneyMission {\r\n  id: string;\r\n  completed: boolean;\r\n  cityName: string;\r\n  end_date: string;\r\n  challenge: {\r\n    title: string;\r\n    description: string;\r\n    difficulty: string;\r\n    points: number;\r\n  };\r\n}\r\n\r\ninterface Journey {\r\n  id: string;\r\n  description: string;\r\n  created_at: string;\r\n  cities?: {\r\n    name: string;\r\n  };\r\n  journeys_missions: {\r\n    id: string;\r\n    completed: boolean;\r\n    challengeId: string;\r\n    end_date: string;\r\n    challenges: {\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      difficulty: string;\r\n      points: number;\r\n    };\r\n  }[];\r\n}\r\n\r\ninterface Friend {\r\n  user2Id: string;\r\n  username: string;\r\n  points: number;\r\n}\r\n\r\nconst getTimeRemaining = (endDate: string) => {\r\n  const now = new Date();\r\n  const end = new Date(endDate);\r\n  const diff = end.getTime() - now.getTime();\r\n  \r\n  if (diff <= 0) {\r\n    return {\r\n      isExpired: true,\r\n      text: 'Tiempo expirado'\r\n    };\r\n  }\r\n\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  if (days > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${days} dÃ­as restantes`\r\n    };\r\n  } else if (hours > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${hours} horas restantes`\r\n    };\r\n  } else {\r\n    return {\r\n      isExpired: false,\r\n      text: `${minutes} minutos restantes`\r\n    };\r\n  }\r\n};\r\n\r\n// Componente MissionCard con botÃ³n para compartir (solo si la misiÃ³n estÃ¡ disponible)\r\nconst MissionCard = ({ mission, onComplete, onShare }: { \r\n  mission: JourneyMission; \r\n  onComplete: (imageUrl?: string) => void;\r\n  onShare: () => void;\r\n}) => {\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const timeRemaining = getTimeRemaining(mission.end_date);\r\n  const isExpired = timeRemaining.isExpired && !mission.completed;\r\n  const [completingMission, setCompletingMission] = useState(false);\r\n\r\n  const handleMissionPress = () => {\r\n    if (!mission.completed && !isExpired) {\r\n      setShowUploadModal(true);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (imageUrl: string) => {\r\n    setShowUploadModal(false);\r\n    onComplete(imageUrl);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.card,\r\n          mission.completed && styles.completedCard,\r\n          isExpired && styles.expiredCard\r\n        ]}\r\n        onPress={handleMissionPress}\r\n        disabled={mission.completed || isExpired || completingMission}\r\n      >\r\n        <View style={styles.cardHeader}>\r\n          <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n          <View style={styles.badgeContainer}>\r\n            <Text style={[\r\n              styles.badge,\r\n              { backgroundColor: mission.completed ? '#4CAF50' : isExpired ? '#f44336' : '#FFA000' }\r\n            ]}>\r\n              {mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\r\n            </Text>\r\n            <Text style={[\r\n              styles.timeRemaining,\r\n              isExpired && styles.expiredTime\r\n            ]}>\r\n              {timeRemaining.text}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n        <View style={styles.cardFooter}>\r\n          <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n          <Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n          {(!mission.completed && !timeRemaining.isExpired) && (\r\n            <TouchableOpacity onPress={onShare} style={styles.shareIcon}>\r\n              <Ionicons name=\"share-social\" size={20} color=\"#4CAF50\" />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n\r\n        {completingMission && (\r\n          <View style={styles.loadingOverlay}>\r\n            <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\r\n            <Text style={styles.loadingText}>Completando misiÃ³n...</Text>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <ImageUploadModal\r\n        visible={showUploadModal}\r\n        missionId={mission.id}\r\n        missionTitle={mission.challenge.title}\r\n        onClose={() => setShowUploadModal(false)}\r\n        onSuccess={handleUploadSuccess}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \r\n  cityName: string; \r\n  totalMissions: number;\r\n  completedMissions: number;\r\n  expiredMissions?: number;\r\n  onPress: () => void;\r\n}) => (\r\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\r\n    <View style={styles.cityCardContent}>\r\n      <View style={styles.cityInfo}>\r\n        <Text style={styles.cityName}>{cityName}</Text>\r\n        <Text style={styles.missionCount}>\r\n          {completedMissions}/{totalMissions} misiones completadas\r\n        </Text>\r\n      </View>\r\n      <Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\r\n    </View>\r\n    <View style={styles.progressBar}>\r\n      <View \r\n        style={[\r\n          styles.progressFill, \r\n          { width: `${(completedMissions / totalMissions) * 100}%` }\r\n        ]} \r\n      />\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\n// Modal para seleccionar un amigo\r\nconst FriendSelectionModal = ({ visible, onClose, onSelect }: { \r\n  visible: boolean; \r\n  onClose: () => void; \r\n  onSelect: (friend: Friend) => void;\r\n}) => {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      const fetchFriends = async () => {\r\n        if (!user) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        try {\r\n          setLoading(true);\r\n          const { data: friendData, error } = await supabase\r\n            .from('friends')\r\n            .select('user2Id')\r\n            .eq('user1Id', user.id);\r\n          if (error) throw error;\r\n  \r\n          const friendDetails = await Promise.all(\r\n            friendData.map(async (friend: { user2Id: string }) => {\r\n              const { data: userData, error: userError } = await supabase\r\n                .from('users')\r\n                .select('username, points')\r\n                .eq('id', friend.user2Id)\r\n                .single();\r\n              if (userError) return null;\r\n              return {\r\n                user2Id: friend.user2Id,\r\n                username: userData.username,\r\n                points: userData.points,\r\n              };\r\n            })\r\n          );\r\n  \r\n          setFriends(friendDetails.filter((f) => f !== null) as Friend[]);\r\n        } catch (error) {\r\n          console.error('Error fetching friends:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchFriends();\r\n    }\r\n  }, [visible, user]);\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\" onRequestClose={onClose} transparent>\r\n      <View style={modalStyles.modalOverlay}>\r\n        <View style={modalStyles.modalContent}>\r\n          <Text style={modalStyles.modalTitle}>Selecciona un amigo</Text>\r\n          {loading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n          ) : (\r\n            <FlatList\r\n              data={friends}\r\n              keyExtractor={(item) => item.user2Id}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity style={modalStyles.friendItem} onPress={() => onSelect(item)}>\r\n                  <Text style={modalStyles.friendName}>{item.username}</Text>\r\n                  <Text style={modalStyles.friendPoints}>Puntos: {item.points}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          )}\r\n          <TouchableOpacity style={modalStyles.cancelButton} onPress={onClose}>\r\n            <Text style={modalStyles.cancelButtonText}>Cancelar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyles = StyleSheet.create({\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    maxHeight: '80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  friendItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc'\r\n  },\r\n  friendName: {\r\n    fontSize: 16\r\n  },\r\n  friendPoints: {\r\n    fontSize: 14,\r\n    color: '#666'\r\n  },\r\n  cancelButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#f44336',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  cancelButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\n// Componente principal siguiendo la estructura de main\r\nconst MissionsScreenComponent = ({ route, navigation }: MissionsScreenProps) => {\r\n  const { journeyId } = route.params || {};\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [missions, setMissions] = useState<CityMissions>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [completingMission, setCompletingMission] = useState(false);\r\n  const [missionCompleted, setMissionCompleted] = useState(false);\r\n  const [completedMissionInfo, setCompletedMissionInfo] = useState<{\r\n    title: string;\r\n    points: number;\r\n    cityName: string;\r\n  } | null>(null);\r\n  const [userPoints, setUserPoints] = useState(0);\r\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\r\n  // Estado para mostrar modal de compartir\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const fetchMissions = async () => {\r\n    if (!user?.id) {\r\n      setError('Usuario no autenticado');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const { data: journeys, error: journeysError } = await supabase\r\n        .from('journeys')\r\n        .select(`\r\n          id,\r\n          description,\r\n          created_at,\r\n          cities (\r\n            name\r\n          ),\r\n          journeys_missions!inner (\r\n            id,\r\n            completed,\r\n            challengeId,\r\n            end_date,\r\n            challenges!inner (\r\n              id,\r\n              title,\r\n              description,\r\n              difficulty,\r\n              points\r\n            )\r\n          )\r\n        `)\r\n        .eq('userId', user.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (journeysError) throw journeysError;\r\n\r\n      if (!journeys || journeys.length === 0) {\r\n        setError('No hay viajes disponibles');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allMissions = journeys.flatMap((journey: Journey) =>\r\n        journey.journeys_missions.map((jm) => ({\r\n          id: jm.id,\r\n          completed: jm.completed,\r\n          cityName: journey.cities?.name || 'Ciudad Desconocida',\r\n          end_date: jm.end_date,\r\n          challenge: {\r\n            title: jm.challenges.title,\r\n            description: jm.challenges.description,\r\n            difficulty: jm.challenges.difficulty,\r\n            points: jm.challenges.points\r\n          }\r\n        }))\r\n      );\r\n\r\n      const missionsByCity: CityMissions = {};\r\n      allMissions.forEach((mission: JourneyMission) => {\r\n        if (!missionsByCity[mission.cityName]) {\r\n          missionsByCity[mission.cityName] = {\r\n            completed: [],\r\n            pending: [],\r\n            expired: []\r\n          };\r\n        }\r\n        if (mission.completed) {\r\n          missionsByCity[mission.cityName].completed.push(mission);\r\n        } else {\r\n          missionsByCity[mission.cityName].pending.push(mission);\r\n        }\r\n      });\r\n\r\n      setMissions(missionsByCity);\r\n    } catch (error) {\r\n      console.error('Error fetching missions:', error);\r\n      setError('Error al cargar las misiones');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMissions();\r\n  }, [journeyId]);\r\n\r\n  const handleCompleteMission = async (missionId: string, imageUrl?: string) => {\r\n    try {\r\n      setCompletingMission(true);\r\n      // Buscar la misiÃ³n en el estado local para obtener detalles\r\n      let foundMissionTitle = '';\r\n      let foundMissionPoints = 0;\r\n      let foundCityName = '';\r\n      Object.keys(missions).forEach((cityName) => {\r\n        const pending = missions[cityName].pending;\r\n        const foundMission = pending.find((m) => m.id === missionId);\r\n        if (foundMission) {\r\n          foundMissionTitle = foundMission.challenge.title;\r\n          foundMissionPoints = foundMission.challenge.points;\r\n          foundCityName = cityName;\r\n        }\r\n      });\r\n      if (!foundMissionTitle || !foundCityName) {\r\n        throw new Error('MisiÃ³n no encontrada');\r\n      }\r\n      // Guardar informaciÃ³n de la misiÃ³n completada\r\n      setCompletedMissionInfo({\r\n        title: foundMissionTitle,\r\n        points: foundMissionPoints,\r\n        cityName: foundCityName\r\n      });\r\n      // Completar la misiÃ³n en la base de datos\r\n      await completeMission(missionId, user?.id || '', imageUrl);\r\n      // Crear entrada en el diario si hay imagen\r\n      if (imageUrl) {\r\n        await createJournalEntry({\r\n          userId: user?.id || '',\r\n          cityId: foundCityName,\r\n          missionId: missionId,\r\n          title: `MisiÃ³n completada: ${foundMissionTitle}`,\r\n          content: `He completado la misiÃ³n \"${foundMissionTitle}\" en ${foundCityName}. Â¡ConseguÃ­ ${foundMissionPoints} puntos!`,\r\n          photos: [imageUrl],\r\n          tags: [foundCityName, 'MisiÃ³n completada']\r\n        });\r\n      }\r\n      // Actualizar el estado local: mover la misiÃ³n de pendientes a completadas\r\n      setMissions((prev) => {\r\n        const updatedMissions = { ...prev };\r\n        const city = updatedMissions[foundCityName];\r\n        const index = city.pending.findIndex((m) => m.id === missionId);\r\n        if (index !== -1) {\r\n          const mission = { ...city.pending[index], completed: true };\r\n          city.pending.splice(index, 1);\r\n          city.completed.push(mission);\r\n        }\r\n        return updatedMissions;\r\n      });\r\n      // Actualizar puntos y estado global\r\n      setUserPoints((prev) => prev + foundMissionPoints);\r\n      dispatch(dispatchCompleteMission(missionId));\r\n      dispatch(setRefreshJournal(true));\r\n      // Mostrar el modal de misiÃ³n completada (la navegaciÃ³n se realizarÃ¡ desde allÃ­)\r\n      setMissionCompleted(true);\r\n    } catch (error) {\r\n      console.error('Error al completar la misiÃ³n:', error);\r\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n. IntÃ©ntalo de nuevo.');\r\n      setMissionCompleted(false);\r\n    } finally {\r\n      setCompletingMission(false);\r\n    }\r\n  };\r\n\r\n  // FunciÃ³n para compartir el journey desde una misiÃ³n\r\n  const handleShareJourney = async (friend: Friend) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('journeys_shared')\r\n        .insert({\r\n          journeyId: journeyId,\r\n          ownerId: user?.id,\r\n          sharedWithUserId: friend.user2Id\r\n        });\r\n      if (error) throw error;\r\n      Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert('Error', 'No se pudo compartir el journey');\r\n    } finally {\r\n      setShowShareModal(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (missionCompleted) {\r\n      const timer = setTimeout(() => {\r\n        setMissionCompleted(false);\r\n        navigation.navigate('Journal', { refresh: true });\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [missionCompleted, navigation]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\r\n          <Text style={styles.retryButtonText}>Reintentar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!selectedCity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Tus Ciudades</Text>\r\n          <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n        </View>\r\n        <ScrollView style={styles.citiesList}>\r\n          {Object.entries(missions).map(([cityName, missions]) => (\r\n            <CityCard\r\n              key={cityName}\r\n              cityName={cityName}\r\n              totalMissions={missions.completed.length + missions.pending.length}\r\n              completedMissions={missions.completed.length}\r\n              expiredMissions={missions.expired.length}\r\n              onPress={() => setSelectedCity(cityName)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const cityData = missions[selectedCity];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => setSelectedCity(null)}\r\n        >\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\r\n          <Text style={styles.backButtonText}>Ciudades</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n      </View>\r\n      <Text style={styles.cityTitle}>{selectedCity}</Text>\r\n      <ScrollView style={styles.missionsList}>\r\n        {cityData.pending.length > 0 && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Misiones Pendientes</Text>\r\n            {cityData.pending.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={(imageUrl) => handleCompleteMission(mission.id, imageUrl)}\r\n                onShare={() => setShowShareModal(true)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n        {cityData.expired.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.expired.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n                onShare={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n        {cityData.completed.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={styles.completedText}>Completadas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.completed.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n                onShare={() => {}}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n      {/* Modal para compartir journey */}\r\n      <FriendSelectionModal \r\n        visible={showShareModal} \r\n        onClose={() => setShowShareModal(false)}\r\n        onSelect={handleShareJourney}\r\n      />\r\n      {/* Modal de misiÃ³n completada */}\r\n      <MissionCompletedModal\r\n        visible={missionCompleted}\r\n        missionInfo={completedMissionInfo}\r\n        onFinished={() => {\r\n          setMissionCompleted(false);\r\n          navigation.navigate('Journal', { refresh: true });\r\n        }}\r\n      />\r\n      {/* Modal de carga durante el proceso */}\r\n      <CompletingMissionModal\r\n        visible={completingMission && !missionCompleted}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MissionsScreen = (props: any) => {\r\n  return <MissionsScreenComponent {...props} />;\r\n};\r\n\r\nexport default MissionsScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n    flexWrap: 'wrap'\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  backButtonText: {\r\n    fontSize: 16,\r\n    marginLeft: 5,\r\n    color: '#333',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    flex: 1,\r\n  },\r\n  pointsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n    marginRight: 10\r\n  },\r\n  citiesList: {\r\n    flex: 1,\r\n  },\r\n  cityCard: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  cityCardContent: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cityInfo: {\r\n    flex: 1,\r\n  },\r\n  cityName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  missionCount: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  progressBar: {\r\n    height: 4,\r\n    backgroundColor: '#E0E0E0',\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  missionsList: {\r\n    flex: 1,\r\n  },\r\n  cityTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 15,\r\n  },\r\n  completedDivider: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  dividerLine: {\r\n    flex: 1,\r\n    height: 1,\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  completedText: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n    marginHorizontal: 10,\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  completedCard: {\r\n    opacity: 0.8,\r\n  },\r\n  expiredCard: {\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  badgeContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  shareIcon: {\r\n    marginLeft: 10,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  retryButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}