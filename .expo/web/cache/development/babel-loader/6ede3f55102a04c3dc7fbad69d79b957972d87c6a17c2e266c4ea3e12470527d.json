{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\auth\\\\LoginScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken, setAuthState } from \"../../features/authSlice\";\nimport { supabase } from \"../../services/supabase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [isResetPasswordVisible, setIsResetPasswordVisible] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  useEffect(() => {\n    console.log('LoginScreen montado');\n    supabase.auth.getSession().then(({\n      data\n    }) => {\n      const session = data.session;\n      console.log('Estado de sesión:', session ? 'Activa' : 'Inactiva');\n      if (session) {\n        navigation.replace('Main');\n      }\n    });\n  }, [navigation]);\n  const handleLogin = async () => {\n    if (!email || !password) {\n      setError('Por favor ingresa email y contraseña');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Intentando iniciar sesión...');\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) {\n        console.error('Error de autenticación:', error);\n        if (error.message.includes('Invalid login credentials')) {\n          setError('Contraseña Incorrecta');\n        } else {\n          setError(error.message);\n        }\n        return;\n      }\n      if (data.user && data.session) {\n        console.log('Inicio de sesión exitoso');\n        dispatch(setUser({\n          id: data.user.id,\n          email: data.user.email,\n          username: data.user.user_metadata.username || email.split('@')[0]\n        }));\n        dispatch(setToken(data.session.access_token));\n        dispatch(setAuthState('authenticated'));\n        navigation.replace('Main');\n      }\n    } catch (error) {\n      console.error('Error de inicio de sesión:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResetPassword = async () => {\n    if (!resetEmail) {\n      Alert.alert('Error', 'Por favor ingresa tu correo electrónico.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(resetEmail, {\n        redirectTo: 'travelquest://reset-password'\n      });\n      if (error) throw error;\n      setIsResetPasswordVisible(false);\n      navigation.replace('EmailSent');\n    } catch (error) {\n      console.error('Error al enviar el enlace de recuperación:', error);\n      Alert.alert('Error', error.message || 'Error al enviar el enlace de recuperación.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log('Evento de autenticación:', event);\n      if (event === 'PASSWORD_RECOVERY') {\n        console.log('Estado de recuperación de contraseña detectado');\n        dispatch(setAuthState('password_recovery'));\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'ResetPassword'\n          }]\n        });\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [dispatch, navigation]);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.logoContainer,\n      children: _jsxDEV(Text, {\n        style: styles.title,\n        children: \"TravelQuest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.formContainer,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChangeText: setEmail,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), error && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this) : _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate('Register'),\n        children: _jsxDEV(Text, {\n          style: styles.link,\n          children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => setIsResetPasswordVisible(true),\n        children: _jsxDEV(Text, {\n          style: styles.link,\n          children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: isResetPasswordVisible,\n      transparent: true,\n      animationType: \"slide\",\n      onRequestClose: () => setIsResetPasswordVisible(false),\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: \"Recuperar Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Correo electr\\xF3nico\",\n            value: resetEmail,\n            onChangeText: setResetEmail,\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleResetPassword,\n            disabled: loading,\n            children: loading ? _jsxDEV(ActivityIndicator, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this) : _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Enviar Enlace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: () => setIsResetPasswordVisible(false),\n            children: _jsxDEV(Text, {\n              style: styles.link,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 20\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginTop: 60,\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    color: '#4CAF50',\n    fontSize: 14,\n    marginTop: 20,\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: '#f44336',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#4CAF50'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","Modal","Alert","useDispatch","setUser","setToken","setAuthState","supabase","useNavigation","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","loading","setLoading","resetEmail","setResetEmail","isResetPasswordVisible","setIsResetPasswordVisible","error","setError","dispatch","navigation","console","log","auth","getSession","then","data","session","replace","handleLogin","signInWithPassword","message","includes","user","id","username","user_metadata","split","access_token","handleResetPassword","alert","resetPasswordForEmail","redirectTo","subscription","onAuthStateChange","event","reset","index","routes","name","unsubscribe","style","styles","container","children","logoContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link","visible","transparent","animationType","onRequestClose","modalContainer","modalContent","modalTitle","create","flex","backgroundColor","padding","alignItems","marginTop","marginBottom","fontSize","fontWeight","justifyContent","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","textAlign","textDecorationLine","maxWidth"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator, Modal, Alert } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser, setToken, setAuthState } from '../../features/authSlice';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport type { Session } from '@supabase/supabase-js';\r\n\r\ntype RootStackParamList = {\r\n  Main: undefined;\r\n  Login: undefined;\r\n  Register: undefined;\r\n  EmailSent: undefined;\r\n  ResetPassword: undefined;\r\n};\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [resetEmail, setResetEmail] = useState('');\r\n  const [isResetPasswordVisible, setIsResetPasswordVisible] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation<NavigationProp>();\r\n\r\n  useEffect(() => {\r\n    console.log('LoginScreen montado');\r\n    // Verificar el estado inicial de autenticación\r\n    supabase.auth.getSession().then(({ data }) => {\r\n      const session = data.session;\r\n      console.log('Estado de sesión:', session ? 'Activa' : 'Inactiva');\r\n      if (session) {\r\n        // Si hay una sesión activa, redirigir a Main\r\n        navigation.replace('Main');\r\n      }\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      setError('Por favor ingresa email y contraseña');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log('Intentando iniciar sesión...');\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error de autenticación:', error);\r\n        if (error.message.includes('Invalid login credentials')) {\r\n          setError('Contraseña Incorrecta');\r\n        } else {\r\n          setError(error.message);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (data.user && data.session) {\r\n        console.log('Inicio de sesión exitoso');\r\n        dispatch(setUser({\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          username: data.user.user_metadata.username || email.split('@')[0],\r\n        }));\r\n        dispatch(setToken(data.session.access_token));\r\n        dispatch(setAuthState('authenticated'));\r\n        navigation.replace('Main');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error de inicio de sesión:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!resetEmail) {\r\n      Alert.alert('Error', 'Por favor ingresa tu correo electrónico.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.resetPasswordForEmail(resetEmail, {\r\n        redirectTo: 'travelquest://reset-password',\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      setIsResetPasswordVisible(false);\r\n      navigation.replace('EmailSent');\r\n\r\n    } catch (error: any) {\r\n      console.error('Error al enviar el enlace de recuperación:', error);\r\n      Alert.alert('Error', error.message || 'Error al enviar el enlace de recuperación.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Efecto para manejar el enlace de restablecimiento de contraseña\r\n  useEffect(() => {\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event: any, session: any) => {\r\n      console.log('Evento de autenticación:', event);\r\n      if (event === 'PASSWORD_RECOVERY') {\r\n        console.log('Estado de recuperación de contraseña detectado');\r\n        dispatch(setAuthState('password_recovery'));\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'ResetPassword' }],\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [dispatch, navigation]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.logoContainer}>\r\n        <Text style={styles.title}>TravelQuest</Text>\r\n      </View>\r\n\r\n      <View style={styles.formContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n\r\n        {error && (\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        )}\r\n\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handleLogin}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate('Register')}>\r\n          <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={() => setIsResetPasswordVisible(true)}>\r\n          <Text style={styles.link}>¿Olvidaste tu contraseña?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Modal\r\n        visible={isResetPasswordVisible}\r\n        transparent\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setIsResetPasswordVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Recuperar Contraseña</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Correo electrónico\"\r\n              value={resetEmail}\r\n              onChangeText={setResetEmail}\r\n              autoCapitalize=\"none\"\r\n              keyboardType=\"email-address\"\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={handleResetPassword}\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <ActivityIndicator color=\"white\" />\r\n              ) : (\r\n                <Text style={styles.buttonText}>Enviar Enlace</Text>\r\n              )}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setIsResetPasswordVisible(false)}>\r\n              <Text style={styles.link}>Cancelar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 20,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 60,\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  formContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    color: '#4CAF50',\r\n    fontSize: 14,\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  errorText: {\r\n    color: '#f44336',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: '#4CAF50',\r\n  },\r\n});\r\n\r\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}