{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { supabase } from \"./supabase\";\nimport { deductPointsFromUser } from \"./pointsService\";\nexport var HINT_COST = 15;\nexport var getMissionHint = function () {\n  var _ref = _asyncToGenerator(function* (userId, missionId) {\n    try {\n      yield deductPointsFromUser(userId, HINT_COST);\n      var _yield$supabase$from$ = yield supabase.from('journeys_missions').select(`\n        id,\n        journeyId,\n        challengeId,\n        challenges (\n          id,\n          title,\n          description,\n          difficulty\n        )\n      `).eq('id', missionId).single(),\n        missionData = _yield$supabase$from$.data,\n        missionError = _yield$supabase$from$.error;\n      if (missionError || !missionData) {\n        throw missionError || new Error('No se encontró la misión');\n      }\n      var hint = '';\n      var missionTitle = missionData.challenges.title;\n      var missionDescription = missionData.challenges.description;\n      var difficulty = missionData.challenges.difficulty;\n      if (missionDescription.includes('fotografía') || missionDescription.includes('foto')) {\n        hint = 'Busca un lugar elevado o con buena iluminación para conseguir mejores fotos.';\n      } else if (missionDescription.includes('comida') || missionDescription.includes('restaurante')) {\n        hint = 'Pregunta a los lugareños por los sitios más populares para probar la gastronomía local.';\n      } else if (missionDescription.includes('museo') || missionDescription.includes('monumento')) {\n        hint = 'Revisa el horario de apertura y considera visitar temprano para evitar multitudes.';\n      } else if (missionDescription.includes('parque') || missionDescription.includes('naturaleza')) {\n        hint = 'Lleva contigo agua y protección solar. Los mejores momentos para visitar son temprano en la mañana o al atardecer.';\n      } else {\n        switch (difficulty) {\n          case 'easy':\n            hint = `Para completar \"${missionTitle}\", observa cuidadosamente los detalles en la descripción de la misión.`;\n            break;\n          case 'medium':\n            hint = `Para completar \"${missionTitle}\", considera explorar zonas menos turísticas o preguntar a los locales.`;\n            break;\n          case 'hard':\n            hint = `Para completar \"${missionTitle}\", tendrás que ser creativo y pensar fuera de lo común. Considera el momento del día o eventos especiales.`;\n            break;\n          default:\n            hint = `Presta atención a los detalles de la misión y busca elementos únicos que destaquen en tu fotografía.`;\n        }\n      }\n      yield supabase.from('mission_hints').insert([{\n        userId: userId,\n        missionId: missionId,\n        hint: hint,\n        created_at: new Date().toISOString()\n      }]);\n      return {\n        hint: hint,\n        missionId: missionId\n      };\n    } catch (error) {\n      console.error('Error al obtener pista para la misión:', error);\n      throw error;\n    }\n  });\n  return function getMissionHint(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMissionsByCityAndDuration = function () {\n  var _ref2 = _asyncToGenerator(function* (city, duration) {\n    try {\n      var _yield$supabase$from$2 = yield supabase.from('missions').select('*').eq('city', city).lte('duration', duration),\n        data = _yield$supabase$from$2.data,\n        error = _yield$supabase$from$2.error;\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      throw error;\n    }\n  });\n  return function getMissionsByCityAndDuration(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["supabase","deductPointsFromUser","HINT_COST","getMissionHint","_ref","_asyncToGenerator","userId","missionId","_yield$supabase$from$","from","select","eq","single","missionData","data","missionError","error","Error","hint","missionTitle","challenges","title","missionDescription","description","difficulty","includes","insert","created_at","Date","toISOString","console","_x","_x2","apply","arguments","getMissionsByCityAndDuration","_ref2","city","duration","_yield$supabase$from$2","lte","_x3","_x4"],"sources":["C:/Users/migue/TravelQuest/src/services/missionService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport { addPointsToUser, deductPointsFromUser } from './pointsService';\r\n\r\n// Precio en puntos para obtener una pista\r\nexport const HINT_COST = 15;\r\n\r\n// Interfaz para la pista\r\nexport interface MissionHint {\r\n  hint: string;\r\n  missionId: string;\r\n}\r\n\r\n/**\r\n * Obtiene una pista para una misión específica\r\n * @param userId ID del usuario que solicita la pista\r\n * @param missionId ID de la misión para la cual se solicita la pista\r\n * @returns Objeto con la pista\r\n */\r\nexport const getMissionHint = async (userId: string, missionId: string): Promise<MissionHint> => {\r\n  try {\r\n    // Verificar si hay puntos suficientes\r\n    await deductPointsFromUser(userId, HINT_COST);\r\n    \r\n    // Obtener información de la misión para generar una pista contextualizada\r\n    const { data: missionData, error: missionError } = await supabase\r\n      .from('journeys_missions')\r\n      .select(`\r\n        id,\r\n        journeyId,\r\n        challengeId,\r\n        challenges (\r\n          id,\r\n          title,\r\n          description,\r\n          difficulty\r\n        )\r\n      `)\r\n      .eq('id', missionId)\r\n      .single();\r\n\r\n    if (missionError || !missionData) {\r\n      throw missionError || new Error('No se encontró la misión');\r\n    }\r\n\r\n    // Generar pista basada en la descripción de la misión\r\n    // Aquí podrías tener un conjunto de pistas predefinidas o generarlas dinámicamente\r\n    // según la dificultad o el tipo de misión\r\n    let hint = '';\r\n    const missionTitle = missionData.challenges.title;\r\n    const missionDescription = missionData.challenges.description;\r\n    const difficulty = missionData.challenges.difficulty;\r\n\r\n    // Generar pista contextualizada\r\n    if (missionDescription.includes('fotografía') || missionDescription.includes('foto')) {\r\n      hint = 'Busca un lugar elevado o con buena iluminación para conseguir mejores fotos.';\r\n    } else if (missionDescription.includes('comida') || missionDescription.includes('restaurante')) {\r\n      hint = 'Pregunta a los lugareños por los sitios más populares para probar la gastronomía local.';\r\n    } else if (missionDescription.includes('museo') || missionDescription.includes('monumento')) {\r\n      hint = 'Revisa el horario de apertura y considera visitar temprano para evitar multitudes.';\r\n    } else if (missionDescription.includes('parque') || missionDescription.includes('naturaleza')) {\r\n      hint = 'Lleva contigo agua y protección solar. Los mejores momentos para visitar son temprano en la mañana o al atardecer.';\r\n    } else {\r\n      // Pistas genéricas según dificultad\r\n      switch(difficulty) {\r\n        case 'easy':\r\n          hint = `Para completar \"${missionTitle}\", observa cuidadosamente los detalles en la descripción de la misión.`;\r\n          break;\r\n        case 'medium':\r\n          hint = `Para completar \"${missionTitle}\", considera explorar zonas menos turísticas o preguntar a los locales.`;\r\n          break;\r\n        case 'hard':\r\n          hint = `Para completar \"${missionTitle}\", tendrás que ser creativo y pensar fuera de lo común. Considera el momento del día o eventos especiales.`;\r\n          break;\r\n        default:\r\n          hint = `Presta atención a los detalles de la misión y busca elementos únicos que destaquen en tu fotografía.`;\r\n      }\r\n    }\r\n\r\n    // Registrar el uso de la pista (opcional)\r\n    await supabase\r\n      .from('mission_hints')\r\n      .insert([\r\n        {\r\n          userId,\r\n          missionId,\r\n          hint,\r\n          created_at: new Date().toISOString()\r\n        }\r\n      ]);\r\n\r\n    return {\r\n      hint,\r\n      missionId\r\n    };\r\n  } catch (error) {\r\n    console.error('Error al obtener pista para la misión:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMissionsByCityAndDuration = async (city: string, duration: number) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('missions')\r\n      .select('*')\r\n      .eq('city', city)\r\n      .lte('duration', duration);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching missions:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}