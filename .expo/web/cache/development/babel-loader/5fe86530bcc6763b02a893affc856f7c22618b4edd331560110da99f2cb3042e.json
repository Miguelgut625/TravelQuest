{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\screens\\\\NotificationsScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { NotificationsList } from '../components/NotificationsList';\nimport { NotificationTest } from '../components/NotificationTest';\nimport { Button, Divider } from 'react-native-paper';\nimport { useAppSelector } from '../features/hooks';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotificationsScreen = () => {\n  const [showTest, setShowTest] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const userId = useAppSelector(state => state.auth.user?.id);\n  const onRefresh = () => {\n    setRefreshing(true);\n    setTimeout(() => {\n      setRefreshing(false);\n    }, 1000);\n  };\n  if (!userId) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        style: styles.errorText,\n        children: \"Debes iniciar sesi\\xF3n para ver las notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Notificaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: () => setShowTest(!showTest),\n        style: styles.testButton,\n        children: showTest ? 'Ocultar Pruebas' : 'Mostrar Pruebas'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.scrollView,\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this),\n      children: [showTest && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(NotificationTest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), _jsxDEV(Divider, {\n          style: styles.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), _jsxDEV(View, {\n        style: styles.notificationsContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Tus Notificaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), _jsxDEV(NotificationsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollView: {\n    flex: 1\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  testButton: {\n    borderRadius: 20\n  },\n  divider: {\n    marginVertical: 16\n  },\n  notificationsContainer: {\n    padding: 16,\n    flex: 1\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  errorText: {\n    fontSize: 16,\n    color: 'red',\n    textAlign: 'center',\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","RefreshControl","NotificationsList","NotificationTest","Button","Divider","useAppSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationsScreen","showTest","setShowTest","refreshing","setRefreshing","userId","state","auth","user","id","onRefresh","setTimeout","style","styles","container","children","errorText","fileName","_jsxFileName","lineNumber","columnNumber","header","title","mode","onPress","testButton","scrollView","refreshControl","divider","notificationsContainer","sectionTitle","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","fontSize","fontWeight","borderRadius","marginVertical","marginBottom","color","textAlign","marginTop"],"sources":["C:/Users/PC/TravelQuest/src/screens/NotificationsScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, RefreshControl } from 'react-native';\r\nimport { NotificationsList } from '../components/NotificationsList';\r\nimport { NotificationTest } from '../components/NotificationTest';\r\nimport { Button, Divider } from 'react-native-paper';\r\nimport { useAppSelector } from '../features/hooks';\r\n\r\nexport const NotificationsScreen = () => {\r\n    const [showTest, setShowTest] = useState(false);\r\n    const [refreshing, setRefreshing] = useState(false);\r\n    const userId = useAppSelector(state => state.auth.user?.id);\r\n\r\n    const onRefresh = () => {\r\n        setRefreshing(true);\r\n        // Aquí podrías agregar lógica para recargar las notificaciones\r\n        setTimeout(() => {\r\n            setRefreshing(false);\r\n        }, 1000);\r\n    };\r\n\r\n    if (!userId) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.errorText}>Debes iniciar sesión para ver las notificaciones</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Text style={styles.title}>Notificaciones</Text>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    onPress={() => setShowTest(!showTest)}\r\n                    style={styles.testButton}\r\n                >\r\n                    {showTest ? 'Ocultar Pruebas' : 'Mostrar Pruebas'}\r\n                </Button>\r\n            </View>\r\n\r\n            <ScrollView\r\n                style={styles.scrollView}\r\n                refreshControl={\r\n                    <RefreshControl\r\n                        refreshing={refreshing}\r\n                        onRefresh={onRefresh}\r\n                    />\r\n                }\r\n            >\r\n                {showTest && (\r\n                    <>\r\n                        <NotificationTest />\r\n                        <Divider style={styles.divider} />\r\n                    </>\r\n                )}\r\n\r\n                <View style={styles.notificationsContainer}>\r\n                    <Text style={styles.sectionTitle}>Tus Notificaciones</Text>\r\n                    <NotificationsList />\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: 16,\r\n        backgroundColor: '#fff',\r\n        elevation: 2,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 3,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n    },\r\n    testButton: {\r\n        borderRadius: 20,\r\n    },\r\n    divider: {\r\n        marginVertical: 16,\r\n    },\r\n    notificationsContainer: {\r\n        padding: 16,\r\n        flex: 1,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 16,\r\n    },\r\n    errorText: {\r\n        fontSize: 16,\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        marginTop: 20,\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}