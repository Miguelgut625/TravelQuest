{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch } from 'react-redux';\nimport { setUser, setToken, setAuthState } from \"../../features/authSlice\";\nimport { supabase } from \"../../services/supabase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    resetEmail = _useState8[0],\n    setResetEmail = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isResetPasswordVisible = _useState10[0],\n    setIsResetPasswordVisible = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  useEffect(function () {\n    console.log('LoginScreen montado');\n    supabase.auth.getSession().then(function (_ref) {\n      var data = _ref.data;\n      var session = data == null ? void 0 : data.session;\n      console.log('Estado de sesión:', session ? 'Activa' : 'Inactiva');\n      if (session) {\n        navigation.replace('Main');\n      }\n    });\n  }, [navigation]);\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        setError('Por favor ingresa email y contraseña');\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        console.log('Intentando iniciar sesión...');\n        var _yield$supabase$auth$ = yield supabase.auth.signInWithPassword({\n            email: email,\n            password: password\n          }),\n          data = _yield$supabase$auth$.data,\n          _error = _yield$supabase$auth$.error;\n        if (_error) {\n          console.error('Error de autenticación:', _error);\n          if (_error.message.includes('Invalid login credentials')) {\n            setError('Contraseña Incorrecta');\n          } else {\n            setError(_error.message);\n          }\n          return;\n        }\n        if (data.user && data.session) {\n          console.log('Inicio de sesión exitoso');\n          dispatch(setUser({\n            id: data.user.id,\n            email: data.user.email,\n            username: data.user.user_metadata.username || email.split('@')[0]\n          }));\n          dispatch(setToken(data.session.access_token));\n          dispatch(setAuthState('authenticated'));\n          navigation.replace('Main');\n        }\n      } catch (error) {\n        console.error('Error de inicio de sesión:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleResetPassword = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!resetEmail) {\n        Alert.alert('Error', 'Por favor ingresa tu correo electrónico.');\n        return;\n      }\n      try {\n        setLoading(true);\n        var _yield$supabase$auth$2 = yield supabase.auth.resetPasswordForEmail(resetEmail, {\n            redirectTo: 'travelquest://reset-password'\n          }),\n          _error2 = _yield$supabase$auth$2.error;\n        if (_error2) throw _error2;\n        setIsResetPasswordVisible(false);\n        navigation.replace('EmailSent');\n      } catch (error) {\n        console.error('Error al enviar el enlace de recuperación:', error);\n        Alert.alert('Error', error.message || 'Error al enviar el enlace de recuperación.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleResetPassword() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var _supabase$auth$onAuth = supabase.auth.onAuthStateChange(function () {\n        var _ref4 = _asyncToGenerator(function* (event, session) {\n          console.log('Evento de autenticación:', event);\n          if (event === 'PASSWORD_RECOVERY') {\n            console.log('Estado de recuperación de contraseña detectado');\n            dispatch(setAuthState('password_recovery'));\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'ResetPassword'\n              }]\n            });\n          }\n        });\n        return function (_x, _x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }()),\n      subscription = _supabase$auth$onAuth.data.subscription;\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [dispatch, navigation]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.logoContainer,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"TravelQuest\"\n      })\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChangeText: setEmail,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), error && _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: \"white\"\n        }) : _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"\\xBFNo tienes cuenta? Reg\\xEDstrate\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsResetPasswordVisible(true);\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n        })\n      })]\n    }), _jsx(Modal, {\n      visible: isResetPasswordVisible,\n      transparent: true,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setIsResetPasswordVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Recuperar Contrase\\xF1a\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Correo electr\\xF3nico\",\n            value: resetEmail,\n            onChangeText: setResetEmail,\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleResetPassword,\n            disabled: loading,\n            children: loading ? _jsx(ActivityIndicator, {\n              color: \"white\"\n            }) : _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Enviar Enlace\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setIsResetPasswordVisible(false);\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Cancelar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 20\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginTop: 60,\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#4CAF50',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    color: '#4CAF50',\n    fontSize: 14,\n    marginTop: 20,\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  errorText: {\n    color: '#f44336',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#4CAF50'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","Modal","Alert","useDispatch","setUser","setToken","setAuthState","supabase","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","resetEmail","setResetEmail","_useState9","_useState10","isResetPasswordVisible","setIsResetPasswordVisible","_useState11","_useState12","error","setError","dispatch","navigation","console","log","auth","getSession","then","_ref","data","session","replace","handleLogin","_ref2","_asyncToGenerator","_yield$supabase$auth$","signInWithPassword","message","includes","user","id","username","user_metadata","split","access_token","apply","arguments","handleResetPassword","_ref3","alert","_yield$supabase$auth$2","resetPasswordForEmail","redirectTo","_supabase$auth$onAuth","onAuthStateChange","_ref4","event","reset","index","routes","name","_x","_x2","subscription","unsubscribe","style","styles","container","children","logoContainer","title","formContainer","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","errorText","button","onPress","disabled","color","buttonText","navigate","link","visible","transparent","animationType","onRequestClose","modalContainer","modalContent","modalTitle","create","flex","backgroundColor","padding","alignItems","marginTop","marginBottom","fontSize","fontWeight","justifyContent","width","height","borderRadius","paddingHorizontal","borderWidth","borderColor","textAlign","textDecorationLine","maxWidth"],"sources":["C:/Users/PC/TravelQuest/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator, Modal, Alert } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser, setToken, setAuthState } from '../../features/authSlice';\r\nimport { supabase } from '../../services/supabase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\n\r\ntype RootStackParamList = {\r\n  Main: undefined;\r\n  Login: undefined;\r\n  Register: undefined;\r\n  EmailSent: undefined;\r\n  ResetPassword: undefined;\r\n};\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [resetEmail, setResetEmail] = useState('');\r\n  const [isResetPasswordVisible, setIsResetPasswordVisible] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation<NavigationProp>();\r\n\r\n  useEffect(() => {\r\n    console.log('LoginScreen montado');\r\n    // Verificar el estado inicial de autenticación\r\n    supabase.auth.getSession().then(({ data }) => {\r\n      const session = data?.session;\r\n      console.log('Estado de sesión:', session ? 'Activa' : 'Inactiva');\r\n      if (session) {\r\n        // Si hay una sesión activa, redirigir a Main\r\n        navigation.replace('Main');\r\n      }\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      setError('Por favor ingresa email y contraseña');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log('Intentando iniciar sesión...');\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error de autenticación:', error);\r\n        if (error.message.includes('Invalid login credentials')) {\r\n          setError('Contraseña Incorrecta');\r\n        } else {\r\n          setError(error.message);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (data.user && data.session) {\r\n        console.log('Inicio de sesión exitoso');\r\n        dispatch(setUser({\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          username: data.user.user_metadata.username || email.split('@')[0],\r\n        }));\r\n        dispatch(setToken(data.session.access_token));\r\n        dispatch(setAuthState('authenticated'));\r\n        navigation.replace('Main');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error de inicio de sesión:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!resetEmail) {\r\n      Alert.alert('Error', 'Por favor ingresa tu correo electrónico.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.resetPasswordForEmail(resetEmail, {\r\n        redirectTo: 'travelquest://reset-password',\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      setIsResetPasswordVisible(false);\r\n      navigation.replace('EmailSent');\r\n\r\n    } catch (error: any) {\r\n      console.error('Error al enviar el enlace de recuperación:', error);\r\n      Alert.alert('Error', error.message || 'Error al enviar el enlace de recuperación.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Efecto para manejar el enlace de restablecimiento de contraseña\r\n  useEffect(() => {\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event: any, session: any) => {\r\n      console.log('Evento de autenticación:', event);\r\n      if (event === 'PASSWORD_RECOVERY') {\r\n        console.log('Estado de recuperación de contraseña detectado');\r\n        dispatch(setAuthState('password_recovery'));\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'ResetPassword' }],\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [dispatch, navigation]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.logoContainer}>\r\n        <Text style={styles.title}>TravelQuest</Text>\r\n      </View>\r\n\r\n      <View style={styles.formContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n\r\n        {error && (\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        )}\r\n\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handleLogin}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate('Register')}>\r\n          <Text style={styles.link}>¿No tienes cuenta? Regístrate</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={() => setIsResetPasswordVisible(true)}>\r\n          <Text style={styles.link}>¿Olvidaste tu contraseña?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Modal\r\n        visible={isResetPasswordVisible}\r\n        transparent\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setIsResetPasswordVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Recuperar Contraseña</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Correo electrónico\"\r\n              value={resetEmail}\r\n              onChangeText={setResetEmail}\r\n              autoCapitalize=\"none\"\r\n              keyboardType=\"email-address\"\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={handleResetPassword}\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <ActivityIndicator color=\"white\" />\r\n              ) : (\r\n                <Text style={styles.buttonText}>Enviar Enlace</Text>\r\n              )}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setIsResetPasswordVisible(false)}>\r\n              <Text style={styles.link}>Cancelar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 20,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 60,\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#4CAF50',\r\n  },\r\n  formContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    color: '#4CAF50',\r\n    fontSize: 14,\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  errorText: {\r\n    color: '#f44336',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: '#4CAF50',\r\n  },\r\n});\r\n\r\nexport default LoginScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}