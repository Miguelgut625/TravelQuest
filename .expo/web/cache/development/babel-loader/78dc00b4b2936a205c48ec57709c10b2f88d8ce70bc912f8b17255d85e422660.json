{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  missions: [],\n  activeMissions: [],\n  completedMissions: [],\n  isLoading: false,\n  error: null\n};\nvar missionSlice = createSlice({\n  name: 'missions',\n  initialState: initialState,\n  reducers: {\n    setMissions: function setMissions(state, action) {\n      state.missions = action.payload;\n    },\n    addActiveMission: function addActiveMission(state, action) {\n      state.activeMissions.push(action.payload);\n    },\n    completeMission: function completeMission(state, action) {\n      var mission = state.activeMissions.find(function (m) {\n        return m.id === action.payload;\n      });\n      if (mission) {\n        mission.completed = true;\n        state.completedMissions.push(mission);\n        state.activeMissions = state.activeMissions.filter(function (m) {\n          return m.id !== action.payload;\n        });\n      }\n    },\n    setLoading: function setLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nvar _missionSlice$actions = missionSlice.actions,\n  setMissions = _missionSlice$actions.setMissions,\n  addActiveMission = _missionSlice$actions.addActiveMission,\n  completeMission = _missionSlice$actions.completeMission,\n  setLoading = _missionSlice$actions.setLoading,\n  setError = _missionSlice$actions.setError;\nexport { setMissions, addActiveMission, completeMission, setLoading, setError };\nexport default missionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","missions","activeMissions","completedMissions","isLoading","error","missionSlice","name","reducers","setMissions","state","action","payload","addActiveMission","push","completeMission","mission","find","m","id","completed","filter","setLoading","setError","_missionSlice$actions","actions","reducer"],"sources":["C:/Users/PC/TravelQuest/src/features/missionSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Mission {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  city: string;\r\n  difficulty: 'easy' | 'medium' | 'hard';\r\n  points: number;\r\n  completed: boolean;\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  requirements?: string[];\r\n  hints?: string[];\r\n}\r\n\r\ninterface MissionState {\r\n  missions: Mission[];\r\n  activeMissions: Mission[];\r\n  completedMissions: Mission[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: MissionState = {\r\n  missions: [],\r\n  activeMissions: [],\r\n  completedMissions: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst missionSlice = createSlice({\r\n  name: 'missions',\r\n  initialState,\r\n  reducers: {\r\n    setMissions: (state, action: PayloadAction<Mission[]>) => {\r\n      state.missions = action.payload;\r\n    },\r\n    addActiveMission: (state, action: PayloadAction<Mission>) => {\r\n      state.activeMissions.push(action.payload);\r\n    },\r\n    completeMission: (state, action: PayloadAction<string>) => {\r\n      const mission = state.activeMissions.find(m => m.id === action.payload);\r\n      if (mission) {\r\n        mission.completed = true;\r\n        state.completedMissions.push(mission);\r\n        state.activeMissions = state.activeMissions.filter(m => m.id !== action.payload);\r\n      }\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMissions,\r\n  addActiveMission,\r\n  completeMission,\r\n  setLoading,\r\n  setError,\r\n} = missionSlice.actions;\r\n\r\nexport default missionSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AA0B7D,IAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE,EAAE;EAClBC,iBAAiB,EAAE,EAAE;EACrBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,UAAU;EAChBP,YAAY,EAAZA,YAAY;EACZQ,QAAQ,EAAE;IACRC,WAAW,EAAE,SAAbA,WAAWA,CAAGC,KAAK,EAAEC,MAAgC,EAAK;MACxDD,KAAK,CAACT,QAAQ,GAAGU,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGH,KAAK,EAAEC,MAA8B,EAAK;MAC3DD,KAAK,CAACR,cAAc,CAACY,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC3C,CAAC;IACDG,eAAe,EAAE,SAAjBA,eAAeA,CAAGL,KAAK,EAAEC,MAA6B,EAAK;MACzD,IAAMK,OAAO,GAAGN,KAAK,CAACR,cAAc,CAACe,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO;MAAA,EAAC;MACvE,IAAII,OAAO,EAAE;QACXA,OAAO,CAACI,SAAS,GAAG,IAAI;QACxBV,KAAK,CAACP,iBAAiB,CAACW,IAAI,CAACE,OAAO,CAAC;QACrCN,KAAK,CAACR,cAAc,GAAGQ,KAAK,CAACR,cAAc,CAACmB,MAAM,CAAC,UAAAH,CAAC;UAAA,OAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO;QAAA,EAAC;MAClF;IACF,CAAC;IACDU,UAAU,EAAE,SAAZA,UAAUA,CAAGZ,KAAK,EAAEC,MAA8B,EAAK;MACrDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IAClC,CAAC;IACDW,QAAQ,EAAE,SAAVA,QAAQA,CAAGb,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEK,IAAAY,qBAAA,GAMHlB,YAAY,CAACmB,OAAO;EALtBhB,WAAW,GAAAe,qBAAA,CAAXf,WAAW;EACXI,gBAAgB,GAAAW,qBAAA,CAAhBX,gBAAgB;EAChBE,eAAe,GAAAS,qBAAA,CAAfT,eAAe;EACfO,UAAU,GAAAE,qBAAA,CAAVF,UAAU;EACVC,QAAQ,GAAAC,qBAAA,CAARD,QAAQ;AACe,SAAAd,WAAA,EAAAI,gBAAA,EAAAE,eAAA,EAAAO,UAAA,EAAAC,QAAA;AAEzB,eAAejB,YAAY,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}