{"ast":null,"code":"import { supabase } from './supabase';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { sendJourneySharedNotification } from './notificationTriggers';\nexport const shareJourney = async (journeyId, ownerId, friend) => {\n  if (!journeyId) {\n    Alert.alert('Error', 'No se pudo compartir el journey porque no se encontró el ID del viaje.');\n    return false;\n  }\n  try {\n    console.log('Iniciando proceso de compartir viaje:', {\n      journeyId,\n      ownerId,\n      friend\n    });\n    const {\n      data: journeyData,\n      error: journeyError\n    } = await supabase.from('journeys').select('description').eq('id', journeyId).single();\n    if (journeyError) {\n      console.error('Error obteniendo datos del viaje:', journeyError);\n      throw journeyError;\n    }\n    console.log('Datos del viaje obtenidos:', journeyData);\n    const {\n      data: sharedData,\n      error\n    } = await supabase.from('journeys_shared').insert({\n      journeyId,\n      ownerId,\n      sharedWithUserId: friend.user2Id\n    }).select();\n    if (error) {\n      console.error('Error compartiendo el viaje:', error);\n      throw error;\n    }\n    console.log('Viaje compartido exitosamente:', sharedData);\n    await sendJourneySharedNotification(friend.user2Id, friend.username, journeyData?.description || 'Un viaje');\n    console.log('Notificación enviada exitosamente');\n    Alert.alert('Éxito', `Journey compartido con ${friend.username}`);\n    return true;\n  } catch (err) {\n    console.error('Error en shareJourney:', err);\n    Alert.alert('Error', 'No se pudo compartir el journey');\n    return false;\n  }\n};","map":{"version":3,"names":["supabase","Alert","sendJourneySharedNotification","shareJourney","journeyId","ownerId","friend","alert","console","log","data","journeyData","error","journeyError","from","select","eq","single","sharedData","insert","sharedWithUserId","user2Id","username","description","err"],"sources":["C:/Users/PC/TravelQuest/src/services/shareService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport { Alert } from 'react-native';\r\nimport { sendJourneySharedNotification } from './notificationTriggers';\r\n\r\ninterface Friend {\r\n    user2Id: string;\r\n    username: string;\r\n    points: number;\r\n}\r\n\r\nexport const shareJourney = async (\r\n    journeyId: string,\r\n    ownerId: string,\r\n    friend: Friend\r\n): Promise<boolean> => {\r\n    if (!journeyId) {\r\n        Alert.alert('Error', 'No se pudo compartir el journey porque no se encontró el ID del viaje.');\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        console.log('Iniciando proceso de compartir viaje:', {\r\n            journeyId,\r\n            ownerId,\r\n            friend\r\n        });\r\n\r\n        // Obtener el título del viaje\r\n        const { data: journeyData, error: journeyError } = await supabase\r\n            .from('journeys')\r\n            .select('description')\r\n            .eq('id', journeyId)\r\n            .single();\r\n\r\n        if (journeyError) {\r\n            console.error('Error obteniendo datos del viaje:', journeyError);\r\n            throw journeyError;\r\n        }\r\n\r\n        console.log('Datos del viaje obtenidos:', journeyData);\r\n\r\n        // Compartir el viaje\r\n        const { data: sharedData, error } = await supabase\r\n            .from('journeys_shared')\r\n            .insert({\r\n                journeyId,\r\n                ownerId,\r\n                sharedWithUserId: friend.user2Id\r\n            })\r\n            .select();\r\n\r\n        if (error) {\r\n            console.error('Error compartiendo el viaje:', error);\r\n            throw error;\r\n        }\r\n\r\n        console.log('Viaje compartido exitosamente:', sharedData);\r\n\r\n        // Enviar notificación al amigo\r\n        await sendJourneySharedNotification(\r\n            friend.user2Id,\r\n            friend.username,\r\n            journeyData?.description || 'Un viaje'\r\n        );\r\n\r\n        console.log('Notificación enviada exitosamente');\r\n        Alert.alert('Éxito', `Journey compartido con ${friend.username}`);\r\n        return true;\r\n    } catch (err) {\r\n        console.error('Error en shareJourney:', err);\r\n        Alert.alert('Error', 'No se pudo compartir el journey');\r\n        return false;\r\n    }\r\n}; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAAC,OAAAC,KAAA;AAEtC,SAASC,6BAA6B,QAAQ,wBAAwB;AAQtE,OAAO,MAAMC,YAAY,GAAG,MAAAA,CACxBC,SAAiB,EACjBC,OAAe,EACfC,MAAc,KACK;EACnB,IAAI,CAACF,SAAS,EAAE;IACZH,KAAK,CAACM,KAAK,CAAC,OAAO,EAAE,wEAAwE,CAAC;IAC9F,OAAO,KAAK;EAChB;EAEA,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE;MACjDL,SAAS;MACTC,OAAO;MACPC;IACJ,CAAC,CAAC;IAGF,MAAM;MAAEI,IAAI,EAAEC,WAAW;MAAEC,KAAK,EAAEC;IAAa,CAAC,GAAG,MAAMb,QAAQ,CAC5Dc,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,aAAa,CAAC,CACrBC,EAAE,CAAC,IAAI,EAAEZ,SAAS,CAAC,CACnBa,MAAM,CAAC,CAAC;IAEb,IAAIJ,YAAY,EAAE;MACdL,OAAO,CAACI,KAAK,CAAC,mCAAmC,EAAEC,YAAY,CAAC;MAChE,MAAMA,YAAY;IACtB;IAEAL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,WAAW,CAAC;IAGtD,MAAM;MAAED,IAAI,EAAEQ,UAAU;MAAEN;IAAM,CAAC,GAAG,MAAMZ,QAAQ,CAC7Cc,IAAI,CAAC,iBAAiB,CAAC,CACvBK,MAAM,CAAC;MACJf,SAAS;MACTC,OAAO;MACPe,gBAAgB,EAAEd,MAAM,CAACe;IAC7B,CAAC,CAAC,CACDN,MAAM,CAAC,CAAC;IAEb,IAAIH,KAAK,EAAE;MACPJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACf;IAEAJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAES,UAAU,CAAC;IAGzD,MAAMhB,6BAA6B,CAC/BI,MAAM,CAACe,OAAO,EACdf,MAAM,CAACgB,QAAQ,EACfX,WAAW,EAAEY,WAAW,IAAI,UAChC,CAAC;IAEDf,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChDR,KAAK,CAACM,KAAK,CAAC,OAAO,EAAE,0BAA0BD,MAAM,CAACgB,QAAQ,EAAE,CAAC;IACjE,OAAO,IAAI;EACf,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVhB,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEY,GAAG,CAAC;IAC5CvB,KAAK,CAACM,KAAK,CAAC,OAAO,EAAE,iCAAiC,CAAC;IACvD,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}