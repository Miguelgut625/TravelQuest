{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { supabase } from \"../../services/supabase\";\nimport { completeMission } from \"../../services/pointsService\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { completeMission as dispatchCompleteMission } from \"../../features/journey/journeySlice\";\nimport ImageUploadModal from \"../../components/ImageUploadModal\";\nimport { setRefreshJournal } from \"../../features/journalSlice\";\nimport { createJournalEntry } from \"../../services/journalService\";\nimport MissionCompletedModal from \"../../components/MissionCompletedModal\";\nimport CompletingMissionModal from \"../../components/CompletingMissionModal\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar getTimeRemaining = function getTimeRemaining(endDate) {\n  var now = new Date();\n  var end = new Date(endDate);\n  var diff = end.getTime() - now.getTime();\n  if (diff <= 0) {\n    return {\n      isExpired: true,\n      text: 'Tiempo expirado'\n    };\n  }\n  var days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  var hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  var minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) {\n    return {\n      isExpired: false,\n      text: `${days} dÃ­as restantes`\n    };\n  } else if (hours > 0) {\n    return {\n      isExpired: false,\n      text: `${hours} horas restantes`\n    };\n  } else {\n    return {\n      isExpired: false,\n      text: `${minutes} minutos restantes`\n    };\n  }\n};\nvar MissionCard = function MissionCard(_ref) {\n  var mission = _ref.mission,\n    onComplete = _ref.onComplete,\n    onShare = _ref.onShare;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showUploadModal = _useState2[0],\n    setShowUploadModal = _useState2[1];\n  var timeRemaining = getTimeRemaining(mission.end_date);\n  var isExpired = timeRemaining.isExpired && !mission.completed;\n  var handleMissionPress = function handleMissionPress() {\n    if (!mission.completed && !isExpired) {\n      setShowUploadModal(true);\n    }\n  };\n  var handleUploadSuccess = function handleUploadSuccess(imageUrl) {\n    setShowUploadModal(false);\n    onComplete(imageUrl);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.card, mission.completed && styles.completedCard, isExpired && styles.expiredCard],\n      onPress: handleMissionPress,\n      disabled: mission.completed || isExpired,\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: mission.challenge.title\n        }), _jsxs(View, {\n          style: styles.badgeContainer,\n          children: [_jsx(Text, {\n            style: [styles.badge, {\n              backgroundColor: mission.completed ? '#005F9E' : isExpired ? '#D32F2F' : '#FFB74D'\n            }],\n            children: mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'\n          }), _jsx(Text, {\n            style: [styles.timeRemaining, isExpired && styles.expiredTime],\n            children: timeRemaining.text\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.cardDescription,\n        children: mission.challenge.description\n      }), _jsxs(View, {\n        style: styles.cardFooter,\n        children: [_jsxs(Text, {\n          style: styles.difficulty,\n          children: [\"Dificultad: \", mission.challenge.difficulty]\n        }), _jsxs(Text, {\n          style: styles.points,\n          children: [mission.challenge.points, \" puntos\"]\n        }), !mission.completed && !timeRemaining.isExpired && _jsx(TouchableOpacity, {\n          onPress: onShare,\n          style: styles.shareIcon,\n          children: _jsx(Ionicons, {\n            name: \"share-social\",\n            size: 20,\n            color: \"#005F9E\"\n          })\n        })]\n      })]\n    }), _jsx(ImageUploadModal, {\n      visible: showUploadModal,\n      missionId: mission.id,\n      missionTitle: mission.challenge.title,\n      onClose: function onClose() {\n        return setShowUploadModal(false);\n      },\n      onSuccess: handleUploadSuccess\n    })]\n  });\n};\nvar CityCard = function CityCard(_ref2) {\n  var cityName = _ref2.cityName,\n    totalMissions = _ref2.totalMissions,\n    completedMissions = _ref2.completedMissions,\n    expiredMissions = _ref2.expiredMissions,\n    onPress = _ref2.onPress;\n  return _jsxs(TouchableOpacity, {\n    style: styles.cityCard,\n    onPress: onPress,\n    children: [_jsxs(View, {\n      style: styles.cityCardContent,\n      children: [_jsxs(View, {\n        style: styles.cityInfo,\n        children: [_jsx(Text, {\n          style: styles.cityName,\n          children: cityName\n        }), _jsxs(Text, {\n          style: styles.missionCount,\n          children: [completedMissions, \"/\", totalMissions, \" misiones completadas\"]\n        })]\n      }), _jsx(Ionicons, {\n        name: \"chevron-forward\",\n        size: 24,\n        color: \"#666\"\n      })]\n    }), _jsx(View, {\n      style: styles.progressBar,\n      children: _jsx(View, {\n        style: [styles.progressFill, {\n          width: `${completedMissions / totalMissions * 100}%`\n        }]\n      })\n    })]\n  });\n};\nvar FriendSelectionModal = function FriendSelectionModal(_ref3) {\n  var visible = _ref3.visible,\n    onClose = _ref3.onClose,\n    onSelect = _ref3.onSelect;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    friends = _useState4[0],\n    setFriends = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  useEffect(function () {\n    if (visible) {\n      var fetchFriends = function () {\n        var _ref4 = _asyncToGenerator(function* () {\n          if (!user) {\n            setLoading(false);\n            return;\n          }\n          try {\n            setLoading(true);\n            var _yield$supabase$from$ = yield supabase.from('friends').select('user2Id').eq('user1Id', user.id),\n              friendData = _yield$supabase$from$.data,\n              error = _yield$supabase$from$.error;\n            if (error) throw error;\n            var friendDetails = yield Promise.all(friendData.map(function () {\n              var _ref5 = _asyncToGenerator(function* (friend) {\n                var _yield$supabase$from$2 = yield supabase.from('users').select('username, points').eq('id', friend.user2Id).single(),\n                  userData = _yield$supabase$from$2.data,\n                  userError = _yield$supabase$from$2.error;\n                if (userError) return null;\n                return {\n                  user2Id: friend.user2Id,\n                  username: userData.username,\n                  points: userData.points\n                };\n              });\n              return function (_x) {\n                return _ref5.apply(this, arguments);\n              };\n            }()));\n            setFriends(friendDetails.filter(function (f) {\n              return f !== null;\n            }));\n          } catch (error) {\n            console.error('Error fetching friends:', error);\n          } finally {\n            setLoading(false);\n          }\n        });\n        return function fetchFriends() {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n      fetchFriends();\n    }\n  }, [visible, user]);\n  return _jsx(Modal, {\n    visible: visible,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    transparent: true,\n    children: _jsx(View, {\n      style: modalStyles.modalOverlay,\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: modalStyles.modalTitle,\n          children: \"Selecciona un amigo\"\n        }), loading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#4CAF50\"\n        }) : _jsx(FlatList, {\n          data: friends,\n          keyExtractor: function keyExtractor(item) {\n            return item.user2Id;\n          },\n          renderItem: function renderItem(_ref6) {\n            var item = _ref6.item;\n            return _jsxs(TouchableOpacity, {\n              style: modalStyles.friendItem,\n              onPress: function onPress() {\n                return onSelect(item);\n              },\n              children: [_jsx(Text, {\n                style: modalStyles.friendName,\n                children: item.username\n              }), _jsxs(Text, {\n                style: modalStyles.friendPoints,\n                children: [\"Puntos: \", item.points]\n              })]\n            });\n          }\n        }), _jsx(TouchableOpacity, {\n          style: modalStyles.cancelButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: modalStyles.cancelButtonText,\n            children: \"Cancelar\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  friendItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  friendName: {\n    fontSize: 16\n  },\n  friendPoints: {\n    fontSize: 14,\n    color: '#666'\n  },\n  cancelButton: {\n    marginTop: 10,\n    backgroundColor: '#f44336',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nvar MissionsScreenComponent = function MissionsScreenComponent(_ref7) {\n  var route = _ref7.route,\n    navigation = _ref7.navigation;\n  var _ref8 = route.params || {},\n    journeyId = _ref8.journeyId;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    missions = _useState8[0],\n    setMissions = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    completingMission = _useState14[0],\n    setCompletingMission = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    missionCompleted = _useState16[0],\n    setMissionCompleted = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    completedMissionInfo = _useState18[0],\n    setCompletedMissionInfo = _useState18[1];\n  var _useState19 = useState(0),\n    _useState20 = _slicedToArray(_useState19, 2),\n    userPoints = _useState20[0],\n    setUserPoints = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedCity = _useState22[0],\n    setSelectedCity = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showShareModal = _useState24[0],\n    setShowShareModal = _useState24[1];\n  var dispatch = useDispatch();\n  var theme = useTheme();\n  var fetchMissions = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (!(user != null && user.id)) {\n        setError('Usuario no autenticado');\n        setLoading(false);\n        return;\n      }\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('journeys').select(`\n          id,\n          description,\n          created_at,\n          cities (\n            name\n          ),\n          journeys_missions!inner (\n            id,\n            completed,\n            challengeId,\n            end_date,\n            challenges!inner (\n              id,\n              title,\n              description,\n              difficulty,\n              points\n            )\n          )\n        `).eq('userId', user.id).order('created_at', {\n            ascending: false\n          }),\n          journeys = _yield$supabase$from$3.data,\n          journeysError = _yield$supabase$from$3.error;\n        if (journeysError) throw journeysError;\n        if (!journeys || journeys.length === 0) {\n          setError('No hay viajes disponibles');\n          setLoading(false);\n          return;\n        }\n        var allMissions = journeys.flatMap(function (journey) {\n          return journey.journeys_missions.map(function (jm) {\n            var _journey$cities;\n            return {\n              id: jm.id,\n              completed: jm.completed,\n              cityName: ((_journey$cities = journey.cities) == null ? void 0 : _journey$cities.name) || 'Ciudad Desconocida',\n              end_date: jm.end_date,\n              challenge: {\n                title: jm.challenges.title,\n                description: jm.challenges.description,\n                difficulty: jm.challenges.difficulty,\n                points: jm.challenges.points\n              }\n            };\n          });\n        });\n        var missionsByCity = {};\n        allMissions.forEach(function (mission) {\n          if (!missionsByCity[mission.cityName]) {\n            missionsByCity[mission.cityName] = {\n              completed: [],\n              pending: [],\n              expired: []\n            };\n          }\n          if (mission.completed) {\n            missionsByCity[mission.cityName].completed.push(mission);\n          } else {\n            missionsByCity[mission.cityName].pending.push(mission);\n          }\n        });\n        setMissions(missionsByCity);\n      } catch (error) {\n        console.error('Error fetching missions:', error);\n        setError('Error al cargar las misiones');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchMissions() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchMissions();\n  }, [journeyId]);\n  var handleCompleteMission = function () {\n    var _ref10 = _asyncToGenerator(function* (missionId, imageUrl) {\n      try {\n        setCompletingMission(true);\n        var foundMissionTitle = '';\n        var foundMissionPoints = 0;\n        var foundCityName = '';\n        Object.keys(missions).forEach(function (cityName) {\n          var pending = missions[cityName].pending;\n          var foundMission = pending.find(function (m) {\n            return m.id === missionId;\n          });\n          if (foundMission) {\n            foundMissionTitle = foundMission.challenge.title;\n            foundMissionPoints = foundMission.challenge.points;\n            foundCityName = cityName;\n          }\n        });\n        if (!foundMissionTitle || !foundCityName) {\n          throw new Error('MisiÃ³n no encontrada');\n        }\n        setCompletedMissionInfo({\n          title: foundMissionTitle,\n          points: foundMissionPoints,\n          cityName: foundCityName\n        });\n        yield completeMission(missionId, (user == null ? void 0 : user.id) || '', imageUrl);\n        if (imageUrl) {\n          yield createJournalEntry({\n            userId: (user == null ? void 0 : user.id) || '',\n            cityId: foundCityName || '',\n            missionId: missionId,\n            title: `MisiÃ³n completada: ${foundMissionTitle}`,\n            content: `He completado la misiÃ³n \"${foundMissionTitle}\" en ${foundCityName}. Â¡ConseguÃ­ ${foundMissionPoints} puntos!`,\n            photos: [imageUrl],\n            tags: [foundCityName || '', 'MisiÃ³n completada']\n          });\n        }\n        setMissions(function (prev) {\n          var updatedMissions = _objectSpread({}, prev);\n          var city = updatedMissions[foundCityName];\n          var index = city.pending.findIndex(function (m) {\n            return m.id === missionId;\n          });\n          if (index !== -1) {\n            var mission = _objectSpread(_objectSpread({}, city.pending[index]), {}, {\n              completed: true\n            });\n            city.pending.splice(index, 1);\n            city.completed.push(mission);\n          }\n          return updatedMissions;\n        });\n        setUserPoints(function (prev) {\n          return prev + foundMissionPoints;\n        });\n        dispatch(dispatchCompleteMission(missionId));\n        dispatch(setRefreshJournal(true));\n        setMissionCompleted(true);\n      } catch (error) {\n        console.error('Error al completar la misiÃ³n:', error);\n        Alert.alert('Error', 'No se pudo completar la misiÃ³n. IntÃ©ntalo de nuevo.');\n        setMissionCompleted(false);\n      } finally {\n        setCompletingMission(false);\n      }\n    });\n    return function handleCompleteMission(_x2, _x3) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (missionCompleted) {\n      var timer = setTimeout(function () {\n        setMissionCompleted(false);\n        navigation.navigate('Journal', {\n          refresh: true\n        });\n      }, 3000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [missionCompleted, navigation]);\n  var handleShareJourney = function () {\n    var _ref11 = _asyncToGenerator(function* (friend) {\n      if (!journeyId) {\n        Alert.alert('Error', 'No se pudo compartir el journey porque no se encontrÃ³ el ID del viaje.');\n        return;\n      }\n      try {\n        var _yield$supabase$from$4 = yield supabase.from('journeys_shared').insert({\n            journeyId: journeyId,\n            ownerId: (user == null ? void 0 : user.id) || '',\n            sharedWithUserId: friend.user2Id\n          }),\n          _error = _yield$supabase$from$4.error;\n        if (_error) throw _error;\n        Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\n      } catch (err) {\n        console.error(err);\n        Alert.alert('Error', 'No se pudo compartir el journey');\n      } finally {\n        setShowShareModal(false);\n      }\n    });\n    return function handleShareJourney(_x4) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#005F9E\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando misiones...\"\n      })]\n    });\n  }\n  if (error) {\n    return _jsxs(View, {\n      style: styles.errorContainer,\n      children: [_jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: fetchMissions,\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar\"\n        })\n      })]\n    });\n  }\n  if (!selectedCity) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Tus Ciudades\"\n        }), _jsxs(Text, {\n          style: styles.pointsText,\n          children: [\"Puntos: \", userPoints]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.citiesList,\n        children: Object.entries(missions).map(function (_ref12) {\n          var _ref13 = _slicedToArray(_ref12, 2),\n            cityName = _ref13[0],\n            missions = _ref13[1];\n          return _jsx(CityCard, {\n            cityName: cityName,\n            totalMissions: missions.completed.length + missions.pending.length,\n            completedMissions: missions.completed.length,\n            expiredMissions: missions.expired.length,\n            onPress: function onPress() {\n              return setSelectedCity(cityName);\n            }\n          }, cityName);\n        })\n      })]\n    });\n  }\n  var cityData = missions[selectedCity];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return setSelectedCity(null);\n        },\n        children: [_jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#333\"\n        }), _jsx(Text, {\n          style: styles.backButtonText,\n          children: \"Ciudades\"\n        })]\n      }), _jsxs(Text, {\n        style: styles.pointsText,\n        children: [\"Puntos: \", userPoints]\n      })]\n    }), _jsx(Text, {\n      style: styles.cityTitle,\n      children: selectedCity\n    }), _jsxs(ScrollView, {\n      style: styles.missionsList,\n      children: [cityData.pending.length > 0 && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Misiones Pendientes\"\n        }), cityData.pending.map(function (mission) {\n          return _jsx(MissionCard, {\n            mission: mission,\n            onComplete: function onComplete(imageUrl) {\n              return handleCompleteMission(mission.id, imageUrl);\n            },\n            onShare: function onShare() {\n              return setShowShareModal(true);\n            }\n          }, mission.id);\n        })]\n      }), cityData.expired.length > 0 && _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.completedDivider,\n          children: [_jsx(View, {\n            style: styles.dividerLine\n          }), _jsx(Text, {\n            style: [styles.completedText, {\n              color: '#f44336'\n            }],\n            children: \"Expiradas\"\n          }), _jsx(View, {\n            style: styles.dividerLine\n          })]\n        }), cityData.expired.map(function (mission) {\n          return _jsx(MissionCard, {\n            mission: mission,\n            onComplete: function onComplete() {},\n            onShare: function onShare() {\n              return setShowShareModal(true);\n            }\n          }, mission.id);\n        })]\n      }), cityData.completed.length > 0 && _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.completedDivider,\n          children: [_jsx(View, {\n            style: styles.dividerLine\n          }), _jsx(Text, {\n            style: styles.completedText,\n            children: \"Completadas\"\n          }), _jsx(View, {\n            style: styles.dividerLine\n          })]\n        }), cityData.completed.map(function (mission) {\n          return _jsx(MissionCard, {\n            mission: mission,\n            onComplete: function onComplete() {},\n            onShare: function onShare() {\n              return setShowShareModal(true);\n            }\n          }, mission.id);\n        })]\n      })]\n    }), _jsx(MissionCompletedModal, {\n      visible: missionCompleted,\n      missionInfo: completedMissionInfo,\n      onFinished: function onFinished() {\n        setMissionCompleted(false);\n        navigation.navigate('Journal', {\n          refresh: true\n        });\n      }\n    }), _jsx(CompletingMissionModal, {\n      visible: completingMission && !missionCompleted\n    }), _jsx(FriendSelectionModal, {\n      visible: showShareModal,\n      onClose: function onClose() {\n        return setShowShareModal(false);\n      },\n      onSelect: handleShareJourney\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backButtonText: {\n    fontSize: 16,\n    marginLeft: 5,\n    color: '#333'\n  },\n  cityTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  pointsText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#005F9E'\n  },\n  citiesList: {\n    flex: 1\n  },\n  cityCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  cityCardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cityInfo: {\n    flex: 1\n  },\n  cityName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  missionCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 2,\n    overflow: 'hidden'\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#005F9E'\n  },\n  missionsList: {\n    flex: 1\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 15\n  },\n  completedDivider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#005F9E'\n  },\n  completedText: {\n    color: '#005F9E',\n    fontWeight: 'bold',\n    marginHorizontal: 10,\n    fontSize: 16\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  completedCard: {\n    opacity: 0.8\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  badge: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  badgeContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  cardDescription: {\n    color: '#666',\n    marginBottom: 10\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  difficulty: {\n    color: '#666',\n    fontSize: 12\n  },\n  points: {\n    color: '#005F9E',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#005F9E',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  expiredCard: {\n    borderColor: '#f44336',\n    borderWidth: 1\n  },\n  timeRemaining: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4\n  },\n  expiredTime: {\n    color: '#f44336'\n  },\n  loadingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8\n  },\n  shareIcon: {\n    padding: 5\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  friendItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  friendName: {\n    fontSize: 16\n  },\n  friendPoints: {\n    fontSize: 14,\n    color: '#666'\n  },\n  cancelButton: {\n    marginTop: 10,\n    backgroundColor: '#D32F2F',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nvar MissionsScreen = function MissionsScreen(props) {\n  return _jsx(MissionsScreenComponent, _objectSpread({}, props));\n};\nexport default MissionsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","ScrollView","Modal","FlatList","useSelector","useDispatch","supabase","completeMission","Ionicons","useTheme","dispatchCompleteMission","ImageUploadModal","setRefreshJournal","createJournalEntry","MissionCompletedModal","CompletingMissionModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getTimeRemaining","endDate","now","Date","end","diff","getTime","isExpired","text","days","Math","floor","hours","minutes","MissionCard","_ref","mission","onComplete","onShare","_useState","_useState2","_slicedToArray","showUploadModal","setShowUploadModal","timeRemaining","end_date","completed","handleMissionPress","handleUploadSuccess","imageUrl","children","style","styles","card","completedCard","expiredCard","onPress","disabled","cardHeader","cardTitle","challenge","title","badgeContainer","badge","backgroundColor","expiredTime","cardDescription","description","cardFooter","difficulty","points","shareIcon","name","size","color","visible","missionId","id","missionTitle","onClose","onSuccess","CityCard","_ref2","cityName","totalMissions","completedMissions","expiredMissions","cityCard","cityCardContent","cityInfo","missionCount","progressBar","progressFill","width","FriendSelectionModal","_ref3","onSelect","_useState3","_useState4","friends","setFriends","_useState5","_useState6","loading","setLoading","user","state","auth","fetchFriends","_ref4","_asyncToGenerator","_yield$supabase$from$","from","select","eq","friendData","data","error","friendDetails","Promise","all","map","_ref5","friend","_yield$supabase$from$2","user2Id","single","userData","userError","username","_x","apply","arguments","filter","f","console","animationType","onRequestClose","transparent","modalStyles","modalOverlay","modalContent","modalTitle","keyExtractor","item","renderItem","_ref6","friendItem","friendName","friendPoints","cancelButton","cancelButtonText","create","flex","justifyContent","alignItems","borderRadius","padding","maxHeight","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","marginTop","MissionsScreenComponent","_ref7","route","navigation","_ref8","params","journeyId","_useSelector","_useState7","_useState8","missions","setMissions","_useState9","_useState10","_useState11","_useState12","setError","_useState13","_useState14","completingMission","setCompletingMission","_useState15","_useState16","missionCompleted","setMissionCompleted","_useState17","_useState18","completedMissionInfo","setCompletedMissionInfo","_useState19","_useState20","userPoints","setUserPoints","_useState21","_useState22","selectedCity","setSelectedCity","_useState23","_useState24","showShareModal","setShowShareModal","dispatch","theme","fetchMissions","_ref9","_yield$supabase$from$3","order","ascending","journeys","journeysError","length","allMissions","flatMap","journey","journeys_missions","jm","_journey$cities","cities","challenges","missionsByCity","forEach","pending","expired","push","handleCompleteMission","_ref10","foundMissionTitle","foundMissionPoints","foundCityName","Object","keys","foundMission","find","m","Error","userId","cityId","content","photos","tags","prev","updatedMissions","_objectSpread","city","index","findIndex","splice","alert","_x2","_x3","timer","setTimeout","navigate","refresh","clearTimeout","handleShareJourney","_ref11","_yield$supabase$from$4","insert","ownerId","sharedWithUserId","err","_x4","loadingContainer","loadingText","errorContainer","errorText","retryButton","retryButtonText","container","header","pointsText","citiesList","entries","_ref12","_ref13","cityData","backButton","backButtonText","cityTitle","missionsList","sectionTitle","completedDivider","dividerLine","completedText","missionInfo","onFinished","flexDirection","marginLeft","textAlign","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","marginVertical","marginHorizontal","opacity","paddingHorizontal","paddingVertical","borderColor","borderWidth","loadingOverlay","position","top","left","right","bottom","MissionsScreen","props"],"sources":["C:/Users/migue/TravelQuest/src/screens/main/MissionsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert, ScrollView, Modal, FlatList } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../features/store';\r\nimport { supabase } from '../../services/supabase';\r\nimport { completeMission } from '../../services/pointsService';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Card, ProgressBar, useTheme, Surface } from 'react-native-paper';\r\nimport { completeMission as dispatchCompleteMission } from '../../features/journey/journeySlice';\r\nimport ImageUploadModal from '../../components/ImageUploadModal';\r\nimport { setRefreshJournal } from '../../features/journalSlice';\r\nimport { createJournalEntry } from '../../services/journalService';\r\nimport MissionCompletedModal from '../../components/MissionCompletedModal';\r\nimport CompletingMissionModal from '../../components/CompletingMissionModal';\r\n\r\ntype MissionsScreenRouteProp = RouteProp<{\r\n  Missions: {\r\n    journeyId: string;\r\n    challenges: JourneyMission[];\r\n  };\r\n}, 'Missions'>;\r\n\r\ninterface MissionsScreenProps {\r\n  route: MissionsScreenRouteProp;\r\n  navigation: any;\r\n}\r\n\r\ninterface CityMissions {\r\n  [cityName: string]: {\r\n    completed: JourneyMission[];\r\n    pending: JourneyMission[];\r\n    expired: JourneyMission[];\r\n  };\r\n}\r\n\r\ninterface JourneyMission {\r\n  id: string;\r\n  completed: boolean;\r\n  cityName: string;\r\n  end_date: string;\r\n  challenge: {\r\n    title: string;\r\n    description: string;\r\n    difficulty: string;\r\n    points: number;\r\n  };\r\n}\r\n\r\ninterface Friend {\r\n  user2Id: string;\r\n  username: string;\r\n  points: number;\r\n}\r\n\r\ninterface Journey {\r\n  id: string;\r\n  description: string;\r\n  created_at: string;\r\n  cities?: {\r\n    name: string;\r\n  };\r\n  journeys_missions: {\r\n    id: string;\r\n    completed: boolean;\r\n    challengeId: string;\r\n    end_date: string;\r\n    challenges: {\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      difficulty: string;\r\n      points: number;\r\n    };\r\n  }[];\r\n}\r\n\r\nconst getTimeRemaining = (endDate: string) => {\r\n  const now = new Date();\r\n  const end = new Date(endDate);\r\n  const diff = end.getTime() - now.getTime();\r\n  \r\n  if (diff <= 0) {\r\n    return {\r\n      isExpired: true,\r\n      text: 'Tiempo expirado'\r\n    };\r\n  }\r\n\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  if (days > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${days} dÃ­as restantes`\r\n    };\r\n  } else if (hours > 0) {\r\n    return {\r\n      isExpired: false,\r\n      text: `${hours} horas restantes`\r\n    };\r\n  } else {\r\n    return {\r\n      isExpired: false,\r\n      text: `${minutes} minutos restantes`\r\n    };\r\n  }\r\n};\r\n\r\nconst MissionCard = ({ mission, onComplete, onShare }: { \r\n  mission: JourneyMission; \r\n  onComplete: (imageUrl?: string) => void;\r\n  onShare: () => void;\r\n}) => {\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const timeRemaining = getTimeRemaining(mission.end_date);\r\n  const isExpired = timeRemaining.isExpired && !mission.completed;\r\n\r\n  const handleMissionPress = () => {\r\n    if (!mission.completed && !isExpired) {\r\n      setShowUploadModal(true);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (imageUrl: string) => {\r\n    setShowUploadModal(false);\r\n    onComplete(imageUrl);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.card,\r\n          mission.completed && styles.completedCard,\r\n          isExpired && styles.expiredCard\r\n        ]}\r\n        onPress={handleMissionPress}\r\n        disabled={mission.completed || isExpired}\r\n      >\r\n        <View style={styles.cardHeader}>\r\n          <Text style={styles.cardTitle}>{mission.challenge.title}</Text>\r\n          <View style={styles.badgeContainer}>\r\n            <Text style={[\r\n              styles.badge,\r\n              { backgroundColor: mission.completed ? '#005F9E' : isExpired ? '#D32F2F' : '#FFB74D' }\r\n            ]}>\r\n              {mission.completed ? 'Completada' : isExpired ? 'Expirada' : 'Pendiente'}\r\n            </Text>\r\n            <Text style={[\r\n              styles.timeRemaining,\r\n              isExpired && styles.expiredTime\r\n            ]}>\r\n              {timeRemaining.text}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <Text style={styles.cardDescription}>{mission.challenge.description}</Text>\r\n        <View style={styles.cardFooter}>\r\n          <Text style={styles.difficulty}>Dificultad: {mission.challenge.difficulty}</Text>\r\n          <Text style={styles.points}>{mission.challenge.points} puntos</Text>\r\n          {(!mission.completed && !timeRemaining.isExpired) && (\r\n            <TouchableOpacity onPress={onShare} style={styles.shareIcon}>\r\n              <Ionicons name=\"share-social\" size={20} color=\"#005F9E\" />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      <ImageUploadModal\r\n        visible={showUploadModal}\r\n        missionId={mission.id}\r\n        missionTitle={mission.challenge.title}\r\n        onClose={() => setShowUploadModal(false)}\r\n        onSuccess={handleUploadSuccess}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CityCard = ({ cityName, totalMissions, completedMissions, expiredMissions, onPress }: { \r\n  cityName: string; \r\n  totalMissions: number;\r\n  completedMissions: number;\r\n  expiredMissions?: number;\r\n  onPress: () => void;\r\n}) => (\r\n  <TouchableOpacity style={styles.cityCard} onPress={onPress}>\r\n    <View style={styles.cityCardContent}>\r\n      <View style={styles.cityInfo}>\r\n        <Text style={styles.cityName}>{cityName}</Text>\r\n        <Text style={styles.missionCount}>\r\n          {completedMissions}/{totalMissions} misiones completadas\r\n        </Text>\r\n      </View>\r\n      <Ionicons name=\"chevron-forward\" size={24} color=\"#666\" />\r\n    </View>\r\n    <View style={styles.progressBar}>\r\n      <View \r\n        style={[\r\n          styles.progressFill, \r\n          { width: `${(completedMissions / totalMissions) * 100}%` }\r\n        ]} \r\n      />\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst FriendSelectionModal = ({ visible, onClose, onSelect }: { \r\n  visible: boolean; \r\n  onClose: () => void; \r\n  onSelect: (friend: Friend) => void;\r\n}) => {\r\n  const [friends, setFriends] = useState<Friend[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      const fetchFriends = async () => {\r\n        if (!user) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        try {\r\n          setLoading(true);\r\n          const { data: friendData, error } = await supabase\r\n            .from('friends')\r\n            .select('user2Id')\r\n            .eq('user1Id', user.id);\r\n          if (error) throw error;\r\n\r\n          const friendDetails = await Promise.all(\r\n            friendData.map(async (friend: { user2Id: string }) => {\r\n              const { data: userData, error: userError } = await supabase\r\n                .from('users')\r\n                .select('username, points')\r\n                .eq('id', friend.user2Id)\r\n                .single();\r\n              if (userError) return null;\r\n              return {\r\n                user2Id: friend.user2Id,\r\n                username: userData.username,\r\n                points: userData.points,\r\n              };\r\n            })\r\n          );\r\n\r\n          setFriends(friendDetails.filter((f) => f !== null) as Friend[]);\r\n        } catch (error) {\r\n          console.error('Error fetching friends:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchFriends();\r\n    }\r\n  }, [visible, user]);\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\" onRequestClose={onClose} transparent>\r\n      <View style={modalStyles.modalOverlay}>\r\n        <View style={modalStyles.modalContent}>\r\n          <Text style={modalStyles.modalTitle}>Selecciona un amigo</Text>\r\n          {loading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n          ) : (\r\n            <FlatList\r\n              data={friends}\r\n              keyExtractor={(item) => item.user2Id}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity style={modalStyles.friendItem} onPress={() => onSelect(item)}>\r\n                  <Text style={modalStyles.friendName}>{item.username}</Text>\r\n                  <Text style={modalStyles.friendPoints}>Puntos: {item.points}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          )}\r\n          <TouchableOpacity style={modalStyles.cancelButton} onPress={onClose}>\r\n            <Text style={modalStyles.cancelButtonText}>Cancelar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyles = StyleSheet.create({\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    maxHeight: '80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  friendItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc'\r\n  },\r\n  friendName: {\r\n    fontSize: 16\r\n  },\r\n  friendPoints: {\r\n    fontSize: 14,\r\n    color: '#666'\r\n  },\r\n  cancelButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#f44336',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  cancelButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst MissionsScreenComponent = ({ route, navigation }: MissionsScreenProps) => {\r\n  const { journeyId } = route.params || {};\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [missions, setMissions] = useState<CityMissions>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [completingMission, setCompletingMission] = useState(false);\r\n  const [missionCompleted, setMissionCompleted] = useState(false);\r\n  const [completedMissionInfo, setCompletedMissionInfo] = useState<{\r\n    title: string;\r\n    points: number;\r\n    cityName: string;\r\n  } | null>(null);\r\n  const [userPoints, setUserPoints] = useState(0);\r\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const fetchMissions = async () => {\r\n    if (!user?.id) {\r\n      setError('Usuario no autenticado');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: journeys, error: journeysError } = await supabase\r\n        .from('journeys')\r\n        .select(`\r\n          id,\r\n          description,\r\n          created_at,\r\n          cities (\r\n            name\r\n          ),\r\n          journeys_missions!inner (\r\n            id,\r\n            completed,\r\n            challengeId,\r\n            end_date,\r\n            challenges!inner (\r\n              id,\r\n              title,\r\n              description,\r\n              difficulty,\r\n              points\r\n            )\r\n          )\r\n        `)\r\n        .eq('userId', user.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (journeysError) throw journeysError;\r\n\r\n      if (!journeys || journeys.length === 0) {\r\n        setError('No hay viajes disponibles');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allMissions = journeys.flatMap((journey: Journey) => \r\n        journey.journeys_missions.map((jm) => ({\r\n          id: jm.id,\r\n          completed: jm.completed,\r\n          cityName: journey.cities?.name || 'Ciudad Desconocida',\r\n          end_date: jm.end_date,\r\n          challenge: {\r\n            title: jm.challenges.title,\r\n            description: jm.challenges.description,\r\n            difficulty: jm.challenges.difficulty,\r\n            points: jm.challenges.points\r\n          }\r\n        }))\r\n      );\r\n\r\n      // Organizar misiones por ciudad\r\n      const missionsByCity: CityMissions = {};\r\n      allMissions.forEach((mission: JourneyMission) => {\r\n        if (!missionsByCity[mission.cityName]) {\r\n          missionsByCity[mission.cityName] = {\r\n            completed: [],\r\n            pending: [],\r\n            expired: []\r\n          };\r\n        }\r\n        if (mission.completed) {\r\n          missionsByCity[mission.cityName].completed.push(mission);\r\n        } else {\r\n          missionsByCity[mission.cityName].pending.push(mission);\r\n        }\r\n      });\r\n\r\n      setMissions(missionsByCity);\r\n    } catch (error) {\r\n      console.error('Error fetching missions:', error);\r\n      setError('Error al cargar las misiones');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMissions();\r\n  }, [journeyId]);\r\n\r\n  const handleCompleteMission = async (missionId: string, imageUrl?: string) => {\r\n    try {\r\n      setCompletingMission(true);\r\n      \r\n      // Encontrar la misiÃ³n en el estado local\r\n      let foundMissionTitle = '';\r\n      let foundMissionPoints = 0;\r\n      let foundCityName = '';\r\n      \r\n      Object.keys(missions).forEach((cityName) => {\r\n        const pending = missions[cityName].pending;\r\n        const foundMission = pending.find((m) => m.id === missionId);\r\n        if (foundMission) {\r\n          foundMissionTitle = foundMission.challenge.title;\r\n          foundMissionPoints = foundMission.challenge.points;\r\n          foundCityName = cityName;\r\n        }\r\n      });\r\n      \r\n      if (!foundMissionTitle || !foundCityName) {\r\n        throw new Error('MisiÃ³n no encontrada');\r\n      }\r\n      \r\n      // Guardar informaciÃ³n de la misiÃ³n antes de completarla\r\n      setCompletedMissionInfo({\r\n        title: foundMissionTitle,\r\n        points: foundMissionPoints,\r\n        cityName: foundCityName\r\n      });\r\n\r\n      // Completar misiÃ³n en la base de datos\r\n      await completeMission(\r\n        missionId, \r\n        user?.id || '', \r\n        imageUrl\r\n      );\r\n\r\n      // Crear entrada en el diario para esta misiÃ³n completada\r\n      if (imageUrl) {\r\n        await createJournalEntry({\r\n          userId: user?.id || '',\r\n          cityId: foundCityName || '',\r\n          missionId: missionId,\r\n          title: `MisiÃ³n completada: ${foundMissionTitle}`,\r\n          content: `He completado la misiÃ³n \"${foundMissionTitle}\" en ${foundCityName}. Â¡ConseguÃ­ ${foundMissionPoints} puntos!`,\r\n          photos: [imageUrl],\r\n          tags: [foundCityName || '', 'MisiÃ³n completada']\r\n        });\r\n      }\r\n\r\n      // Actualizar el estado local\r\n      setMissions((prev) => {\r\n        const updatedMissions = { ...prev };\r\n        const city = updatedMissions[foundCityName];\r\n        \r\n        // Encontrar el Ã­ndice de la misiÃ³n en las pendientes\r\n        const index = city.pending.findIndex((m) => m.id === missionId);\r\n        \r\n        if (index !== -1) {\r\n          // Obtener la misiÃ³n y marcarla como completada\r\n          const mission = { ...city.pending[index], completed: true };\r\n          \r\n          // Eliminar la misiÃ³n de pendientes\r\n          city.pending.splice(index, 1);\r\n          \r\n          // AÃ±adir la misiÃ³n a completadas\r\n          city.completed.push(mission);\r\n        }\r\n        \r\n        return updatedMissions;\r\n      });\r\n\r\n      // Actualizar la UI de puntos\r\n      setUserPoints((prev) => prev + foundMissionPoints);\r\n      \r\n      // Actualizar el estado global\r\n      dispatch(dispatchCompleteMission(missionId));\r\n      dispatch(setRefreshJournal(true));\r\n\r\n      // Mostrar el modal de misiÃ³n completada\r\n      setMissionCompleted(true);\r\n\r\n    } catch (error) {\r\n      console.error('Error al completar la misiÃ³n:', error);\r\n      Alert.alert('Error', 'No se pudo completar la misiÃ³n. IntÃ©ntalo de nuevo.');\r\n      setMissionCompleted(false);\r\n    } finally {\r\n      setCompletingMission(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (missionCompleted) {\r\n      // Si la misiÃ³n se completÃ³, programar la navegaciÃ³n al diario\r\n      const timer = setTimeout(() => {\r\n        setMissionCompleted(false);\r\n        navigation.navigate('Journal', { refresh: true });\r\n      }, 3000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [missionCompleted, navigation]);\r\n\r\n  const handleShareJourney = async (friend: Friend) => {\r\n    if (!journeyId) {\r\n      Alert.alert('Error', 'No se pudo compartir el journey porque no se encontrÃ³ el ID del viaje.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const { error } = await supabase\r\n        .from('journeys_shared')\r\n        .insert({\r\n          journeyId: journeyId,\r\n          ownerId: user?.id || '',\r\n          sharedWithUserId: friend.user2Id\r\n        });\r\n      if (error) throw error;\r\n      Alert.alert('Ãxito', `Journey compartido con ${friend.username}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert('Error', 'No se pudo compartir el journey');\r\n    } finally {\r\n      setShowShareModal(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#005F9E\" />\r\n        <Text style={styles.loadingText}>Cargando misiones...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={fetchMissions}>\r\n          <Text style={styles.retryButtonText}>Reintentar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!selectedCity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Tus Ciudades</Text>\r\n          <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n        </View>\r\n        <ScrollView style={styles.citiesList}>\r\n          {Object.entries(missions).map(([cityName, missions]) => (\r\n            <CityCard\r\n              key={cityName}\r\n              cityName={cityName}\r\n              totalMissions={missions.completed.length + missions.pending.length}\r\n              completedMissions={missions.completed.length}\r\n              expiredMissions={missions.expired.length}\r\n              onPress={() => setSelectedCity(cityName)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const cityData = missions[selectedCity];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => setSelectedCity(null)}\r\n        >\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\r\n          <Text style={styles.backButtonText}>Ciudades</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.pointsText}>Puntos: {userPoints}</Text>\r\n      </View>\r\n      \r\n      <Text style={styles.cityTitle}>{selectedCity}</Text>\r\n      \r\n      <ScrollView style={styles.missionsList}>\r\n        {cityData.pending.length > 0 && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Misiones Pendientes</Text>\r\n            {cityData.pending.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={(imageUrl) => handleCompleteMission(mission.id, imageUrl)}\r\n                onShare={() => setShowShareModal(true)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.expired.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={[styles.completedText, { color: '#f44336' }]}>Expiradas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.expired.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n                onShare={() => setShowShareModal(true)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {cityData.completed.length > 0 && (\r\n          <>\r\n            <View style={styles.completedDivider}>\r\n              <View style={styles.dividerLine} />\r\n              <Text style={styles.completedText}>Completadas</Text>\r\n              <View style={styles.dividerLine} />\r\n            </View>\r\n            {cityData.completed.map(mission => (\r\n              <MissionCard\r\n                key={mission.id}\r\n                mission={mission}\r\n                onComplete={() => {}}\r\n                onShare={() => setShowShareModal(true)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n\r\n      {/* Modal de misiÃ³n completada */}\r\n      <MissionCompletedModal\r\n        visible={missionCompleted}\r\n        missionInfo={completedMissionInfo}\r\n        onFinished={() => {\r\n          setMissionCompleted(false);\r\n          navigation.navigate('Journal', { refresh: true });\r\n        }}\r\n      />\r\n      \r\n      {/* Modal de carga durante el proceso */}\r\n      <CompletingMissionModal\r\n        visible={completingMission && !missionCompleted}\r\n      />\r\n\r\n      <FriendSelectionModal \r\n        visible={showShareModal} \r\n        onClose={() => setShowShareModal(false)}\r\n        onSelect={handleShareJourney}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  backButtonText: {\r\n    fontSize: 16,\r\n    marginLeft: 5,\r\n    color: '#333',\r\n  },\r\n  cityTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  pointsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#005F9E',\r\n  },\r\n  citiesList: {\r\n    flex: 1,\r\n  },\r\n  cityCard: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  cityCardContent: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cityInfo: {\r\n    flex: 1,\r\n  },\r\n  cityName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  missionCount: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  progressBar: {\r\n    height: 4,\r\n    backgroundColor: '#E0E0E0',\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#005F9E',\r\n  },\r\n  missionsList: {\r\n    flex: 1,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 15,\r\n  },\r\n  completedDivider: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  dividerLine: {\r\n    flex: 1,\r\n    height: 1,\r\n    backgroundColor: '#005F9E',\r\n  },\r\n  completedText: {\r\n    color: '#005F9E',\r\n    fontWeight: 'bold',\r\n    marginHorizontal: 10,\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  completedCard: {\r\n    opacity: 0.8,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 15,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  badgeContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  difficulty: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  points: {\r\n    color: '#005F9E',\r\n    fontWeight: 'bold',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#005F9E',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  retryButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  expiredCard: {\r\n    borderColor: '#f44336',\r\n    borderWidth: 1,\r\n  },\r\n  timeRemaining: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n  },\r\n  expiredTime: {\r\n    color: '#f44336',\r\n  },\r\n  loadingOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 8,\r\n  },\r\n  shareIcon: {\r\n    padding: 5,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    maxHeight: '80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  friendItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc'\r\n  },\r\n  friendName: {\r\n    fontSize: 16\r\n  },\r\n  friendPoints: {\r\n    fontSize: 14,\r\n    color: '#666'\r\n  },\r\n  cancelButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#D32F2F',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  cancelButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst MissionsScreen = (props: any) => {\r\n  return <MissionsScreenComponent {...props} />;\r\n};\r\n\r\nexport default MissionsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}