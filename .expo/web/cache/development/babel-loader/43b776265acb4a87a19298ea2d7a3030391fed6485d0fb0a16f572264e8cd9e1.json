{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { WebView } from 'react-native-webview';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SimpleWebView = function SimpleWebView(_ref) {\n  var style = _ref.style;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loading = _React$useState2[0],\n    setLoading = _React$useState2[1];\n  var htmlContent = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <style>\n          body {\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background: linear-gradient(135deg, #005F9E, #00C6FF);\n            color: white;\n            text-align: center;\n          }\n          .container {\n            padding: 20px;\n          }\n          h1 {\n            margin-bottom: 20px;\n          }\n          button {\n            background-color: white;\n            color: #005F9E;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            font-size: 16px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n          }\n          button:hover {\n            background-color: #f0f0f0;\n            transform: scale(1.05);\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <h1>TravelQuest WebView Test</h1>\n          <p>Este es un test básico de WebView para verificar su funcionamiento.</p>\n          <button id=\"testButton\">Cambiar Color</button>\n        </div>\n        <script>\n          let isBlue = true;\n          document.getElementById('testButton').addEventListener('click', function() {\n            if (isBlue) {\n              document.body.style.background = 'linear-gradient(135deg, #FF5722, #FFC107)';\n            } else {\n              document.body.style.background = 'linear-gradient(135deg, #005F9E, #00C6FF)';\n            }\n            isBlue = !isBlue;\n          });\n        </script>\n      </body>\n    </html>\n  `;\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [loading && _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#005F9E\"\n      })\n    }), _jsx(WebView, {\n      originWhitelist: ['*'],\n      source: {\n        html: htmlContent\n      },\n      style: styles.webview,\n      onLoadEnd: function onLoadEnd() {\n        return setLoading(false);\n      },\n      javaScriptEnabled: true,\n      domStorageEnabled: true\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  webview: {\n    flex: 1\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    zIndex: 1\n  }\n});\nexport default SimpleWebView;","map":{"version":3,"names":["React","WebView","View","StyleSheet","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","SimpleWebView","_ref","style","_React$useState","useState","_React$useState2","_slicedToArray","loading","setLoading","htmlContent","styles","container","children","loadingContainer","size","color","originWhitelist","source","html","webview","onLoadEnd","javaScriptEnabled","domStorageEnabled","create","flex","position","top","left","right","bottom","justifyContent","alignItems","backgroundColor","zIndex"],"sources":["C:/Users/migue/TravelQuest/src/components/SimpleWebView.tsx"],"sourcesContent":["import React from 'react';\r\nimport { WebView } from 'react-native-webview';\r\nimport { View, StyleSheet, ActivityIndicator } from 'react-native';\r\n\r\ninterface SimpleWebViewProps {\r\n  style?: any;\r\n}\r\n\r\nconst SimpleWebView: React.FC<SimpleWebViewProps> = ({ style }) => {\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  // HTML simple para probar WebView\r\n  const htmlContent = `\r\n    <!DOCTYPE html>\r\n    <html>\r\n      <head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <style>\r\n          body {\r\n            font-family: Arial, sans-serif;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            margin: 0;\r\n            background: linear-gradient(135deg, #005F9E, #00C6FF);\r\n            color: white;\r\n            text-align: center;\r\n          }\r\n          .container {\r\n            padding: 20px;\r\n          }\r\n          h1 {\r\n            margin-bottom: 20px;\r\n          }\r\n          button {\r\n            background-color: white;\r\n            color: #005F9E;\r\n            border: none;\r\n            padding: 10px 20px;\r\n            border-radius: 5px;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            transition: all 0.3s ease;\r\n          }\r\n          button:hover {\r\n            background-color: #f0f0f0;\r\n            transform: scale(1.05);\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"container\">\r\n          <h1>TravelQuest WebView Test</h1>\r\n          <p>Este es un test básico de WebView para verificar su funcionamiento.</p>\r\n          <button id=\"testButton\">Cambiar Color</button>\r\n        </div>\r\n        <script>\r\n          let isBlue = true;\r\n          document.getElementById('testButton').addEventListener('click', function() {\r\n            if (isBlue) {\r\n              document.body.style.background = 'linear-gradient(135deg, #FF5722, #FFC107)';\r\n            } else {\r\n              document.body.style.background = 'linear-gradient(135deg, #005F9E, #00C6FF)';\r\n            }\r\n            isBlue = !isBlue;\r\n          });\r\n        </script>\r\n      </body>\r\n    </html>\r\n  `;\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      {loading && (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#005F9E\" />\r\n        </View>\r\n      )}\r\n      <WebView\r\n        originWhitelist={['*']}\r\n        source={{ html: htmlContent }}\r\n        style={styles.webview}\r\n        onLoadEnd={() => setLoading(false)}\r\n        javaScriptEnabled={true}\r\n        domStorageEnabled={true}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative',\r\n  },\r\n  webview: {\r\n    flex: 1,\r\n  },\r\n  loadingContainer: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    zIndex: 1,\r\n  },\r\n});\r\n\r\nexport default SimpleWebView; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,sBAAsB;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAO/C,IAAMC,aAA2C,GAAG,SAA9CA,aAA2CA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC1D,IAAAC,eAAA,GAA8BZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA3CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAG1B,IAAMI,WAAW,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,OACEV,KAAA,CAACN,IAAI;IAACS,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAS,EAAET,KAAK,CAAE;IAAAU,QAAA,GACpCL,OAAO,IACNV,IAAA,CAACJ,IAAI;MAACS,KAAK,EAAEQ,MAAM,CAACG,gBAAiB;MAAAD,QAAA,EACnCf,IAAA,CAACF,iBAAiB;QAACmB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE;IAAC,CAC9C,CACP,EACDlB,IAAA,CAACL,OAAO;MACNwB,eAAe,EAAE,CAAC,GAAG,CAAE;MACvBC,MAAM,EAAE;QAAEC,IAAI,EAAET;MAAY,CAAE;MAC9BP,KAAK,EAAEQ,MAAM,CAACS,OAAQ;MACtBC,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,OAAQZ,UAAU,CAAC,KAAK,CAAC;MAAA,CAAC;MACnCa,iBAAiB,EAAE,IAAK;MACxBC,iBAAiB,EAAE;IAAK,CACzB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMZ,MAAM,GAAGhB,UAAU,CAAC6B,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDN,OAAO,EAAE;IACPK,IAAI,EAAE;EACR,CAAC;EACDX,gBAAgB,EAAE;IAChBY,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,0BAA0B;IAC3CC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAejC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}