{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\TravelQuest\\\\src\\\\components\\\\maps.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [mapReady, setMapReady] = useState(false);\n  useEffect(() => {\n    console.log('Map props:', JSON.stringify(props, null, 2));\n    if (Platform.OS === 'android') {\n      console.log('Inicializando mapa en Android...');\n      const timeoutId = setTimeout(() => {\n        if (!mapReady) {\n          console.log('El mapa no está listo después del tiempo de espera, intentando refrescar...');\n        }\n      }, 5000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [props, mapReady]);\n  if (Platform.OS === 'web') {\n    return _jsxDEV(View, {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: _jsxDEV(MapView, Object.assign({}, props, {\n        style: [{\n          height: '100%',\n          width: '100%'\n        }, props.style]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  try {\n    if (hasError) {\n      return _jsxDEV(View, {\n        style: [styles.container, styles.errorContainer],\n        children: _jsxDEV(Text, {\n          style: styles.errorText,\n          children: errorMessage || 'Error al cargar el mapa. Por favor, verifica tu conexión.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(MapView, Object.assign({\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        showsMyLocationButton: true,\n        loadingEnabled: true,\n        loadingIndicatorColor: \"#4CAF50\",\n        loadingBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        zoomControlEnabled: true,\n        zoomEnabled: true\n      }, props, {\n        style: [styles.map, props.style],\n        onMapReady: () => {\n          console.log('Mapa cargado correctamente');\n          setMapReady(true);\n        },\n        onRegionChangeComplete: region => {\n          console.log('Región cambiada:', region);\n          if (props.onRegionChangeComplete) {\n            props.onRegionChangeComplete(region);\n          }\n        },\n        moveOnMarkerPress: false,\n        pitchEnabled: false,\n        toolbarEnabled: false\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } catch (error) {\n    console.error('Error renderizando el mapa:', error);\n    return _jsxDEV(View, {\n      style: [styles.container, styles.errorContainer],\n      children: _jsxDEV(Text, {\n        style: styles.errorText,\n        children: [\"Error en renderizado del mapa: \", error.message || 'Desconocido']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n};\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%'\n  },\n  map: {\n    height: '100%',\n    width: '100%'\n  },\n  errorContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    color: '#f44336',\n    textAlign: 'center',\n    padding: 20\n  }\n});\nexport const MapMarker = Marker;\nexport default Map;","map":{"version":3,"names":["React","useState","useEffect","Platform","View","StyleSheet","Text","MapView","Marker","PROVIDER_GOOGLE","jsxDEV","_jsxDEV","Map","props","hasError","setHasError","errorMessage","setErrorMessage","mapReady","setMapReady","console","log","JSON","stringify","OS","timeoutId","setTimeout","clearTimeout","style","height","width","children","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","errorContainer","errorText","provider","showsUserLocation","showsMyLocationButton","loadingEnabled","loadingIndicatorColor","loadingBackgroundColor","zoomControlEnabled","zoomEnabled","map","onMapReady","onRegionChangeComplete","region","moveOnMarkerPress","pitchEnabled","toolbarEnabled","error","message","create","justifyContent","alignItems","backgroundColor","color","textAlign","padding","MapMarker"],"sources":["C:/Users/PC/TravelQuest/src/components/maps.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Platform, View, StyleSheet, Text } from 'react-native';\r\nimport MapView, { Marker, MapViewProps, PROVIDER_GOOGLE, Region } from 'react-native-maps';\r\n\r\nconst Map = (props: MapViewProps) => {\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [mapReady, setMapReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Log para verificar qué propiedades se están pasando al mapa\r\n    console.log('Map props:', JSON.stringify(props, null, 2));\r\n    \r\n    // En Android, podemos necesitar inicializar el mapa de una manera específica\r\n    if (Platform.OS === 'android') {\r\n      console.log('Inicializando mapa en Android...');\r\n      \r\n      // Esto puede ayudar a resolver problemas con la visualización del mapa en Android\r\n      const timeoutId = setTimeout(() => {\r\n        if (!mapReady) {\r\n          console.log('El mapa no está listo después del tiempo de espera, intentando refrescar...');\r\n        }\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [props, mapReady]);\r\n\r\n  if (Platform.OS === 'web') {\r\n    return (\r\n      <View style={{ height: '100%', width: '100%' }}>\r\n        <MapView\r\n          {...props}\r\n          style={[{ height: '100%', width: '100%' }, props.style]}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Usamos un componente envoltorio para capturar errores\r\n  try {\r\n    // Si ya tenemos un error, mostramos el fallback\r\n    if (hasError) {\r\n      return (\r\n        <View style={[styles.container, styles.errorContainer]}>\r\n          <Text style={styles.errorText}>\r\n            {errorMessage || 'Error al cargar el mapa. Por favor, verifica tu conexión.'}\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <MapView\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          showsMyLocationButton={true}\r\n          loadingEnabled={true}\r\n          loadingIndicatorColor=\"#4CAF50\"\r\n          loadingBackgroundColor=\"rgba(255, 255, 255, 0.5)\"\r\n          zoomControlEnabled={true}\r\n          zoomEnabled={true}\r\n          {...props}\r\n          style={[styles.map, props.style]}\r\n          onMapReady={() => {\r\n            console.log('Mapa cargado correctamente');\r\n            setMapReady(true);\r\n          }}\r\n          onRegionChangeComplete={(region: Region) => {\r\n            console.log('Región cambiada:', region);\r\n            if (props.onRegionChangeComplete) {\r\n              // @ts-ignore: Manejar la diferencia en la definición de tipo\r\n              props.onRegionChangeComplete(region);\r\n            }\r\n          }}\r\n          // Configuración específica para Android para mejorar rendimiento\r\n          moveOnMarkerPress={false}\r\n          pitchEnabled={false}\r\n          toolbarEnabled={false}\r\n        />\r\n      </View>\r\n    );\r\n  } catch (error: any) {\r\n    console.error('Error renderizando el mapa:', error);\r\n    // Fallback si hay un error con el mapa\r\n    return (\r\n      <View style={[styles.container, styles.errorContainer]}>\r\n        <Text style={styles.errorText}>\r\n          Error en renderizado del mapa: {error.message || 'Desconocido'}\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  map: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  errorContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  errorText: {\r\n    color: '#f44336',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport const MapMarker = Marker;\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}