{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport HomeScreen from \"../screens/main/HomeScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport MissionsScreen from \"../screens/main/MissionsScreen\";\nimport JournalScreen from \"../screens/main/JournalScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar colors = {\n  primary: '#005F9E',\n  secondary: '#FFFFFF'\n};\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabsNavigator = function MainTabsNavigator() {\n  return _jsx(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: colors.primary,\n      tabBarInactiveTintColor: 'gray',\n      headerShown: false\n    },\n    children: _jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Inicio',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(Ionicons, {\n            name: focused ? 'home' : 'home-outline',\n            size: 24,\n            color: focused ? colors.primary : 'gray'\n          });\n        }\n      }\n    })\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    token = _useSelector.token;\n  console.log('Token:', token);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !token ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabsNavigator\n        }), _jsx(Stack.Screen, {\n          name: \"Map\",\n          component: MapScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Missions\",\n          component: MissionsScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Journal\",\n          component: JournalScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen\n        })]\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","Ionicons","LoginScreen","RegisterScreen","HomeScreen","MapScreen","MissionsScreen","JournalScreen","ProfileScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","colors","primary","secondary","Stack","Tab","MainTabsNavigator","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","name","component","options","title","tabBarIcon","_ref","focused","size","color","AppNavigator","_useSelector","state","auth","token","console","log"],"sources":["C:/Users/migue/miguel/TravelQuest/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../features/store';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport HomeScreen from '../screens/main/HomeScreen';\r\nimport MapScreen from '../screens/main/MapScreen';\r\nimport MissionsScreen from '../screens/main/MissionsScreen';\r\nimport JournalScreen from '../screens/main/JournalScreen';\r\nimport ProfileScreen from '../screens/main/ProfileScreen';\r\n\r\nconst colors = {\r\n  primary: '#005F9E',\r\n  secondary: '#FFFFFF',\r\n};\r\n\r\nexport type MainTabs = {\r\n  Home: undefined;\r\n};\r\n\r\nexport type RootStackParams = {\r\n  Login: undefined;\r\n  Register: undefined;\r\n  Main: undefined;\r\n  Map: undefined;\r\n  Missions: undefined;\r\n  Journal: undefined;\r\n  Profile: undefined;\r\n};\r\n\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParams>();\r\nconst Tab = createBottomTabNavigator<MainTabs>();\r\n\r\nconst MainTabsNavigator = () => (\r\n  <Tab.Navigator\r\n    screenOptions={{\r\n      tabBarActiveTintColor: colors.primary,\r\n      tabBarInactiveTintColor: 'gray',\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <Tab.Screen\r\n      name=\"Home\"\r\n      component={HomeScreen}\r\n      options={{\r\n        title: 'Inicio',\r\n        tabBarIcon: ({ focused }) => (\r\n          <Ionicons\r\n            name={focused ? 'home' : 'home-outline'}\r\n            size={24}\r\n            color={focused ? colors.primary : 'gray'}\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n  </Tab.Navigator>\r\n);\r\n\r\nconst AppNavigator = () => {\r\n  const { token } = useSelector((state: RootState) => state.auth);\r\n  console.log('Token:', token);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!token ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainTabsNavigator} />\r\n            <Stack.Screen name=\"Map\" component={MapScreen} />\r\n            <Stack.Screen name=\"Missions\" component={MissionsScreen} />\r\n            <Stack.Screen name=\"Journal\" component={JournalScreen} />\r\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}