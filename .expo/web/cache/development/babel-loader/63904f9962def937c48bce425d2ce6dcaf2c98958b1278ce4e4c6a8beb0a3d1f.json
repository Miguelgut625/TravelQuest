{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createClient } from '@supabase/supabase-js';\nimport 'react-native-url-polyfill/auto';\nvar supabaseUrl = 'https://ynyxyzzpbyzyejgkfncm.supabase.co';\nvar supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlueXh5enpwYnl6eWVqZ2tmbmNtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3ODI4NDMsImV4cCI6MjA1NzM1ODg0M30.ntEnr5gFT5tllc0Z037LJPkPq60SM_RBLa6hct72xXs';\nexport var supabase = createClient(supabaseUrl, supabaseAnonKey);\nexport var uploadImage = function () {\n  var _ref = _asyncToGenerator(function* (filePath, bucket) {\n    try {\n      var _yield$supabase$stora = yield supabase.storage.from(bucket).upload(filePath, filePath),\n        data = _yield$supabase$stora.data,\n        error = _yield$supabase$stora.error;\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      throw error;\n    }\n  });\n  return function uploadImage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMissionsByCity = function () {\n  var _ref2 = _asyncToGenerator(function* (cityId) {\n    try {\n      var _yield$supabase$from$ = yield supabase.from('missions').select('*').eq('cityId', cityId),\n        data = _yield$supabase$from$.data,\n        error = _yield$supabase$from$.error;\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error fetching missions:', error);\n      throw error;\n    }\n  });\n  return function getMissionsByCity(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateMissionProgress = function () {\n  var _ref3 = _asyncToGenerator(function* (missionId, userId, completed) {\n    try {\n      var _yield$supabase$from$2 = yield supabase.from('mission_progress').upsert({\n          mission_id: missionId,\n          user_id: userId,\n          completed: completed,\n          updated_at: new Date().toISOString()\n        }),\n        data = _yield$supabase$from$2.data,\n        error = _yield$supabase$from$2.error;\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error updating mission progress:', error);\n      throw error;\n    }\n  });\n  return function updateMissionProgress(_x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["createClient","supabaseUrl","supabaseAnonKey","supabase","uploadImage","_ref","_asyncToGenerator","filePath","bucket","_yield$supabase$stora","storage","from","upload","data","error","console","_x","_x2","apply","arguments","getMissionsByCity","_ref2","cityId","_yield$supabase$from$","select","eq","_x3","updateMissionProgress","_ref3","missionId","userId","completed","_yield$supabase$from$2","upsert","mission_id","user_id","updated_at","Date","toISOString","_x4","_x5","_x6"],"sources":["C:/Users/Guacter/TravelQuest/src/services/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport 'react-native-url-polyfill/auto';\r\n\r\nconst supabaseUrl = 'https://ynyxyzzpbyzyejgkfncm.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlueXh5enpwYnl6eWVqZ2tmbmNtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3ODI4NDMsImV4cCI6MjA1NzM1ODg0M30.ntEnr5gFT5tllc0Z037LJPkPq60SM_RBLa6hct72xXs';\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// Funciones auxiliares para interactuar con Supabase\r\nexport const uploadImage = async (filePath: string, bucket: string) => {\r\n  try {\r\n    const { data, error } = await supabase.storage\r\n      .from(bucket)\r\n      .upload(filePath, filePath);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error uploading image:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMissionsByCity = async (cityId: string) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('missions')\r\n      .select('*')\r\n      .eq('cityId', cityId);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching missions:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateMissionProgress = async (missionId: string, userId: string, completed: boolean) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('mission_progress')\r\n      .upsert({\r\n        mission_id: missionId,\r\n        user_id: userId,\r\n        completed,\r\n        updated_at: new Date().toISOString(),\r\n      });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error updating mission progress:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":";AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,OAAO,gCAAgC;AAEvC,IAAMC,WAAW,GAAG,0CAA0C;AAC9D,IAAMC,eAAe,GAAG,kNAAkN;AAE1O,OAAO,IAAMC,QAAQ,GAAGH,YAAY,CAACC,WAAW,EAAEC,eAAe,CAAC;AAGlE,OAAO,IAAME,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAgB,EAAEC,MAAc,EAAK;IACrE,IAAI;MACF,IAAAC,qBAAA,SAA8BN,QAAQ,CAACO,OAAO,CAC3CC,IAAI,CAACH,MAAM,CAAC,CACZI,MAAM,CAACL,QAAQ,EAAEA,QAAQ,CAAC;QAFrBM,IAAI,GAAAJ,qBAAA,CAAJI,IAAI;QAAEC,KAAK,GAAAL,qBAAA,CAALK,KAAK;MAInB,IAAIA,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAZYV,WAAWA,CAAAY,EAAA,EAAAC,GAAA;IAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYvB;AAED,OAAO,IAAMC,iBAAiB;EAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,MAAc,EAAK;IACzD,IAAI;MACF,IAAAC,qBAAA,SAA8BpB,QAAQ,CACnCQ,IAAI,CAAC,UAAU,CAAC,CAChBa,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,QAAQ,EAAEH,MAAM,CAAC;QAHfT,IAAI,GAAAU,qBAAA,CAAJV,IAAI;QAAEC,KAAK,GAAAS,qBAAA,CAALT,KAAK;MAKnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAbYM,iBAAiBA,CAAAM,GAAA;IAAA,OAAAL,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAa7B;AAED,OAAO,IAAMQ,qBAAqB;EAAA,IAAAC,KAAA,GAAAtB,iBAAA,CAAG,WAAOuB,SAAiB,EAAEC,MAAc,EAAEC,SAAkB,EAAK;IACpG,IAAI;MACF,IAAAC,sBAAA,SAA8B7B,QAAQ,CACnCQ,IAAI,CAAC,kBAAkB,CAAC,CACxBsB,MAAM,CAAC;UACNC,UAAU,EAAEL,SAAS;UACrBM,OAAO,EAAEL,MAAM;UACfC,SAAS,EAATA,SAAS;UACTK,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC,CAAC;QAPIzB,IAAI,GAAAmB,sBAAA,CAAJnB,IAAI;QAAEC,KAAK,GAAAkB,sBAAA,CAALlB,KAAK;MASnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAjBYa,qBAAqBA,CAAAY,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAb,KAAA,CAAAV,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiBjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}